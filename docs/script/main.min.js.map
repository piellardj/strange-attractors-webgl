{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/ts/parameters.ts","webpack:///./src/ts/gl-utils/gl-canvas.ts","webpack:///./src/ts/attractors/attractor.ts","webpack:///./src/ts/gl-utils/gl-resource.ts","webpack:///./src/ts/main.ts","webpack:///./src/ts/gl-utils/viewport.ts","webpack:///./src/ts/attractors/bedhead.ts","webpack:///./src/ts/gl-utils/shader-manager.ts","webpack:///./src/ts/gl-utils/shader.ts","webpack:///./src/ts/gl-utils/shader-sources.ts","webpack:///./src/ts/gl-utils/vbo.ts","webpack:///./src/ts/attractors/clifford.ts","webpack:///./src/ts/attractors/de-jong.ts","webpack:///./src/ts/attractors/fractal-dream.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","attractorNames","DeJong","Bedhead","Clifford","FractalDream","controlId","ATTRACTOR","A","B","C","D","AUTORUN","QUALITY","callObservers","observersList","_i","observersList_1","length","observer","ControlsID","attractor","a","b","autorun","quality","observers","Parameters","att","Picker","setValue","addObserver","Range","newvalue","getValue","Checkbox","checked","isChecked","gl","initGL","flags","setError","message","Demopage","setErrorMessage","canvas","Canvas","getCanvas","getContext","disable","CULL_FACE","DEPTH_TEST","BLEND","clearColor","adjustSize","hidpi","cssPixel","window","devicePixelRatio","width","Math","floor","clientWidth","height","clientHeight","gl_canvas_1","ShaderManager","__importStar","vbo_1","__importDefault","parameters_1","shader","pointsVBO","Attractor","buildShader","fragmentFilename","vertexFilename","injected","newShader","fillData","Float32Array","default","FLOAT","drawXPoints","nbPoints","this","resetBoundaries","data","computeXPoints","setData","canvasSize","getSize","aspectRatio","VBO","q","u","maxX","minX","maxY","minY","max","min","use","bindUniformsAndAttributes","drawArrays","POINTS","GLResource","_gl","GLCanvas","viewport_1","bedhead_1","clifford_1","de_jong_1","fractal_dream_1","alpha","depth","preserveDrawingBuffer","enable","blendEquation","FUNC_ADD","blendFunc","ONE","needToAdjustCanvas","Observers","canvasResize","push","clearObservers","totalPoints","attractors","setTotalPoints","total","setIndicatorText","toLocaleString","requestAnimationFrame","mainLoop","setFullCanvas","clear","COLOR_BUFFER_BIT","toggleParametersVisibility","STEP_SIZE","pow","main","Viewport","left","lower","viewport","drawingBufferWidth","drawingBufferHeight","set","BeadheadAttractor","_super","__extends","Controls","setVisibility","x","random","y","sin","cos","shader_1","ShaderSources","cachedShaders","infos","callback","sourcesPending","sourcesFailed","loadedSource","success","processSource","source","replace","match","vert","getSource","frag","processedVert","processedFrag","loadSource","getShader","registerShader","callAndClearCallbacks","cached","_a","callbacks","cachedCallback","failed","pending","cached_1","builtShader","deleteShader","freeGLResources","gl_resource_1","notImplemented","location","alert","types","35664","str","binder","uniform2fv","35665","uniform3fv","35666","uniform4fv","35667","uniform2iv","35668","uniform3iv","35669","uniform4iv","35670","uniform1i","35671","35672","35673","35674","uniformMatrix2fv","35675","uniformMatrix3fv","35676","uniformMatrix4fv","35678","unitNb","activeTexture","bindTexture","TEXTURE_2D","35680","TEXTURE_CUBE_MAP","5120","5121","5122","5123","5124","Array","isArray","uniform1iv","5125","5126","uniform1fv","uniform1f","ShaderProgram","vertexSource","fragmentSource","_this","createShader","type","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","console","error","getShaderInfoLog","id","uCount","aCount","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","introspection","getProgramInfoLog","deleteProgram","useProgram","bindUniforms","currTextureUnitNb","keys","forEach","uName","uniform","loc","bindAttributes","aName","attribute","ACTIVE_UNIFORMS","getActiveUniform","name_1","getUniformLocation","size","ACTIVE_ATTRIBUTES","getActiveAttrib","name_2","getAttribLocation","cachedSources","filename","text","xhr_1","XMLHttpRequest","open","onload","readyState","status","responseText","statusText","onerror","send","Usage","array","staticUsage","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","DYNAMIC_DRAW","normalize","stride","offset","usage","STATIC","DYNAMIC","createQuad","deleteBuffer","enableVertexAttribArray","vertexAttribPointer","CliffordAttractor","DeJongAttractor","FractalDreamAttractor"],"mappings":"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","file":"main.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","declare const Button: any;\r\ndeclare const Canvas: any;\r\ndeclare const Checkbox: any;\r\ndeclare const Controls: any;\r\ndeclare const FileControl: any;\r\ndeclare const Picker: any;\r\ndeclare const Range: any;\r\ndeclare const Tabs: any;\r\n\r\nconst attractorNames = {\r\n    DeJong: \"de-jong\",\r\n    Bedhead: \"bedhead\",\r\n    Clifford: \"clifford\",\r\n    FractalDream: \"fractal-dream\",\r\n};\r\n\r\n/* === IDs ============================================================ */\r\nconst controlId = {\r\n    ATTRACTOR: \"attractor-picker-id\",\r\n    A: \"a-range-id\",\r\n    B: \"b-range-id\",\r\n    C: \"c-range-id\",\r\n    D: \"d-range-id\",\r\n    AUTORUN: \"autorun-checkbox-id\",\r\n    QUALITY: \"quality-range-id\",\r\n};\r\n\r\n/* === OBSERVERS ====================================================== */\r\ntype GenericObserver = () => void;\r\n\r\nfunction callObservers(observersList: any[]): void {\r\n    for (const observer of observersList) {\r\n        observer();\r\n    }\r\n}\r\n\r\nconst observers: {\r\n    clear: GenericObserver[],\r\n} = {\r\n    clear: [],\r\n};\r\n\r\nlet attractor: string;\r\nlet a: number;\r\nlet b: number;\r\nlet c: number;\r\nlet d: number;\r\n\r\nlet autorun: boolean;\r\nlet quality: number;\r\n\r\n/* === INTERFACE ====================================================== */\r\nclass Parameters {\r\n    public static get attractor(): string {\r\n        return attractor;\r\n    }\r\n    public static set attractor(att: string) {\r\n        Picker.setValue(controlId.ATTRACTOR, att);\r\n        attractor = att;\r\n    }\r\n\r\n    public static get a(): number {\r\n        return a;\r\n    }\r\n\r\n    public static get b(): number {\r\n        return b;\r\n    }\r\n\r\n    public static get c(): number {\r\n        return c;\r\n    }\r\n\r\n    public static get d(): number {\r\n        return d;\r\n    }\r\n\r\n    public static get autorun(): boolean {\r\n        return autorun;\r\n    }\r\n\r\n    public static get quality(): number {\r\n        return quality;\r\n    }\r\n\r\n    public static get clearObservers(): GenericObserver[] {\r\n        return observers.clear;\r\n    }\r\n\r\n    private constructor() {}\r\n}\r\n\r\n/* === EVENTS BINDING ================================================= */\r\n/* --- PARAMETERS ----------------------------------------------------- */\r\nPicker.addObserver(controlId.ATTRACTOR, (value: string) => {\r\n    attractor = value;\r\n    callObservers(observers.clear);\r\n});\r\n\r\nRange.addObserver(controlId.A, (newvalue: number) => {\r\n    a = newvalue;\r\n    callObservers(observers.clear);\r\n});\r\na = Range.getValue(controlId.A);\r\n\r\nRange.addObserver(controlId.B, (newvalue: number) => {\r\n    b = newvalue;\r\n    callObservers(observers.clear);\r\n});\r\nb = Range.getValue(controlId.B);\r\n\r\nRange.addObserver(controlId.C, (newvalue: number) => {\r\n    c = newvalue;\r\n    callObservers(observers.clear);\r\n});\r\nc = Range.getValue(controlId.C);\r\n\r\nRange.addObserver(controlId.D, (newvalue: number) => {\r\n    d = newvalue;\r\n    callObservers(observers.clear);\r\n});\r\nd = Range.getValue(controlId.D);\r\n\r\nCheckbox.addObserver(controlId.AUTORUN, (checked: boolean) => {\r\n    autorun = checked;\r\n});\r\nautorun = Checkbox.isChecked(controlId.AUTORUN);\r\n\r\nRange.addObserver(controlId.QUALITY, (newvalue: number) => {\r\n    quality = newvalue;\r\n    callObservers(observers.clear);\r\n});\r\nquality = Range.getValue(controlId.QUALITY);\r\n\r\nexport {\r\n    attractorNames,\r\n    controlId as ControlsID,\r\n    Parameters,\r\n};\r\n","declare const Demopage: any;\r\ndeclare const Canvas: any;\r\n\r\nlet gl: WebGLRenderingContext = null;\r\n\r\n/** Initializes a WebGL context */\r\nfunction initGL(flags: any): boolean {\r\n    function setError(message: string) {\r\n        Demopage.setErrorMessage(\"webgl-support\", message);\r\n    }\r\n\r\n    const canvas = Canvas.getCanvas();\r\n\r\n    gl = canvas.getContext(\"webgl\", flags) as WebGLRenderingContext;\r\n    if (gl == null) {\r\n        gl = canvas.getContext(\"experimental-webgl\", flags) as WebGLRenderingContext;\r\n        if (gl == null) {\r\n            setError(\"Your browser or device does not seem to support WebGL.\");\r\n            return false;\r\n        }\r\n\r\n        setError(\"Your browser or device only supports experimental WebGL.\\n\" +\r\n            \"The simulation may not run as expected.\");\r\n    }\r\n\r\n    gl.disable(gl.CULL_FACE);\r\n    gl.disable(gl.DEPTH_TEST);\r\n    gl.disable(gl.BLEND);\r\n    gl.clearColor(0, 0, 0, 1);\r\n\r\n    return true;\r\n}\r\n\r\n/* Adjusts the GL canvas size to the actual canvas element size on the page */\r\nfunction adjustSize(hidpi: boolean = false): void {\r\n    const cssPixel: number = (hidpi) ? window.devicePixelRatio : 1;\r\n\r\n    const width: number = Math.floor(gl.canvas.clientWidth * cssPixel);\r\n    const height: number = Math.floor(gl.canvas.clientHeight * cssPixel);\r\n    if (gl.canvas.width !== width || gl.canvas.height !== height) {\r\n        gl.canvas.width = width;\r\n        gl.canvas.height = height;\r\n    }\r\n}\r\n\r\nexport {\r\n    adjustSize,\r\n    initGL,\r\n    gl,\r\n};\r\n","import { gl } from \"../gl-utils/gl-canvas\";\r\nimport Shader from \"../gl-utils/shader\";\r\nimport * as ShaderManager from \"../gl-utils/shader-manager\";\r\nimport VBO from \"../gl-utils/vbo\";\r\nimport { Parameters } from \"../parameters\";\r\n\r\nlet shader: Shader = null;\r\nlet pointsVBO: VBO = null;\r\n\r\ndeclare const Canvas: any;\r\n\r\nabstract class Attractor {\r\n    protected minX: number;\r\n    protected maxX: number;\r\n    protected minY: number;\r\n    protected maxY: number;\r\n\r\n    constructor() {\r\n        if (shader === null) {\r\n            ShaderManager.buildShader(\r\n                {\r\n                    fragmentFilename: \"points.frag\",\r\n                    vertexFilename: \"points.vert\",\r\n                    injected: {},\r\n                },\r\n                (newShader) => {\r\n                    if (newShader !== null) {\r\n                        shader = newShader;\r\n                    }\r\n                },\r\n            );\r\n        }\r\n\r\n        if (pointsVBO === null) {\r\n            const fillData = new Float32Array(2);\r\n            pointsVBO = new VBO(gl, fillData, 2, gl.FLOAT, false);\r\n        }\r\n    }\r\n\r\n    public drawXPoints(nbPoints: number): void {\r\n        if (shader) {\r\n            this.resetBoundaries();\r\n            const data = this.computeXPoints(nbPoints);\r\n            pointsVBO.setData(data);\r\n\r\n            const canvasSize = Canvas.getSize();\r\n            const aspectRatio = canvasSize[0] / canvasSize[1];\r\n\r\n            /* tslint:disable:no-string-literal */\r\n            shader.a[\"aCoords\"].VBO = pointsVBO;\r\n            const q = 1 - 254 / 255 * Parameters.quality;\r\n            shader.u[\"uColor\"].value = [q, q, q, 1];\r\n            shader.u[\"uCenter\"].value = [\r\n                0.5 * (this.maxX + this.minX),\r\n                0.5 * (this.maxY + this.minY),\r\n            ];\r\n            shader.u[\"uScale\"].value = [\r\n                2 / (0.1 + this.maxX - this.minX) / Math.max(aspectRatio, 1),\r\n                2 / (0.1 + this.maxY - this.minY) * Math.min(aspectRatio, 1),\r\n            ];\r\n            /* tslint:enable:no-string-literal */\r\n\r\n            shader.use();\r\n            shader.bindUniformsAndAttributes();\r\n\r\n            gl.drawArrays(gl.POINTS, 0, nbPoints);\r\n        }\r\n    }\r\n\r\n    public abstract toggleParametersVisibility(): void;\r\n\r\n    /* Should update minX, maxX, minY and maxY */\r\n    protected abstract computeXPoints(nbPoints: number): Float32Array;\r\n\r\n    private resetBoundaries(): void {\r\n        this.minX = 0;\r\n        this.maxX = 0;\r\n        this.minY = 0;\r\n        this.maxY = 0;\r\n    }\r\n}\r\n\r\nexport default Attractor;\r\n","abstract class GLResource {\r\n    private _gl: WebGLRenderingContext;\r\n\r\n    constructor(gl: WebGLRenderingContext) {\r\n        this._gl = gl;\r\n    }\r\n\r\n    public gl(): WebGLRenderingContext {\r\n        return this._gl;\r\n    }\r\n\r\n    public abstract freeGLResources(): void;\r\n}\r\n\r\nexport default GLResource;\r\n","import * as GLCanvas from \"./gl-utils/gl-canvas\";\r\nimport { gl } from \"./gl-utils/gl-canvas\";\r\nimport Viewport from \"./gl-utils/viewport\";\r\n\r\nimport Attractor from \"./attractors/attractor\";\r\nimport BedHeadAttractor from \"./attractors/bedhead\";\r\nimport CliffordAttractor from \"./attractors/clifford\";\r\nimport DeJongAttractor from \"./attractors/de-jong\";\r\nimport FractalDreamAttractor from \"./attractors/fractal-dream\";\r\nimport { attractorNames, Parameters } from \"./parameters\";\r\n\r\ndeclare const Canvas: any;\r\n\r\nfunction main() {\r\n    initGL();\r\n\r\n    let needToAdjustCanvas = true;\r\n    Canvas.Observers.canvasResize.push(() => needToAdjustCanvas = true);\r\n    Parameters.clearObservers.push(() => needToAdjustCanvas = true);\r\n\r\n    Parameters.attractor = attractorNames.DeJong;\r\n\r\n    const attractors = {};\r\n    attractors[attractorNames.Bedhead] = new BedHeadAttractor();\r\n    attractors[attractorNames.Clifford] = new CliffordAttractor();\r\n    attractors[attractorNames.DeJong] = new DeJongAttractor();\r\n    attractors[attractorNames.FractalDream] = new FractalDreamAttractor();\r\n\r\n    let totalPoints: number;\r\n    function setTotalPoints(total: number): void {\r\n        totalPoints = total;\r\n        Canvas.setIndicatorText(\"points-drawn\", totalPoints.toLocaleString());\r\n    }\r\n    setTotalPoints(0);\r\n\r\n    let attractor: Attractor;\r\n    function mainLoop() {\r\n        if (needToAdjustCanvas) {\r\n            needToAdjustCanvas = false;\r\n            setTotalPoints(0);\r\n\r\n            GLCanvas.adjustSize();\r\n            Viewport.setFullCanvas(gl);\r\n            gl.clear(gl.COLOR_BUFFER_BIT);\r\n\r\n            attractor = attractors[Parameters.attractor];\r\n            attractor.toggleParametersVisibility();\r\n        }\r\n\r\n        if (Parameters.autorun) {\r\n            const STEP_SIZE = Math.pow(2, 16);\r\n            setTotalPoints(totalPoints + STEP_SIZE);\r\n            attractor.drawXPoints(STEP_SIZE);\r\n        }\r\n\r\n        requestAnimationFrame(mainLoop);\r\n    }\r\n\r\n    requestAnimationFrame(mainLoop);\r\n\r\n    function initGL() {\r\n        const glParams = {\r\n            alpha: false,\r\n            depth: false,\r\n            preserveDrawingBuffer: true,\r\n        };\r\n        if (!GLCanvas.initGL(glParams)) {\r\n            return;\r\n        }\r\n\r\n        gl.enable(gl.BLEND);\r\n        gl.clearColor(0, 0, 0, 1);\r\n        gl.blendEquation(gl.FUNC_ADD);\r\n        gl.blendFunc(gl.ONE, gl.ONE);\r\n    }\r\n}\r\n\r\nmain();\r\n","class Viewport {\r\n    public static setFullCanvas(gl: WebGLRenderingContext): void {\r\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\r\n    }\r\n\r\n    public lower: number;\r\n    public left: number;\r\n    public width: number;\r\n    public height: number;\r\n\r\n    constructor(left: number, lower: number, width: number, height: number) {\r\n        this.left = left;\r\n        this.lower = lower;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n\r\n    public set(gl: WebGLRenderingContext): void {\r\n        gl.viewport(this.lower, this.left, this.width, this.height);\r\n    }\r\n}\r\n\r\nexport default Viewport;\r\n","import { ControlsID, Parameters } from \"../parameters\";\r\nimport Attractor from \"./attractor\";\r\n\r\ndeclare const Controls: any;\r\n\r\nclass BeadheadAttractor extends Attractor {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    public toggleParametersVisibility(): void {\r\n        Controls.setVisibility(ControlsID.A, true);\r\n        Controls.setVisibility(ControlsID.B, true);\r\n        Controls.setVisibility(ControlsID.C, false);\r\n        Controls.setVisibility(ControlsID.D, false);\r\n    }\r\n\r\n    protected computeXPoints(nbPoints: number): Float32Array {\r\n        const data = new Float32Array(2 * nbPoints);\r\n\r\n        const a = Parameters.a;\r\n        const b = Parameters.b;\r\n\r\n        let x = Math.random() * 2 - 1;\r\n        let y = Math.random() * 2 - 1;\r\n\r\n        /* ignore the first 1000 ones */\r\n        for (let i = 0; i < 100; ++i) {\r\n            data[0] = Math.sin(x * y / b) + Math.cos(a * x - y);\r\n            data[1] = x + Math.sin(y) / b;\r\n\r\n            x = data[0];\r\n            y = data[1];\r\n        }\r\n\r\n        for (let i = 0; i < nbPoints; ++i) {\r\n            data[2 * i + 0] = Math.sin(x * y / b) + Math.cos(a * x - y);\r\n            data[2 * i + 1] = x + Math.sin(y) / b;\r\n\r\n            x = data[2 * i + 0];\r\n            y = data[2 * i + 1];\r\n\r\n            this.minX = Math.min(this.minX, x);\r\n            this.minY = Math.min(this.minY, y);\r\n\r\n            this.maxX = Math.max(this.maxX, x);\r\n            this.maxY = Math.max(this.maxY, y);\r\n        }\r\n        return data;\r\n    }\r\n}\r\n\r\nexport default BeadheadAttractor;\r\n","import { gl } from \"./gl-canvas\";\r\nimport Shader from \"./shader\";\r\nimport * as ShaderSources from \"./shader-sources\";\r\n\r\ntype RegisterCallback = (success: boolean, shader: Shader | null) => void;\r\n\r\ninterface IShaderInfos {\r\n    fragmentFilename: string;\r\n    vertexFilename: string;\r\n    injected: { [id: string]: string };\r\n}\r\n\r\ninterface ICachedShader {\r\n    shader: Shader;\r\n    infos: IShaderInfos;\r\n    pending: boolean;\r\n    failed: boolean;\r\n    callbacks: RegisterCallback[];\r\n}\r\n\r\nconst cachedShaders: { [id: string]: ICachedShader} = {};\r\n\r\nfunction getShader(name: string): Shader | null {\r\n    return cachedShaders[name].shader;\r\n}\r\n\r\ntype BuildCallback = (builtShader: Shader | null) => void;\r\n\r\nfunction buildShader(infos: IShaderInfos, callback: BuildCallback) {\r\n    let sourcesPending = 2;\r\n    let sourcesFailed = 0;\r\n\r\n    function loadedSource(success: boolean) {\r\n        function processSource(source: string): string {\r\n            return source.replace(/#INJECT\\((.*)\\)/mg, (match, name) => {\r\n                if (infos.injected[name]) {\r\n                    return infos.injected[name];\r\n                }\r\n                return match;\r\n            });\r\n        }\r\n\r\n        sourcesPending--;\r\n        if (!success) {\r\n            sourcesFailed++;\r\n        }\r\n\r\n        if (sourcesPending === 0) {\r\n            let shader = null;\r\n\r\n            if (sourcesFailed === 0) {\r\n                const vert = ShaderSources.getSource(infos.vertexFilename);\r\n                const frag = ShaderSources.getSource(infos.fragmentFilename);\r\n\r\n                const processedVert = processSource(vert);\r\n                const processedFrag = processSource(frag);\r\n\r\n                shader = new Shader(gl, processedVert, processedFrag);\r\n            }\r\n\r\n            callback(shader);\r\n        }\r\n    }\r\n\r\n    ShaderSources.loadSource(infos.vertexFilename, loadedSource);\r\n    ShaderSources.loadSource(infos.fragmentFilename, loadedSource);\r\n}\r\n\r\nfunction registerShader(name: string, infos: IShaderInfos, callback: RegisterCallback): void {\r\n    function callAndClearCallbacks(cached: ICachedShader) {\r\n        for (const cachedCallback of cached.callbacks) {\r\n            cachedCallback(!cached.failed, cached.shader);\r\n        }\r\n\r\n        cached.callbacks = [];\r\n    }\r\n\r\n    if (typeof cachedShaders[name] === \"undefined\") {\r\n        cachedShaders[name] = {\r\n            callbacks: [callback],\r\n            failed: false,\r\n            infos,\r\n            pending: true,\r\n            shader: null,\r\n        };\r\n        const cached = cachedShaders[name];\r\n\r\n        buildShader(infos, (builtShader) => {\r\n            cached.pending = false;\r\n            cached.failed = builtShader === null;\r\n            cached.shader = builtShader;\r\n\r\n            callAndClearCallbacks(cached);\r\n        });\r\n    } else {\r\n        const cached = cachedShaders[name];\r\n\r\n        if (cached.pending === true) {\r\n            cached.callbacks.push(callback);\r\n        } else {\r\n            callAndClearCallbacks(cached);\r\n        }\r\n    }\r\n}\r\n\r\nfunction deleteShader(name: string) {\r\n    if (cachedShaders[name]) {\r\n        if (cachedShaders[name].shader) {\r\n            cachedShaders[name].shader.freeGLResources();\r\n        }\r\n        delete cachedShaders[name];\r\n    }\r\n}\r\n\r\nexport {\r\n    buildShader,\r\n    getShader,\r\n    IShaderInfos,\r\n    registerShader,\r\n    deleteShader,\r\n};\r\n","import GLResource from \"./gl-resource\";\r\nimport VBO from \"./vbo\";\r\n\r\nfunction notImplemented(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    alert(\"NOT IMPLEMENTED YET\");\r\n}\r\n\r\nfunction bindUniformFloat(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number | number[]): void;\r\nfunction bindUniformFloat(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    if (Array.isArray(value)) {\r\n        gl.uniform1fv(location, value);\r\n    } else {\r\n        gl.uniform1f(location, value);\r\n    }\r\n}\r\n\r\nfunction bindUniformFloat2v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform2fv(location, value);\r\n}\r\n\r\nfunction bindUniformFloat3v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform3fv(location, value);\r\n}\r\n\r\nfunction bindUniformFloat4v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform4fv(location, value);\r\n}\r\n\r\nfunction bindUniformInt(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number | number[]): void;\r\nfunction bindUniformInt(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    if (Array.isArray(value)) {\r\n        gl.uniform1iv(location, value);\r\n    } else {\r\n        gl.uniform1iv(location, value);\r\n    }\r\n}\r\n\r\nfunction bindUniformInt2v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform2iv(location, value);\r\n}\r\n\r\nfunction bindUniformInt3v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform3iv(location, value);\r\n}\r\n\r\nfunction bindUniformInt4v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform4iv(location, value);\r\n}\r\n\r\nfunction bindUniformBool(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: boolean | number): void {\r\n    gl.uniform1i(location, +value);\r\n}\r\n\r\nfunction bindUniformBool2v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value): void {\r\n    gl.uniform2iv(location, value);\r\n}\r\n\r\nfunction bindUniformBool3v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value): void {\r\n    gl.uniform3iv(location, value);\r\n}\r\n\r\nfunction bindUniformBool4v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value): void {\r\n    gl.uniform4iv(location, value);\r\n}\r\n\r\nfunction bindUniformFloatMat2(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniformMatrix2fv(location, false, value);\r\n}\r\n\r\nfunction bindUniformFloatMat3(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniformMatrix3fv(location, false, value);\r\n}\r\n\r\nfunction bindUniformFloatMat4(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniformMatrix4fv(location, false, value);\r\n}\r\n\r\nfunction bindSampler2D(gl: WebGLRenderingContext, location: WebGLUniformLocation, unitNb: number,\r\n                       value: WebGLTexture): void {\r\n    gl.uniform1i(location, unitNb);\r\n    gl.activeTexture(gl[\"TEXTURE\" + unitNb]);\r\n    gl.bindTexture(gl.TEXTURE_2D, value);\r\n}\r\n\r\nfunction bindSamplerCube(gl: WebGLRenderingContext, location: WebGLUniformLocation, unitNb: number,\r\n                         value: WebGLTexture): void {\r\n    gl.uniform1i(location, unitNb);\r\n    gl.activeTexture(gl[\"TEXTURE\" + unitNb]);\r\n    gl.bindTexture(gl.TEXTURE_CUBE_MAP, value);\r\n}\r\n\r\n/* From WebGL spec:\r\n* http://www.khronos.org/registry/webgl/specs/latest/1.0/#5.14 */\r\nconst types = {\r\n    0x8B50: { str: \"FLOAT_VEC2\", binder: bindUniformFloat2v },\r\n    0x8B51: { str: \"FLOAT_VEC3\", binder: bindUniformFloat3v },\r\n    0x8B52: { str: \"FLOAT_VEC4\", binder: bindUniformFloat4v },\r\n    0x8B53: { str: \"INT_VEC2\", binder: bindUniformInt2v },\r\n    0x8B54: { str: \"INT_VEC3\", binder: bindUniformInt3v },\r\n    0x8B55: { str: \"INT_VEC4\", binder: bindUniformInt4v },\r\n    0x8B56: { str: \"BOOL\", binder: bindUniformBool },\r\n    0x8B57: { str: \"BOOL_VEC2\", binder: bindUniformBool2v },\r\n    0x8B58: { str: \"BOOL_VEC3\", binder: bindUniformBool3v },\r\n    0x8B59: { str: \"BOOL_VEC4\", binder: bindUniformBool4v },\r\n    0x8B5A: { str: \"FLOAT_MAT2\", binder: bindUniformFloatMat2 },\r\n    0x8B5B: { str: \"FLOAT_MAT3\", binder: bindUniformFloatMat3 },\r\n    0x8B5C: { str: \"FLOAT_MAT4\", binder: bindUniformFloatMat4 },\r\n    0x8B5E: { str: \"SAMPLER_2D\", binder: bindSampler2D },\r\n    0x8B60: { str: \"SAMPLER_CUBE\", binder: bindSamplerCube },\r\n    0x1400: { str: \"BYTE\", binder: notImplemented },\r\n    0x1401: { str: \"UNSIGNED_BYTE\", binder: notImplemented },\r\n    0x1402: { str: \"SHORT\", binder: notImplemented },\r\n    0x1403: { str: \"UNSIGNED_SHORT\", binder: notImplemented },\r\n    0x1404: { str: \"INT\", binder: bindUniformInt },\r\n    0x1405: { str: \"UNSIGNED_INT\", binder: notImplemented },\r\n    0x1406: { str: \"FLOAT\", binder: bindUniformFloat },\r\n};\r\n\r\ninterface IShaderUniform {\r\n    value: boolean | boolean[] | number | number[] | WebGLTexture | WebGLTexture[];\r\n    loc: WebGLUniformLocation;\r\n    size: number;\r\n    type: number;\r\n}\r\n\r\ninterface IShaderAttribute {\r\n    VBO: VBO;\r\n    loc: GLint;\r\n    size: number;\r\n    type: number;\r\n}\r\n\r\nclass ShaderProgram extends GLResource {\r\n    public u: IShaderUniform[];\r\n    public a: IShaderAttribute[];\r\n\r\n    private id: WebGLProgram;\r\n    private uCount: number;\r\n    private aCount: number;\r\n\r\n    constructor(gl: WebGLRenderingContext, vertexSource: string, fragmentSource: string) {\r\n        function createShader(type: GLenum, source: string): WebGLShader {\r\n            const shader = gl.createShader(type);\r\n            gl.shaderSource(shader, source);\r\n            gl.compileShader(shader);\r\n\r\n            const compileSuccess = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n            if (!compileSuccess) {\r\n                console.error(gl.getShaderInfoLog(shader));\r\n                gl.deleteShader(shader);\r\n                return null;\r\n            }\r\n\r\n            return shader;\r\n        }\r\n\r\n        super(gl);\r\n\r\n        this.id = null;\r\n        this.uCount = 0;\r\n        this.aCount = 0;\r\n\r\n        const vertexShader = createShader(gl.VERTEX_SHADER, vertexSource);\r\n        const fragmentShader = createShader(gl.FRAGMENT_SHADER, fragmentSource);\r\n\r\n        const id = gl.createProgram();\r\n        gl.attachShader(id, vertexShader);\r\n        gl.attachShader(id, fragmentShader);\r\n        gl.linkProgram(id);\r\n\r\n        const linkSuccess = gl.getProgramParameter(id, gl.LINK_STATUS);\r\n        if (!linkSuccess) {\r\n            console.error(gl.getProgramInfoLog(id));\r\n            gl.deleteProgram(id);\r\n        } else {\r\n            this.id = id;\r\n\r\n            this.introspection();\r\n        }\r\n    }\r\n\r\n    public freeGLResources(): void {\r\n        super.gl().deleteProgram(this.id);\r\n        this.id = null;\r\n    }\r\n\r\n    public use(): void {\r\n        super.gl().useProgram(this.id);\r\n    }\r\n\r\n    public bindUniforms(): void {\r\n        const gl: WebGLRenderingContext = super.gl();\r\n        let currTextureUnitNb: number = 0;\r\n\r\n        Object.keys(this.u).forEach((uName) => {\r\n            const uniform = this.u[uName];\r\n            if (uniform.value !== null) {\r\n                if (uniform.type === 0x8B5E || uniform.type === 0x8B60) {\r\n                    const unitNb: number = currTextureUnitNb;\r\n                    types[uniform.type].binder(gl, uniform.loc, unitNb, uniform.value);\r\n                    currTextureUnitNb++;\r\n                } else {\r\n                    types[uniform.type].binder(gl, uniform.loc, uniform.value);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public bindAttributes(): void {\r\n        Object.keys(this.a).forEach((aName) => {\r\n            const attribute = this.a[aName];\r\n            if (attribute.VBO !== null) {\r\n                attribute.VBO.bind(attribute.loc);\r\n            }\r\n        });\r\n    }\r\n\r\n    public bindUniformsAndAttributes(): void {\r\n        this.bindUniforms();\r\n        this.bindAttributes();\r\n    }\r\n\r\n    private introspection(): void {\r\n        const gl = super.gl();\r\n\r\n        this.uCount = gl.getProgramParameter(this.id, gl.ACTIVE_UNIFORMS);\r\n        this.u = [];\r\n        for (let i = 0; i < this.uCount; ++i) {\r\n            const uniform = gl.getActiveUniform(this.id, i);\r\n            const name = uniform.name;\r\n\r\n            this.u[name] = {\r\n                loc: gl.getUniformLocation(this.id, name),\r\n                size: uniform.size,\r\n                type: uniform.type,\r\n                value: null,\r\n            };\r\n        }\r\n\r\n        this.aCount = gl.getProgramParameter(this.id, gl.ACTIVE_ATTRIBUTES);\r\n        this.a = [];\r\n        for (let i = 0; i < this.aCount; ++i) {\r\n            const attribute = gl.getActiveAttrib(this.id, i);\r\n            const name = attribute.name;\r\n\r\n            this.a[name] = {\r\n                VBO: null,\r\n                loc: gl.getAttribLocation(this.id, name),\r\n                size: attribute.size,\r\n                type: attribute.type,\r\n            };\r\n        }\r\n    }\r\n}\r\n\r\nexport default ShaderProgram;\r\n","type LoadCallback = (success: boolean)  => void;\r\n\r\ninterface ICachedSource {\r\n    text: string;\r\n    pending: boolean;\r\n    failed: boolean;\r\n    callbacks: LoadCallback[];\r\n}\r\n\r\nconst cachedSources: { [id: string]: ICachedSource } = {};\r\n\r\n/* Fetches asynchronously the shader source from server and stores it in cache. */\r\nfunction loadSource(filename: string, callback: LoadCallback) {\r\n    function callAndClearCallbacks(cached: ICachedSource) {\r\n        for (const cachedCallback of cached.callbacks) {\r\n            cachedCallback(!cached.failed);\r\n        }\r\n\r\n        cached.callbacks = [];\r\n    }\r\n\r\n    if (typeof cachedSources[filename] === \"undefined\") {\r\n        cachedSources[filename] = {\r\n            callbacks: [callback],\r\n            failed: false,\r\n            pending: true,\r\n            text: null,\r\n        };\r\n        const cached = cachedSources[filename];\r\n\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open(\"GET\", \"./shaders/\" + filename, true);\r\n        xhr.onload = () => {\r\n            if (xhr.readyState === 4) {\r\n                cached.pending = false;\r\n\r\n                if (xhr.status === 200) {\r\n                    cached.text = xhr.responseText;\r\n                    cached.failed = false;\r\n                } else {\r\n                    console.error(\"Cannot load '\" + filename + \"' shader source: \" + xhr.statusText);\r\n                    cached.failed = true;\r\n                }\r\n\r\n                callAndClearCallbacks(cached);\r\n            }\r\n        };\r\n        xhr.onerror = () => {\r\n            console.error(\"Cannot load '\" + filename + \"' shader source: \" + xhr.statusText);\r\n            cached.pending = false;\r\n            cached.failed = true;\r\n            callAndClearCallbacks(cached);\r\n        };\r\n\r\n        xhr.send(null);\r\n    } else {\r\n        const cached = cachedSources[filename];\r\n\r\n        if (cached.pending === true) {\r\n            cached.callbacks.push(callback);\r\n        } else {\r\n            cached.callbacks = [callback];\r\n            callAndClearCallbacks(cached);\r\n        }\r\n    }\r\n}\r\n\r\nfunction getSource(filename: string): string {\r\n    return cachedSources[filename].text;\r\n}\r\n\r\nexport {\r\n    getSource,\r\n    loadSource,\r\n};\r\n","import GLResource from \"./gl-resource\";\r\n\r\nenum Usage {\r\n    DYNAMIC,\r\n    STATIC,\r\n}\r\n\r\nclass VBO extends GLResource {\r\n    public static createQuad(gl: WebGLRenderingContext, minX: number, minY: number, maxX: number, maxY: number): VBO {\r\n        const vert = [\r\n            minX, minY,\r\n            maxX, minY,\r\n            minX, maxY,\r\n            maxX, maxY,\r\n        ];\r\n\r\n        return new VBO(gl, new Float32Array(vert), 2, gl.FLOAT, true);\r\n    }\r\n\r\n    private id: WebGLBuffer;\r\n    private size: number;\r\n    private type: GLenum;\r\n    private normalize: GLboolean;\r\n    private stride: GLsizei;\r\n    private offset: GLintptr;\r\n    private usage: Usage;\r\n\r\n    constructor(gl: WebGLRenderingContext, array: any, size: number, type: GLenum, staticUsage: boolean = true) {\r\n        super(gl);\r\n\r\n        this.id = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.id);\r\n        if (staticUsage) {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.STATIC_DRAW);\r\n        } else {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.DYNAMIC_DRAW);\r\n        }\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n\r\n        this.size = size;\r\n        this.type = type;\r\n        this.normalize = false;\r\n        this.stride = 0;\r\n        this.offset = 0;\r\n        this.usage = (staticUsage) ? Usage.STATIC : Usage.DYNAMIC;\r\n    }\r\n\r\n    public freeGLResources(): void {\r\n        this.gl().deleteBuffer(this.id);\r\n        this.id = null;\r\n    }\r\n\r\n    public bind(location: GLuint): void {\r\n        const gl = super.gl();\r\n        gl.enableVertexAttribArray(location);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.id);\r\n        gl.vertexAttribPointer(location, this.size, this.type, this.normalize, this.stride, this.offset);\r\n    }\r\n\r\n    public setData(array: any): void {\r\n        const gl = super.gl();\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.id);\r\n        if (this.usage === Usage.STATIC) {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.STATIC_DRAW);\r\n        } else {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.DYNAMIC_DRAW);\r\n        }\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n    }\r\n}\r\n\r\nexport default VBO;\r\n","import { ControlsID, Parameters } from \"../parameters\";\r\nimport Attractor from \"./attractor\";\r\n\r\ndeclare const Controls: any;\r\n\r\nclass CliffordAttractor extends Attractor {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    public toggleParametersVisibility(): void {\r\n        Controls.setVisibility(ControlsID.A, true);\r\n        Controls.setVisibility(ControlsID.B, true);\r\n        Controls.setVisibility(ControlsID.C, true);\r\n        Controls.setVisibility(ControlsID.D, true);\r\n    }\r\n\r\n    protected computeXPoints(nbPoints: number): Float32Array {\r\n        const data = new Float32Array(2 * nbPoints);\r\n\r\n        const a = Parameters.a;\r\n        const b = Parameters.b;\r\n        const c = Parameters.c;\r\n        const d = Parameters.d;\r\n\r\n        let x = Math.random() * 2 - 1;\r\n        let y = Math.random() * 2 - 1;\r\n\r\n        /* ignore the first 1000 ones */\r\n        for (let i = 0; i < 100; ++i) {\r\n            data[0] = Math.sin(a * y) + c * Math.cos(a * x);\r\n            data[1] = Math.sin(c * x) + d * Math.cos(b * y);\r\n\r\n            x = data[0];\r\n            y = data[1];\r\n        }\r\n\r\n        for (let i = 0; i < nbPoints; ++i) {\r\n            data[2 * i + 0] = Math.sin(a * y) + c * Math.cos(a * x);\r\n            data[2 * i + 1] = Math.sin(c * x) + d * Math.cos(b * y);\r\n\r\n            x = data[2 * i + 0];\r\n            y = data[2 * i + 1];\r\n\r\n            this.minX = Math.min(this.minX, x);\r\n            this.minY = Math.min(this.minY, y);\r\n\r\n            this.maxX = Math.max(this.maxX, x);\r\n            this.maxY = Math.max(this.maxY, y);\r\n        }\r\n        return data;\r\n    }\r\n}\r\n\r\nexport default CliffordAttractor;\r\n","import { ControlsID, Parameters } from \"../parameters\";\r\nimport Attractor from \"./attractor\";\r\n\r\ndeclare const Controls: any;\r\n\r\nclass DeJongAttractor extends Attractor {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    public toggleParametersVisibility(): void {\r\n        Controls.setVisibility(ControlsID.A, true);\r\n        Controls.setVisibility(ControlsID.B, true);\r\n        Controls.setVisibility(ControlsID.C, true);\r\n        Controls.setVisibility(ControlsID.D, true);\r\n    }\r\n\r\n    protected computeXPoints(nbPoints: number): Float32Array {\r\n        const data = new Float32Array(2 * nbPoints);\r\n\r\n        const a = Parameters.a;\r\n        const b = Parameters.b;\r\n        const c = Parameters.c;\r\n        const d = Parameters.d;\r\n\r\n        let x = Math.random() * 2 - 1;\r\n        let y = Math.random() * 2 - 1;\r\n\r\n        /* ignore the first 1000 ones */\r\n        for (let i = 0; i < 100; ++i) {\r\n            data[0] = Math.sin(a * y) - Math.cos(b * x);\r\n            data[1] = Math.sin(c * x) - Math.cos(d * y);\r\n\r\n            x = data[0];\r\n            y = data[1];\r\n        }\r\n\r\n        for (let i = 0; i < nbPoints; ++i) {\r\n            data[2 * i + 0] = Math.sin(a * y) - Math.cos(b * x);\r\n            data[2 * i + 1] = Math.sin(c * x) - Math.cos(d * y);\r\n\r\n            x = data[2 * i + 0];\r\n            y = data[2 * i + 1];\r\n\r\n            this.minX = Math.min(this.minX, x);\r\n            this.minY = Math.min(this.minY, y);\r\n\r\n            this.maxX = Math.max(this.maxX, x);\r\n            this.maxY = Math.max(this.maxY, y);\r\n        }\r\n        return data;\r\n    }\r\n}\r\n\r\nexport default DeJongAttractor;\r\n","import { ControlsID, Parameters } from \"../parameters\";\r\nimport Attractor from \"./attractor\";\r\n\r\ndeclare const Controls: any;\r\n\r\nclass FractalDreamAttractor extends Attractor {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    public toggleParametersVisibility(): void {\r\n        Controls.setVisibility(ControlsID.A, true);\r\n        Controls.setVisibility(ControlsID.B, true);\r\n        Controls.setVisibility(ControlsID.C, true);\r\n        Controls.setVisibility(ControlsID.D, true);\r\n    }\r\n\r\n    protected computeXPoints(nbPoints: number): Float32Array {\r\n        const data = new Float32Array(2 * nbPoints);\r\n\r\n        const a = Parameters.a;\r\n        const b = Parameters.b;\r\n        const c = Parameters.c;\r\n        const d = Parameters.d;\r\n\r\n        let x = Math.random() * 2 - 1;\r\n        let y = Math.random() * 2 - 1;\r\n\r\n        /* ignore the first 1000 ones */\r\n        for (let i = 0; i < 100; ++i) {\r\n            data[0] = Math.sin(b * y) + c * Math.sin(b * x);\r\n            data[1] = Math.sin(a * x) + d * Math.sin(a * y);\r\n\r\n            x = data[0];\r\n            y = data[1];\r\n        }\r\n\r\n        for (let i = 0; i < nbPoints; ++i) {\r\n            data[2 * i + 0] = Math.sin(b * y) + c * Math.sin(b * x);\r\n            data[2 * i + 1] = Math.sin(a * x) + d * Math.sin(a * y);\r\n\r\n            x = data[2 * i + 0];\r\n            y = data[2 * i + 1];\r\n\r\n            this.minX = Math.min(this.minX, x);\r\n            this.minY = Math.min(this.minY, y);\r\n\r\n            this.maxX = Math.max(this.maxX, x);\r\n            this.maxY = Math.max(this.maxY, y);\r\n        }\r\n        return data;\r\n    }\r\n}\r\n\r\nexport default FractalDreamAttractor;\r\n"],"sourceRoot":""}