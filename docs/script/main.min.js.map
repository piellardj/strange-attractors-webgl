{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/ts/gl-utils/gl-canvas.ts","webpack:///./src/ts/parameters.ts","webpack:///./src/ts/attractors/attractor.ts","webpack:///./src/ts/infos.ts","webpack:///./src/ts/gl-utils/gl-resource.ts","webpack:///./src/ts/gl-utils/viewport.ts","webpack:///./src/ts/compositing/compositing.ts","webpack:///./src/ts/gl-utils/shader-manager.ts","webpack:///./src/ts/gl-utils/vbo.ts","webpack:///./src/ts/main.ts","webpack:///./src/ts/attractors/bedhead.ts","webpack:///./src/ts/gl-utils/shader.ts","webpack:///./src/ts/gl-utils/shader-sources.ts","webpack:///./src/ts/attractors/boundaries.ts","webpack:///./src/ts/attractors/clifford.ts","webpack:///./src/ts/attractors/de-jong.ts","webpack:///./src/ts/attractors/fractal-dream.ts","webpack:///./src/ts/compositing/compositing-color.ts","webpack:///./src/ts/gl-utils/fbo.ts","webpack:///./src/ts/compositing/compositing-dark.ts","webpack:///./src/ts/compositing/compositing-light.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","gl","initGL","flags","setError","message","Demopage","setErrorMessage","canvas","Canvas","getCanvas","getContext","disable","CULL_FACE","DEPTH_TEST","BLEND","clearColor","adjustSize","hidpi","cssPixel","window","devicePixelRatio","width","Math","floor","clientWidth","height","clientHeight","Infos","__importStar","attractorNames","DeJong","Bedhead","Clifford","FractalDream","compositingNames","dark","light","color","controlId","ATTRACTOR","A","B","C","D","FORMULA","INDICATORS","INTENSITY","QUALITY","COMPOSITING","FOREGROUND","BACKGROUND","DOWNLOAD_SIZE","DOWNLOAD","callObservers","observersList","_i","observersList_1","length","observer","ControlsID","attractor","a","b","intensity","quality","compositing","foregroundHue","backgroundHue","nbPointsNeeded","observers","clear","updateNbPointsNeeded","Parameters","computeNbPointsNeeded","getSize","setCompositing","isColor","Controls","setVisibility","att","Picker","setValue","canvasSize","minDimension","min","addObserver","Range","newvalue","getValue","Checkbox","checked","isChecked","needToClear","Tabs","newValue","getValues","setIndicatorsVisibility","Observers","canvasResize","push","gl_canvas_1","ShaderManager","vbo_1","__importDefault","parameters_1","boundaries_1","shader","pointsVBO","Attractor","buildShader","fragmentFilename","vertexFilename","injected","newShader","fillData","Float32Array","default","FLOAT","this","boundaries","drawXPoints","nbPoints","data","computeXPoints","setData","aspectRatio","VBO","q","u","center","maxDimension","max","use","bindUniformsAndAttributes","drawArrays","POINTS","reset","toggleParametersVisibility","setTitle","setFormula","formula","setParameters","parameters","computeNextPoint","includePoint","x","y","fontLink","colorsStylesheet","FONT_NAME","BLOCK_MARGIN","BLOCK_PADDING","TITLE_FONT_SIZE","FONT_SIZE","SUB_FONT_SIZE","fontColor","backgroundColor","document","createElement","href","replace","rel","head","appendChild","infosCss","infosStyle","setAttribute","styleSheet","cssText","createTextNode","infosColorsStyle","sheet","setColors","titleElt","className","formulaElt","parametersElt","infosBlockElt","newFontColor","newBackgroundColor","cssRules","deleteRule","insertRule","visible","style","display","parentElement","title","textContent","frame","op","f","frameNode","node","html","str","$1","innerHTML","join","drawToCanvas","ctx","setFontSize","sizeInPx","font","drawBackground","previousFillStyle","fillStyle","fillRect","textAlign","textBaseline","blockLeft","top","fontSize","fillText","split","forEach","dLeft","currIndex","writeText","text","measureText","findNext","nodeName","indexOf","index","substring","line","GLResource","_gl","Viewport","left","lower","setFullCanvas","viewport","drawingBufferWidth","drawingBufferHeight","set","CompositingBase","shader_1","ShaderSources","cachedShaders","infos","callback","sourcesPending","sourcesFailed","loadedSource","success","processSource","source","match","vert","getSource","frag","processedVert","processedFrag","loadSource","getShader","registerShader","callAndClearCallbacks","cached","_a","callbacks","cachedCallback","failed","pending","cached_1","builtShader","deleteShader","freeGLResources","Usage","gl_resource_1","_super","array","size","type","staticUsage","_this","id","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","DYNAMIC_DRAW","normalize","stride","offset","usage","STATIC","DYNAMIC","__extends","createQuad","minX","minY","maxX","maxY","deleteBuffer","location","enableVertexAttribArray","vertexAttribPointer","GLCanvas","bedhead_1","clifford_1","de_jong_1","fractal_dream_1","compositing_color_1","compositing_dark_1","compositing_light_1","alpha","depth","preserveDrawingBuffer","needToAdjustCanvas","clearObservers","attractors","totalPoints","compositings","setTotalPoints","total","setIndicatorText","toLocaleString","STEP_SIZE","pow","FileControl","addDownloadObserver","figureSize","canvas2D","ctx2D","canvasGL","showLoader","position","initialize","stepSize","bindTopLayer","compose","drawImage","setLoaderText","msToBlob","blob","navigator","msSaveBlob","toBlob","link","download","URL","createObjectURL","click","requestAnimationFrame","mainLoop","foregroundColor","main","BeadheadAttractor","random","sin","cos","notImplemented","alert","types","35664","binder","uniform2fv","35665","uniform3fv","35666","uniform4fv","35667","uniform2iv","35668","uniform3iv","35669","uniform4iv","35670","uniform1i","35671","35672","35673","35674","uniformMatrix2fv","35675","uniformMatrix3fv","35676","uniformMatrix4fv","35678","unitNb","activeTexture","bindTexture","TEXTURE_2D","35680","TEXTURE_CUBE_MAP","5120","5121","5122","5123","5124","Array","isArray","uniform1iv","5125","5126","uniform1fv","uniform1f","ShaderProgram","vertexSource","fragmentSource","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","console","error","getShaderInfoLog","uCount","aCount","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","introspection","getProgramInfoLog","deleteProgram","useProgram","bindUniforms","currTextureUnitNb","keys","uName","uniform","loc","bindAttributes","aName","attribute","ACTIVE_UNIFORMS","getActiveUniform","name_1","getUniformLocation","ACTIVE_ATTRIBUTES","getActiveAttrib","name_2","getAttribLocation","cachedSources","filename","xhr_1","XMLHttpRequest","open","onload","readyState","status","responseText","statusText","onerror","send","Boundaries","CliffordAttractor","DeJongAttractor","FractalDreamAttractor","fbo_1","viewport_1","HSVToRGB","hue","saturation","g","CompositingColor","_compositionShader","_FBO","_currentTextureSize","initializeTexture","minSize","neededSize","ceil","log","LOG2E","enable","blendFunc","ONE","blendEquation","FUNC_ADD","_texture","COLOR_BUFFER_BIT","bindDefault","updateColors","_foregroundRgb","_backgroundRgb","TRIANGLE_STRIP","deleteTexture","uintTexels","uintData","Uint8Array","createTexture","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","REPEAT","TEXTURE_WRAP_T","normalizedTo255","rgbaToString","rgb","FBO","createFramebuffer","bindFramebuffer","FRAMEBUFFER","colorBuffers","depthBuffer","framebufferTexture2D","bindRenderbuffer","RENDERBUFFER","framebufferRenderbuffer","DEPTH_ATTACHMENT","deleteFramebuffer","CompositingDark","CompositingLight","FUNC_REVERSE_SUBTRACT"],"mappings":"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","file":"main.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","declare const Demopage: any;\r\ndeclare const Canvas: any;\r\n\r\nlet gl: WebGLRenderingContext = null;\r\n\r\n/** Initializes a WebGL context */\r\nfunction initGL(flags: any): boolean {\r\n    function setError(message: string) {\r\n        Demopage.setErrorMessage(\"webgl-support\", message);\r\n    }\r\n\r\n    const canvas = Canvas.getCanvas();\r\n\r\n    gl = canvas.getContext(\"webgl\", flags) as WebGLRenderingContext;\r\n    if (gl == null) {\r\n        gl = canvas.getContext(\"experimental-webgl\", flags) as WebGLRenderingContext;\r\n        if (gl == null) {\r\n            setError(\"Your browser or device does not seem to support WebGL.\");\r\n            return false;\r\n        }\r\n\r\n        setError(\"Your browser or device only supports experimental WebGL.\\n\" +\r\n            \"The simulation may not run as expected.\");\r\n    }\r\n\r\n    gl.disable(gl.CULL_FACE);\r\n    gl.disable(gl.DEPTH_TEST);\r\n    gl.disable(gl.BLEND);\r\n    gl.clearColor(0, 0, 0, 1);\r\n\r\n    return true;\r\n}\r\n\r\n/* Adjusts the GL canvas size to the actual canvas element size on the page */\r\nfunction adjustSize(hidpi: boolean = false): void {\r\n    const cssPixel: number = (hidpi) ? window.devicePixelRatio : 1;\r\n\r\n    const width: number = Math.floor(gl.canvas.clientWidth * cssPixel);\r\n    const height: number = Math.floor(gl.canvas.clientHeight * cssPixel);\r\n    if (gl.canvas.width !== width || gl.canvas.height !== height) {\r\n        gl.canvas.width = width;\r\n        gl.canvas.height = height;\r\n    }\r\n}\r\n\r\nexport {\r\n    adjustSize,\r\n    initGL,\r\n    gl,\r\n};\r\n","import * as Infos from \"./infos\";\r\n\r\ndeclare const Button: any;\r\ndeclare const Canvas: any;\r\ndeclare const Checkbox: any;\r\ndeclare const Controls: any;\r\ndeclare const FileControl: any;\r\ndeclare const Picker: any;\r\ndeclare const Range: any;\r\ndeclare const Tabs: any;\r\n\r\nconst attractorNames = {\r\n    DeJong: \"de-jong\",\r\n    Bedhead: \"bedhead\",\r\n    Clifford: \"clifford\",\r\n    FractalDream: \"fractal-dream\",\r\n};\r\n\r\nconst compositingNames = {\r\n    dark: \"dark\",\r\n    light: \"light\",\r\n    color: \"color\",\r\n};\r\n\r\n/* === IDs ============================================================ */\r\nconst controlId = {\r\n    ATTRACTOR: \"attractor-picker-id\",\r\n    A: \"a-range-id\",\r\n    B: \"b-range-id\",\r\n    C: \"c-range-id\",\r\n    D: \"d-range-id\",\r\n    FORMULA: \"formula-checkbox-id\",\r\n    INDICATORS: \"indicators-checkbox-id\",\r\n    INTENSITY: \"intensity-range-id\",\r\n    QUALITY: \"quality-range-id\",\r\n    COMPOSITING: \"compositing\",\r\n    FOREGROUND: \"foreground-range-id\",\r\n    BACKGROUND: \"background-range-id\",\r\n    DOWNLOAD_SIZE: \"download-size\",\r\n    DOWNLOAD: \"file-download-id\",\r\n};\r\n\r\n/* === OBSERVERS ====================================================== */\r\ntype GenericObserver = () => void;\r\n\r\nfunction callObservers(observersList: any[]): void {\r\n    for (const observer of observersList) {\r\n        observer();\r\n    }\r\n}\r\n\r\nconst observers: {\r\n    clear: GenericObserver[],\r\n} = {\r\n    clear: [],\r\n};\r\n\r\nlet attractor: string;\r\nlet a: number;\r\nlet b: number;\r\nlet c: number;\r\nlet d: number;\r\n\r\nlet intensity: number;\r\nlet quality: number;\r\nlet compositing: string;\r\nlet foregroundHue: number;\r\nlet backgroundHue: number;\r\nlet nbPointsNeeded: number;\r\n\r\nfunction updateNbPointsNeeded() {\r\n    nbPointsNeeded = Parameters.computeNbPointsNeeded(Canvas.getSize());\r\n}\r\n\r\nfunction setCompositing(name: string) {\r\n    const isColor = (name === compositingNames.color);\r\n    Controls.setVisibility(controlId.FOREGROUND, isColor);\r\n    Controls.setVisibility(controlId.BACKGROUND, isColor);\r\n\r\n    compositing = name;\r\n    callObservers(observers.clear);\r\n}\r\n\r\n/* === INTERFACE ====================================================== */\r\nclass Parameters {\r\n    public static get attractor(): string {\r\n        return attractor;\r\n    }\r\n    public static set attractor(att: string) {\r\n        Picker.setValue(controlId.ATTRACTOR, att);\r\n        attractor = att;\r\n    }\r\n\r\n    public static get a(): number {\r\n        return a;\r\n    }\r\n\r\n    public static get b(): number {\r\n        return b;\r\n    }\r\n\r\n    public static get c(): number {\r\n        return c;\r\n    }\r\n\r\n    public static get d(): number {\r\n        return d;\r\n    }\r\n\r\n    public static get nbPointsNeeded(): number {\r\n        return nbPointsNeeded;\r\n    }\r\n\r\n    public static get quality(): number {\r\n        return quality;\r\n    }\r\n\r\n    public static get compositing(): string {\r\n        return compositing;\r\n    }\r\n\r\n    public static get foregroundHue(): number {\r\n        return foregroundHue;\r\n    }\r\n\r\n    public static get backgroundHue(): number {\r\n        return backgroundHue;\r\n    }\r\n\r\n    public static get clearObservers(): GenericObserver[] {\r\n        return observers.clear;\r\n    }\r\n\r\n    public static computeNbPointsNeeded(canvasSize: number[]): number {\r\n        const minDimension = Math.min(canvasSize[0], canvasSize[1]);\r\n        return intensity / (256 * quality) * minDimension * minDimension;\r\n    }\r\n\r\n    private constructor() {}\r\n}\r\n\r\n/* === EVENTS BINDING ================================================= */\r\n/* --- PARAMETERS ----------------------------------------------------- */\r\nPicker.addObserver(controlId.ATTRACTOR, (value: string) => {\r\n    attractor = value;\r\n    callObservers(observers.clear);\r\n});\r\n\r\nRange.addObserver(controlId.A, (newvalue: number) => {\r\n    a = newvalue;\r\n    callObservers(observers.clear);\r\n});\r\na = Range.getValue(controlId.A);\r\n\r\nRange.addObserver(controlId.B, (newvalue: number) => {\r\n    b = newvalue;\r\n    callObservers(observers.clear);\r\n});\r\nb = Range.getValue(controlId.B);\r\n\r\nRange.addObserver(controlId.C, (newvalue: number) => {\r\n    c = newvalue;\r\n    callObservers(observers.clear);\r\n});\r\nc = Range.getValue(controlId.C);\r\n\r\nRange.addObserver(controlId.D, (newvalue: number) => {\r\n    d = newvalue;\r\n    callObservers(observers.clear);\r\n});\r\nd = Range.getValue(controlId.D);\r\n\r\nCheckbox.addObserver(controlId.FORMULA, (checked: boolean) => {\r\n    Infos.setVisibility(checked);\r\n});\r\nInfos.setVisibility(Checkbox.isChecked(controlId.FORMULA));\r\n\r\nRange.addObserver(controlId.INTENSITY, (newvalue: number) => {\r\n    const needToClear = (newvalue < intensity);\r\n    intensity = newvalue;\r\n    updateNbPointsNeeded();\r\n\r\n    if (needToClear) {\r\n        callObservers(observers.clear);\r\n    }\r\n});\r\nintensity = Range.getValue(controlId.INTENSITY);\r\n\r\nRange.addObserver(controlId.QUALITY, (newvalue: number) => {\r\n    quality = 1 - (254 / 255) * newvalue;\r\n    updateNbPointsNeeded();\r\n    callObservers(observers.clear);\r\n});\r\nquality = 1 - (254 / 255) * Range.getValue(controlId.QUALITY);\r\n\r\nTabs.addObserver(controlId.COMPOSITING, (newValue: string[]) => {\r\n    setCompositing(\"\" + newValue[0]);\r\n});\r\nsetCompositing(\"\" + Tabs.getValues(controlId.COMPOSITING));\r\n\r\nRange.addObserver(controlId.FOREGROUND, (newValue: number) => {\r\n    foregroundHue = newValue;\r\n    callObservers(observers.clear);\r\n});\r\nforegroundHue = Range.getValue(controlId.FOREGROUND);\r\n\r\nRange.addObserver(controlId.BACKGROUND, (newValue: number) => {\r\n    backgroundHue = newValue;\r\n    callObservers(observers.clear);\r\n});\r\nbackgroundHue = Range.getValue(controlId.BACKGROUND);\r\n\r\nCheckbox.addObserver(controlId.INDICATORS, (checked: number) => {\r\n    Canvas.setIndicatorsVisibility(checked);\r\n});\r\nCanvas.setIndicatorsVisibility(Checkbox.isChecked(controlId.INDICATORS));\r\n\r\nCanvas.Observers.canvasResize.push(updateNbPointsNeeded);\r\nupdateNbPointsNeeded();\r\n\r\nexport {\r\n    attractorNames,\r\n    compositingNames,\r\n    controlId as ControlsID,\r\n    Parameters,\r\n};\r\n","import { gl } from \"../gl-utils/gl-canvas\";\r\nimport Shader from \"../gl-utils/shader\";\r\nimport * as ShaderManager from \"../gl-utils/shader-manager\";\r\nimport VBO from \"../gl-utils/vbo\";\r\n\r\nimport * as Infos from \"../infos\";\r\nimport { Parameters } from \"../parameters\";\r\nimport Boundaries from \"./boundaries\";\r\n\r\nlet shader: Shader = null;\r\nlet pointsVBO: VBO = null;\r\n\r\ndeclare const Canvas: any;\r\n\r\nabstract class Attractor {\r\n    protected boundaries: Boundaries;\r\n    protected x: number;\r\n    protected y: number;\r\n\r\n    constructor() {\r\n        if (shader === null) {\r\n            ShaderManager.buildShader(\r\n                {\r\n                    fragmentFilename: \"points.frag\",\r\n                    vertexFilename: \"points.vert\",\r\n                    injected: {},\r\n                },\r\n                (newShader) => {\r\n                    if (newShader !== null) {\r\n                        shader = newShader;\r\n                    }\r\n                },\r\n            );\r\n        }\r\n\r\n        if (pointsVBO === null) {\r\n            const fillData = new Float32Array(2);\r\n            pointsVBO = new VBO(gl, fillData, 2, gl.FLOAT, false);\r\n        }\r\n\r\n        this.boundaries = null;\r\n    }\r\n\r\n    public drawXPoints(nbPoints: number): boolean {\r\n        if (shader) {\r\n            const data = this.computeXPoints(nbPoints);\r\n            pointsVBO.setData(data);\r\n\r\n            const canvasSize = Canvas.getSize();\r\n            const aspectRatio = canvasSize[0] / canvasSize[1];\r\n\r\n            /* tslint:disable:no-string-literal */\r\n            shader.a[\"aCoords\"].VBO = pointsVBO;\r\n            const q = Parameters.quality;\r\n            shader.u[\"uColor\"].value = [q, q, q, 1];\r\n            shader.u[\"uCenter\"].value = this.boundaries.center;\r\n            const maxDimension = 0.5 + this.boundaries.maxDimension;\r\n            shader.u[\"uScale\"].value = [\r\n                2 / maxDimension / Math.max(aspectRatio, 1),\r\n                2 / maxDimension * Math.min(aspectRatio, 1),\r\n            ];\r\n            /* tslint:enable:no-string-literal */\r\n\r\n            shader.use();\r\n            shader.bindUniformsAndAttributes();\r\n\r\n            gl.drawArrays(gl.POINTS, 0, nbPoints);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public reset(): void {\r\n        this.toggleParametersVisibility();\r\n        Infos.setTitle(this.name);\r\n        Infos.setFormula(this.formula);\r\n        Infos.setParameters(this.parameters);\r\n        this.boundaries = null;\r\n    }\r\n\r\n    /* For infos block display */\r\n    public abstract get name(): string;\r\n    public abstract get formula(): string;\r\n    public abstract get parameters(): string[];\r\n\r\n    public abstract toggleParametersVisibility(): void;\r\n\r\n    /* Should update minX, maxX, minY and maxY */\r\n    protected abstract computeXPoints(nbPoints: number): Float32Array;\r\n\r\n    protected fillData(nbPoints: number, computeNextPoint: (pointIndex: number) => void) {\r\n        /* ignore the first 1000 ones */\r\n        for (let i = 0; i < 100; ++i) {\r\n            computeNextPoint(0);\r\n        }\r\n\r\n        if (this.boundaries === null) {\r\n            this.boundaries = new Boundaries();\r\n\r\n            for (let i = 0; i < nbPoints; ++i) {\r\n                computeNextPoint(i);\r\n                this.boundaries.includePoint(this.x, this.y);\r\n            }\r\n        } else {\r\n            for (let i = 0; i < nbPoints; ++i) {\r\n                computeNextPoint(i);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Attractor;\r\n","declare const Canvas: any;\r\n\r\nconst FONT_NAME = \"Nothing You Could Do\";\r\nconst BLOCK_MARGIN = 8;\r\nconst BLOCK_PADDING = 8;\r\nconst TITLE_FONT_SIZE = 24;\r\nconst FONT_SIZE = 20;\r\nconst SUB_FONT_SIZE = 16;\r\n\r\nlet fontColor: string = \"blue\";\r\nlet backgroundColor: string = \"red\";\r\n\r\n(function registerFont() {\r\n    const fontLink = document.createElement(\"link\");\r\n    fontLink.href = \"https://fonts.googleapis.com/css?family=\" + FONT_NAME.replace(\" \", \"+\");\r\n    fontLink.rel = \"stylesheet\";\r\n    document.head.appendChild(fontLink);\r\n})();\r\n\r\nlet colorsStylesheet: any; // really a StyleSheet but Typescript definitions are incomplete\r\n(function registerCss() {\r\n    const infosCss =\r\n    `.infos {\r\n        position: absolute;\r\n        bottom: 0;\r\n        left: 0;\r\n        line-height: 1em;\r\n        margin: ` + BLOCK_MARGIN + `px;\r\n        text-align: left;\r\n        font-family: '` + FONT_NAME + `', cursive;\r\n        font-size: ` + FONT_SIZE + `px;\r\n    }\r\n    .infos sub {\r\n        font-size: ` + SUB_FONT_SIZE + `px;\r\n    }\r\n    .infos div {\r\n        padding: ` + BLOCK_PADDING + `px;\r\n    }\r\n    .infos .attractor-name {\r\n        display: inline-block;\r\n        font-size: ` + TITLE_FONT_SIZE + `px;\r\n    }\r\n    .infos .attractor-parameters {\r\n        display: inline-block;\r\n    }`;\r\n\r\n    const infosStyle = document.createElement(\"style\");\r\n    infosStyle.setAttribute(\"type\", \"text/css\");\r\n    if ((infosStyle as any).styleSheet) {   // IE\r\n        (infosStyle as any).styleSheet.cssText = infosCss;\r\n    } else {\r\n        infosStyle.appendChild(document.createTextNode(infosCss));\r\n    }\r\n    document.head.appendChild(infosStyle);\r\n\r\n    const infosColorsStyle = document.createElement(\"style\");\r\n    document.head.appendChild(infosColorsStyle);\r\n    colorsStylesheet = infosColorsStyle.sheet;\r\n})();\r\n\r\nsetColors(\"white\", \"black\");\r\n\r\nconst titleElt = document.createElement(\"div\");\r\ntitleElt.className = \"attractor-name\";\r\nconst formulaElt = document.createElement(\"div\");\r\nconst parametersElt = document.createElement(\"div\");\r\nparametersElt.className = \"attractor-parameters\";\r\n\r\nconst infosBlockElt = document.createElement(\"div\");\r\ninfosBlockElt.className = \"infos\";\r\ninfosBlockElt.appendChild(titleElt);\r\ninfosBlockElt.appendChild(formulaElt);\r\ninfosBlockElt.appendChild(parametersElt);\r\nsetVisibility(false);\r\n\r\nconst canvasContainer = (Canvas.getCanvas() as HTMLElement).parentElement;\r\ncanvasContainer.appendChild(infosBlockElt);\r\n\r\nfunction setColors(newFontColor: string, newBackgroundColor: string) {\r\n    fontColor = newFontColor;\r\n    backgroundColor = newBackgroundColor;\r\n\r\n    while (colorsStylesheet.cssRules.length > 0) {\r\n        colorsStylesheet.deleteRule(0);\r\n    }\r\n    colorsStylesheet.insertRule(\".infos { color: \" + fontColor + \"; }\", 0);\r\n    colorsStylesheet.insertRule(\".infos div { background: \" + backgroundColor + \"; }\", 0);\r\n}\r\n\r\nfunction setVisibility(visible: boolean) {\r\n    infosBlockElt.style.display = visible ? \"\" : \"none\";\r\n}\r\n\r\nfunction setTitle(title: string) {\r\n    titleElt.textContent = title;\r\n}\r\n\r\nfunction setFormula(formula: string) {\r\n    function frame(op: string, f: string) {\r\n        return f + op + f;\r\n    }\r\n    function frameNode(op: string, node: string) {\r\n        return \"<\" + node + \">\" + op + \"</\" + node + \">\";\r\n    }\r\n\r\n    const SPACE = \" \";\r\n    const HALF_SPACE = \"&#8239;\";\r\n\r\n    let html = formula.replace(/\\s*\\*\\s*/g, frame(\"&times\", HALF_SPACE));\r\n    html = html.replace(/\\s*\\/\\s*/g, frame(\"&divide\", HALF_SPACE));\r\n    html = html.replace(/\\s*\\+\\s*/g, frame(\"+\", SPACE));\r\n    html = html.replace(/\\s*-\\s*/g, frame(\"-\", SPACE));\r\n    html = html.replace(/\\s*=\\s*/g, frame(\"=\", SPACE));\r\n    html = html.replace(/\\s*n\\s*\\+\\s*1\\s*/g, \"n\" + frame(\"+\", HALF_SPACE) + \"1\");\r\n    html = html.replace(/\\n/g, \"<br/>\");\r\n    html = html.replace(/_{([^}]*)}/g, (str, $1) => frameNode($1, \"sub\"));\r\n    html = html.replace(/\\^{([^}]*)}/g, (str, $1) => frameNode($1, \"sup\"));\r\n\r\n    formulaElt.innerHTML = html;\r\n}\r\n\r\nfunction setParameters(parameters: string[]) {\r\n    parametersElt.innerHTML = parameters.join(\"<br/>\");\r\n}\r\n\r\nfunction drawToCanvas(ctx: CanvasRenderingContext2D) {\r\n    function setFontSize(sizeInPx: number) {\r\n        ctx.font = sizeInPx + \"px \" + FONT_NAME;\r\n    }\r\n\r\n    function drawBackground(x: number, y: number, width: number, height: number) {\r\n        const previousFillStyle = ctx.fillStyle;\r\n        ctx.fillStyle = backgroundColor;\r\n        ctx.fillRect(x, y, width, height);\r\n        ctx.fillStyle = previousFillStyle;\r\n    }\r\n\r\n    drawBackground(BLOCK_MARGIN, BLOCK_MARGIN, titleElt.clientWidth, titleElt.clientHeight);\r\n    ctx.fillStyle = fontColor;\r\n    ctx.textAlign = \"left\";\r\n    ctx.textBaseline = \"top\";\r\n\r\n    const blockLeft = BLOCK_MARGIN + BLOCK_PADDING;\r\n    let top = BLOCK_MARGIN + BLOCK_PADDING;\r\n\r\n    let fontSize = TITLE_FONT_SIZE;\r\n    setFontSize(fontSize);\r\n    ctx.fillText(titleElt.textContent, blockLeft, top);\r\n    top += 2 * FONT_SIZE;\r\n\r\n    fontSize = FONT_SIZE;\r\n    setFontSize(fontSize);\r\n\r\n    drawBackground(BLOCK_MARGIN, top - BLOCK_PADDING, formulaElt.clientWidth, formulaElt.clientHeight);\r\n\r\n    /* HTML tags cannot be used when drawing text on a canvas,\r\n     * so we need to handle manually tags such as br and sub. */\r\n    formulaElt.innerHTML.split(/\\s*<br\\/?>\\s*/g).forEach((str) => {\r\n        let dLeft = 0;\r\n        let currIndex = 0;\r\n\r\n        function writeText(text: string) {\r\n            ctx.fillText(text, blockLeft + dLeft, top);\r\n            dLeft += ctx.measureText(text).width;\r\n        }\r\n\r\n        function findNext(nodeName: string) {\r\n            const i = str.indexOf(nodeName, currIndex);\r\n            return (i < 0) ? str.length : i;\r\n        }\r\n\r\n        while (currIndex < str.length) {\r\n            let index = findNext(\"<sub>\");\r\n            writeText(str.substring(currIndex, index));\r\n            currIndex = index + 5; // 5 === \"<sub>\".length\r\n\r\n            index = findNext(\"</sub>\");\r\n            top += .4 * fontSize;\r\n            setFontSize(SUB_FONT_SIZE);\r\n            writeText(str.substring(currIndex, index));\r\n            top -= .4 * fontSize;\r\n            currIndex = index + 6; // 6 === \"</sub>\".length\r\n\r\n            setFontSize(fontSize);\r\n        }\r\n        top += 1.25 * fontSize;\r\n    });\r\n\r\n    top += 1 * FONT_SIZE;\r\n\r\n    drawBackground(BLOCK_MARGIN, top - BLOCK_PADDING, parametersElt.clientWidth, parametersElt.clientHeight);\r\n\r\n    parametersElt.innerHTML.split(/\\s*<br\\/?>\\s*/g).forEach((line) => {\r\n        ctx.fillText(line, blockLeft, top);\r\n        top += 1 * fontSize;\r\n    });\r\n}\r\n\r\nexport {\r\n    drawToCanvas,\r\n    setColors,\r\n    setFormula,\r\n    setParameters,\r\n    setTitle,\r\n    setVisibility,\r\n};\r\n","abstract class GLResource {\r\n    private _gl: WebGLRenderingContext;\r\n\r\n    constructor(gl: WebGLRenderingContext) {\r\n        this._gl = gl;\r\n    }\r\n\r\n    public gl(): WebGLRenderingContext {\r\n        return this._gl;\r\n    }\r\n\r\n    public abstract freeGLResources(): void;\r\n}\r\n\r\nexport default GLResource;\r\n","class Viewport {\r\n    public static setFullCanvas(gl: WebGLRenderingContext): void {\r\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\r\n    }\r\n\r\n    public lower: number;\r\n    public left: number;\r\n    public width: number;\r\n    public height: number;\r\n\r\n    constructor(left: number, lower: number, width: number, height: number) {\r\n        this.left = left;\r\n        this.lower = lower;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n\r\n    public set(gl: WebGLRenderingContext): void {\r\n        gl.viewport(this.lower, this.left, this.width, this.height);\r\n    }\r\n}\r\n\r\nexport default Viewport;\r\n","abstract class CompositingBase {\r\n    public backgroundColor: string;\r\n    public foregroundColor: string;\r\n\r\n    public abstract initialize(): void;\r\n    public abstract bindTopLayer(): void;\r\n    public abstract compose(): void;\r\n}\r\n\r\nexport default CompositingBase;\r\n","import { gl } from \"./gl-canvas\";\r\nimport Shader from \"./shader\";\r\nimport * as ShaderSources from \"./shader-sources\";\r\n\r\ntype RegisterCallback = (success: boolean, shader: Shader | null) => void;\r\n\r\ninterface IShaderInfos {\r\n    fragmentFilename: string;\r\n    vertexFilename: string;\r\n    injected: { [id: string]: string };\r\n}\r\n\r\ninterface ICachedShader {\r\n    shader: Shader;\r\n    infos: IShaderInfos;\r\n    pending: boolean;\r\n    failed: boolean;\r\n    callbacks: RegisterCallback[];\r\n}\r\n\r\nconst cachedShaders: { [id: string]: ICachedShader} = {};\r\n\r\nfunction getShader(name: string): Shader | null {\r\n    return cachedShaders[name].shader;\r\n}\r\n\r\ntype BuildCallback = (builtShader: Shader | null) => void;\r\n\r\nfunction buildShader(infos: IShaderInfos, callback: BuildCallback) {\r\n    let sourcesPending = 2;\r\n    let sourcesFailed = 0;\r\n\r\n    function loadedSource(success: boolean) {\r\n        function processSource(source: string): string {\r\n            return source.replace(/#INJECT\\((.*)\\)/mg, (match, name) => {\r\n                if (infos.injected[name]) {\r\n                    return infos.injected[name];\r\n                }\r\n                return match;\r\n            });\r\n        }\r\n\r\n        sourcesPending--;\r\n        if (!success) {\r\n            sourcesFailed++;\r\n        }\r\n\r\n        if (sourcesPending === 0) {\r\n            let shader = null;\r\n\r\n            if (sourcesFailed === 0) {\r\n                const vert = ShaderSources.getSource(infos.vertexFilename);\r\n                const frag = ShaderSources.getSource(infos.fragmentFilename);\r\n\r\n                const processedVert = processSource(vert);\r\n                const processedFrag = processSource(frag);\r\n\r\n                shader = new Shader(gl, processedVert, processedFrag);\r\n            }\r\n\r\n            callback(shader);\r\n        }\r\n    }\r\n\r\n    ShaderSources.loadSource(infos.vertexFilename, loadedSource);\r\n    ShaderSources.loadSource(infos.fragmentFilename, loadedSource);\r\n}\r\n\r\nfunction registerShader(name: string, infos: IShaderInfos, callback: RegisterCallback): void {\r\n    function callAndClearCallbacks(cached: ICachedShader) {\r\n        for (const cachedCallback of cached.callbacks) {\r\n            cachedCallback(!cached.failed, cached.shader);\r\n        }\r\n\r\n        cached.callbacks = [];\r\n    }\r\n\r\n    if (typeof cachedShaders[name] === \"undefined\") {\r\n        cachedShaders[name] = {\r\n            callbacks: [callback],\r\n            failed: false,\r\n            infos,\r\n            pending: true,\r\n            shader: null,\r\n        };\r\n        const cached = cachedShaders[name];\r\n\r\n        buildShader(infos, (builtShader) => {\r\n            cached.pending = false;\r\n            cached.failed = builtShader === null;\r\n            cached.shader = builtShader;\r\n\r\n            callAndClearCallbacks(cached);\r\n        });\r\n    } else {\r\n        const cached = cachedShaders[name];\r\n\r\n        if (cached.pending === true) {\r\n            cached.callbacks.push(callback);\r\n        } else {\r\n            callAndClearCallbacks(cached);\r\n        }\r\n    }\r\n}\r\n\r\nfunction deleteShader(name: string) {\r\n    if (cachedShaders[name]) {\r\n        if (cachedShaders[name].shader) {\r\n            cachedShaders[name].shader.freeGLResources();\r\n        }\r\n        delete cachedShaders[name];\r\n    }\r\n}\r\n\r\nexport {\r\n    buildShader,\r\n    getShader,\r\n    IShaderInfos,\r\n    registerShader,\r\n    deleteShader,\r\n};\r\n","import GLResource from \"./gl-resource\";\r\n\r\nenum Usage {\r\n    DYNAMIC,\r\n    STATIC,\r\n}\r\n\r\nclass VBO extends GLResource {\r\n    public static createQuad(gl: WebGLRenderingContext, minX: number, minY: number, maxX: number, maxY: number): VBO {\r\n        const vert = [\r\n            minX, minY,\r\n            maxX, minY,\r\n            minX, maxY,\r\n            maxX, maxY,\r\n        ];\r\n\r\n        return new VBO(gl, new Float32Array(vert), 2, gl.FLOAT, true);\r\n    }\r\n\r\n    private id: WebGLBuffer;\r\n    private size: number;\r\n    private type: GLenum;\r\n    private normalize: GLboolean;\r\n    private stride: GLsizei;\r\n    private offset: GLintptr;\r\n    private usage: Usage;\r\n\r\n    constructor(gl: WebGLRenderingContext, array: any, size: number, type: GLenum, staticUsage: boolean = true) {\r\n        super(gl);\r\n\r\n        this.id = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.id);\r\n        if (staticUsage) {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.STATIC_DRAW);\r\n        } else {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.DYNAMIC_DRAW);\r\n        }\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n\r\n        this.size = size;\r\n        this.type = type;\r\n        this.normalize = false;\r\n        this.stride = 0;\r\n        this.offset = 0;\r\n        this.usage = (staticUsage) ? Usage.STATIC : Usage.DYNAMIC;\r\n    }\r\n\r\n    public freeGLResources(): void {\r\n        this.gl().deleteBuffer(this.id);\r\n        this.id = null;\r\n    }\r\n\r\n    public bind(location: GLuint): void {\r\n        const gl = super.gl();\r\n        gl.enableVertexAttribArray(location);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.id);\r\n        gl.vertexAttribPointer(location, this.size, this.type, this.normalize, this.stride, this.offset);\r\n    }\r\n\r\n    public setData(array: any): void {\r\n        const gl = super.gl();\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.id);\r\n        if (this.usage === Usage.STATIC) {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.STATIC_DRAW);\r\n        } else {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.DYNAMIC_DRAW);\r\n        }\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n    }\r\n}\r\n\r\nexport default VBO;\r\n","import * as GLCanvas from \"./gl-utils/gl-canvas\";\r\nimport { gl } from \"./gl-utils/gl-canvas\";\r\n\r\nimport Attractor from \"./attractors/attractor\";\r\nimport BedHeadAttractor from \"./attractors/bedhead\";\r\nimport CliffordAttractor from \"./attractors/clifford\";\r\nimport DeJongAttractor from \"./attractors/de-jong\";\r\nimport FractalDreamAttractor from \"./attractors/fractal-dream\";\r\nimport * as Infos from \"./infos\";\r\nimport { attractorNames, compositingNames, ControlsID, Parameters } from \"./parameters\";\r\n\r\nimport Compositing from \"./compositing/compositing\";\r\nimport CompositingColor from \"./compositing/compositing-color\";\r\nimport CompositingDark from \"./compositing/compositing-dark\";\r\nimport CompositingLight from \"./compositing/compositing-light\";\r\n\r\ndeclare const Canvas: any;\r\ndeclare const FileControl: any;\r\ndeclare const Tabs: any;\r\n\r\nfunction main() {\r\n    initGL();\r\n\r\n    let needToAdjustCanvas = true;\r\n    Canvas.Observers.canvasResize.push(() => needToAdjustCanvas = true);\r\n    Parameters.clearObservers.push(() => needToAdjustCanvas = true);\r\n\r\n    Parameters.attractor = attractorNames.DeJong;\r\n\r\n    const attractors = {};\r\n    attractors[attractorNames.Bedhead] = new BedHeadAttractor();\r\n    attractors[attractorNames.Clifford] = new CliffordAttractor();\r\n    attractors[attractorNames.DeJong] = new DeJongAttractor();\r\n    attractors[attractorNames.FractalDream] = new FractalDreamAttractor();\r\n\r\n    const compositings = {};\r\n    compositings[compositingNames.color] = new CompositingColor();\r\n    compositings[compositingNames.dark] = new CompositingDark();\r\n    compositings[compositingNames.light] = new CompositingLight();\r\n\r\n    let totalPoints: number;\r\n    function setTotalPoints(total: number): void {\r\n        totalPoints = total;\r\n        Canvas.setIndicatorText(\"points-drawn\", totalPoints.toLocaleString());\r\n    }\r\n    setTotalPoints(0);\r\n\r\n    const STEP_SIZE = Math.pow(2, 16);\r\n    let attractor: Attractor;\r\n    let compositing: Compositing;\r\n    function mainLoop() {\r\n        if (needToAdjustCanvas) {\r\n            needToAdjustCanvas = false;\r\n            setTotalPoints(0);\r\n\r\n            attractor = attractors[Parameters.attractor];\r\n            attractor.reset();\r\n\r\n            compositing = compositings[Parameters.compositing];\r\n            compositing.initialize();\r\n\r\n            Infos.setColors(compositing.foregroundColor, compositing.backgroundColor);\r\n        }\r\n\r\n        if (totalPoints < Parameters.nbPointsNeeded) {\r\n            compositing.bindTopLayer();\r\n            if (attractor.drawXPoints(STEP_SIZE)) {\r\n                setTotalPoints(totalPoints + STEP_SIZE);\r\n                compositing.compose();\r\n            }\r\n        }\r\n\r\n        requestAnimationFrame(mainLoop);\r\n    }\r\n\r\n    function initGL() {\r\n        const glParams = {\r\n            alpha: false,\r\n            depth: false,\r\n            preserveDrawingBuffer: true,\r\n        };\r\n        if (!GLCanvas.initGL(glParams)) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    FileControl.addDownloadObserver(ControlsID.DOWNLOAD, () => {\r\n        const figureSize = +Tabs.getValues(ControlsID.DOWNLOAD_SIZE)[0];\r\n\r\n        const nbPointsNeeded = Parameters.computeNbPointsNeeded([figureSize, figureSize]);\r\n\r\n        const canvas2D = document.createElement(\"canvas\");\r\n        const ctx2D = canvas2D.getContext(\"2d\");\r\n\r\n        canvas2D.width = figureSize + 400;\r\n        canvas2D.height = figureSize;\r\n\r\n        const canvasGL = Canvas.getCanvas();\r\n        function isolateCanvasGL() {\r\n            Canvas.showLoader(true);\r\n\r\n            canvasGL.style.position = \"absolute\";\r\n            canvasGL.style.width = figureSize + \"px\";\r\n            canvasGL.style.height = figureSize + \"px\";\r\n            canvasGL.width = figureSize;\r\n            canvasGL.height = figureSize;\r\n\r\n            compositing.initialize();\r\n        }\r\n\r\n        function restoreCanvasGL() {\r\n            canvasGL.style.position = \"\";\r\n            canvasGL.style.width = \"\";\r\n            canvasGL.style.height = \"\";\r\n            Canvas.showLoader(false);\r\n            Canvas.setLoaderText(\"\");\r\n            needToAdjustCanvas = true;\r\n        }\r\n\r\n        isolateCanvasGL();\r\n\r\n        let nbPoints = 0;\r\n        const stepSize = Math.pow(2, 18);\r\n        compositing.bindTopLayer();\r\n        while (nbPoints < nbPointsNeeded) {\r\n            nbPoints += stepSize;\r\n            attractor.drawXPoints(stepSize);\r\n        }\r\n        compositing.compose();\r\n\r\n        ctx2D.fillStyle = compositing.backgroundColor;\r\n        ctx2D.fillRect(0, 0, canvas2D.width, canvas2D.height);\r\n        ctx2D.drawImage(gl.canvas, 0.5 * (canvas2D.width - figureSize), 0, figureSize, figureSize);\r\n        restoreCanvasGL();\r\n        Infos.drawToCanvas(ctx2D);\r\n\r\n        if ((canvas2D as any).msToBlob) { // for IE\r\n            const blob = (canvas2D as any).msToBlob();\r\n            window.navigator.msSaveBlob(blob, \"image.png\");\r\n        } else {\r\n            canvas2D.toBlob((blob) => {\r\n                const link = document.createElement(\"a\");\r\n                link.download = \"image.png\";\r\n                link.href = URL.createObjectURL(blob);\r\n                link.click();\r\n            });\r\n        }\r\n    });\r\n\r\n    requestAnimationFrame(mainLoop);\r\n}\r\n\r\nmain();\r\n","import { ControlsID, Parameters } from \"../parameters\";\r\nimport Attractor from \"./attractor\";\r\n\r\ndeclare const Controls: any;\r\n\r\nclass BeadheadAttractor extends Attractor {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    public get name(): string {\r\n        return \"Bedhead\";\r\n    }\r\n\r\n    public get formula(): string {\r\n        return `x_{n+1} = sin(x_{n}*y_{n}/b) + cos(a*x_{n} - y_{n})\r\n        y_{n+1} = x_{n} + sin(y_{n})/b`;\r\n    }\r\n\r\n    public get parameters(): string[] {\r\n        return [\r\n            \"a = \" + Parameters.a,\r\n            \"b = \" + Parameters.b,\r\n        ];\r\n    }\r\n\r\n    public toggleParametersVisibility(): void {\r\n        Controls.setVisibility(ControlsID.A, true);\r\n        Controls.setVisibility(ControlsID.B, true);\r\n        Controls.setVisibility(ControlsID.C, false);\r\n        Controls.setVisibility(ControlsID.D, false);\r\n    }\r\n\r\n    protected computeXPoints(nbPoints: number): Float32Array {\r\n        const data = new Float32Array(2 * nbPoints);\r\n\r\n        const a = Parameters.a;\r\n        const b = Parameters.b;\r\n\r\n        this.x = Math.random() * 2 - 1;\r\n        this.y = Math.random() * 2 - 1;\r\n\r\n        const computeNextPoint = (i: number) => {\r\n            data[2 * i + 0] = Math.sin(this.x * this.y / b) + Math.cos(a * this.x - this.y);\r\n            data[2 * i + 1] = this.x + Math.sin(this.y) / b;\r\n\r\n            this.x = data[2 * i + 0];\r\n            this.y = data[2 * i + 1];\r\n        };\r\n\r\n        this.fillData(nbPoints, computeNextPoint);\r\n\r\n        return data;\r\n    }\r\n}\r\n\r\nexport default BeadheadAttractor;\r\n","import GLResource from \"./gl-resource\";\r\nimport VBO from \"./vbo\";\r\n\r\nfunction notImplemented(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    alert(\"NOT IMPLEMENTED YET\");\r\n}\r\n\r\nfunction bindUniformFloat(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number | number[]): void;\r\nfunction bindUniformFloat(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    if (Array.isArray(value)) {\r\n        gl.uniform1fv(location, value);\r\n    } else {\r\n        gl.uniform1f(location, value);\r\n    }\r\n}\r\n\r\nfunction bindUniformFloat2v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform2fv(location, value);\r\n}\r\n\r\nfunction bindUniformFloat3v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform3fv(location, value);\r\n}\r\n\r\nfunction bindUniformFloat4v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform4fv(location, value);\r\n}\r\n\r\nfunction bindUniformInt(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number | number[]): void;\r\nfunction bindUniformInt(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    if (Array.isArray(value)) {\r\n        gl.uniform1iv(location, value);\r\n    } else {\r\n        gl.uniform1iv(location, value);\r\n    }\r\n}\r\n\r\nfunction bindUniformInt2v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform2iv(location, value);\r\n}\r\n\r\nfunction bindUniformInt3v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform3iv(location, value);\r\n}\r\n\r\nfunction bindUniformInt4v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform4iv(location, value);\r\n}\r\n\r\nfunction bindUniformBool(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: boolean | number): void {\r\n    gl.uniform1i(location, +value);\r\n}\r\n\r\nfunction bindUniformBool2v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value): void {\r\n    gl.uniform2iv(location, value);\r\n}\r\n\r\nfunction bindUniformBool3v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value): void {\r\n    gl.uniform3iv(location, value);\r\n}\r\n\r\nfunction bindUniformBool4v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value): void {\r\n    gl.uniform4iv(location, value);\r\n}\r\n\r\nfunction bindUniformFloatMat2(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniformMatrix2fv(location, false, value);\r\n}\r\n\r\nfunction bindUniformFloatMat3(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniformMatrix3fv(location, false, value);\r\n}\r\n\r\nfunction bindUniformFloatMat4(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniformMatrix4fv(location, false, value);\r\n}\r\n\r\nfunction bindSampler2D(gl: WebGLRenderingContext, location: WebGLUniformLocation, unitNb: number,\r\n                       value: WebGLTexture): void {\r\n    gl.uniform1i(location, unitNb);\r\n    gl.activeTexture(gl[\"TEXTURE\" + unitNb]);\r\n    gl.bindTexture(gl.TEXTURE_2D, value);\r\n}\r\n\r\nfunction bindSamplerCube(gl: WebGLRenderingContext, location: WebGLUniformLocation, unitNb: number,\r\n                         value: WebGLTexture): void {\r\n    gl.uniform1i(location, unitNb);\r\n    gl.activeTexture(gl[\"TEXTURE\" + unitNb]);\r\n    gl.bindTexture(gl.TEXTURE_CUBE_MAP, value);\r\n}\r\n\r\n/* From WebGL spec:\r\n* http://www.khronos.org/registry/webgl/specs/latest/1.0/#5.14 */\r\nconst types = {\r\n    0x8B50: { str: \"FLOAT_VEC2\", binder: bindUniformFloat2v },\r\n    0x8B51: { str: \"FLOAT_VEC3\", binder: bindUniformFloat3v },\r\n    0x8B52: { str: \"FLOAT_VEC4\", binder: bindUniformFloat4v },\r\n    0x8B53: { str: \"INT_VEC2\", binder: bindUniformInt2v },\r\n    0x8B54: { str: \"INT_VEC3\", binder: bindUniformInt3v },\r\n    0x8B55: { str: \"INT_VEC4\", binder: bindUniformInt4v },\r\n    0x8B56: { str: \"BOOL\", binder: bindUniformBool },\r\n    0x8B57: { str: \"BOOL_VEC2\", binder: bindUniformBool2v },\r\n    0x8B58: { str: \"BOOL_VEC3\", binder: bindUniformBool3v },\r\n    0x8B59: { str: \"BOOL_VEC4\", binder: bindUniformBool4v },\r\n    0x8B5A: { str: \"FLOAT_MAT2\", binder: bindUniformFloatMat2 },\r\n    0x8B5B: { str: \"FLOAT_MAT3\", binder: bindUniformFloatMat3 },\r\n    0x8B5C: { str: \"FLOAT_MAT4\", binder: bindUniformFloatMat4 },\r\n    0x8B5E: { str: \"SAMPLER_2D\", binder: bindSampler2D },\r\n    0x8B60: { str: \"SAMPLER_CUBE\", binder: bindSamplerCube },\r\n    0x1400: { str: \"BYTE\", binder: notImplemented },\r\n    0x1401: { str: \"UNSIGNED_BYTE\", binder: notImplemented },\r\n    0x1402: { str: \"SHORT\", binder: notImplemented },\r\n    0x1403: { str: \"UNSIGNED_SHORT\", binder: notImplemented },\r\n    0x1404: { str: \"INT\", binder: bindUniformInt },\r\n    0x1405: { str: \"UNSIGNED_INT\", binder: notImplemented },\r\n    0x1406: { str: \"FLOAT\", binder: bindUniformFloat },\r\n};\r\n\r\ninterface IShaderUniform {\r\n    value: boolean | boolean[] | number | number[] | WebGLTexture | WebGLTexture[];\r\n    loc: WebGLUniformLocation;\r\n    size: number;\r\n    type: number;\r\n}\r\n\r\ninterface IShaderAttribute {\r\n    VBO: VBO;\r\n    loc: GLint;\r\n    size: number;\r\n    type: number;\r\n}\r\n\r\nclass ShaderProgram extends GLResource {\r\n    public u: IShaderUniform[];\r\n    public a: IShaderAttribute[];\r\n\r\n    private id: WebGLProgram;\r\n    private uCount: number;\r\n    private aCount: number;\r\n\r\n    constructor(gl: WebGLRenderingContext, vertexSource: string, fragmentSource: string) {\r\n        function createShader(type: GLenum, source: string): WebGLShader {\r\n            const shader = gl.createShader(type);\r\n            gl.shaderSource(shader, source);\r\n            gl.compileShader(shader);\r\n\r\n            const compileSuccess = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n            if (!compileSuccess) {\r\n                console.error(gl.getShaderInfoLog(shader));\r\n                gl.deleteShader(shader);\r\n                return null;\r\n            }\r\n\r\n            return shader;\r\n        }\r\n\r\n        super(gl);\r\n\r\n        this.id = null;\r\n        this.uCount = 0;\r\n        this.aCount = 0;\r\n\r\n        const vertexShader = createShader(gl.VERTEX_SHADER, vertexSource);\r\n        const fragmentShader = createShader(gl.FRAGMENT_SHADER, fragmentSource);\r\n\r\n        const id = gl.createProgram();\r\n        gl.attachShader(id, vertexShader);\r\n        gl.attachShader(id, fragmentShader);\r\n        gl.linkProgram(id);\r\n\r\n        const linkSuccess = gl.getProgramParameter(id, gl.LINK_STATUS);\r\n        if (!linkSuccess) {\r\n            console.error(gl.getProgramInfoLog(id));\r\n            gl.deleteProgram(id);\r\n        } else {\r\n            this.id = id;\r\n\r\n            this.introspection();\r\n        }\r\n    }\r\n\r\n    public freeGLResources(): void {\r\n        super.gl().deleteProgram(this.id);\r\n        this.id = null;\r\n    }\r\n\r\n    public use(): void {\r\n        super.gl().useProgram(this.id);\r\n    }\r\n\r\n    public bindUniforms(): void {\r\n        const gl: WebGLRenderingContext = super.gl();\r\n        let currTextureUnitNb: number = 0;\r\n\r\n        Object.keys(this.u).forEach((uName) => {\r\n            const uniform = this.u[uName];\r\n            if (uniform.value !== null) {\r\n                if (uniform.type === 0x8B5E || uniform.type === 0x8B60) {\r\n                    const unitNb: number = currTextureUnitNb;\r\n                    types[uniform.type].binder(gl, uniform.loc, unitNb, uniform.value);\r\n                    currTextureUnitNb++;\r\n                } else {\r\n                    types[uniform.type].binder(gl, uniform.loc, uniform.value);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public bindAttributes(): void {\r\n        Object.keys(this.a).forEach((aName) => {\r\n            const attribute = this.a[aName];\r\n            if (attribute.VBO !== null) {\r\n                attribute.VBO.bind(attribute.loc);\r\n            }\r\n        });\r\n    }\r\n\r\n    public bindUniformsAndAttributes(): void {\r\n        this.bindUniforms();\r\n        this.bindAttributes();\r\n    }\r\n\r\n    private introspection(): void {\r\n        const gl = super.gl();\r\n\r\n        this.uCount = gl.getProgramParameter(this.id, gl.ACTIVE_UNIFORMS);\r\n        this.u = [];\r\n        for (let i = 0; i < this.uCount; ++i) {\r\n            const uniform = gl.getActiveUniform(this.id, i);\r\n            const name = uniform.name;\r\n\r\n            this.u[name] = {\r\n                loc: gl.getUniformLocation(this.id, name),\r\n                size: uniform.size,\r\n                type: uniform.type,\r\n                value: null,\r\n            };\r\n        }\r\n\r\n        this.aCount = gl.getProgramParameter(this.id, gl.ACTIVE_ATTRIBUTES);\r\n        this.a = [];\r\n        for (let i = 0; i < this.aCount; ++i) {\r\n            const attribute = gl.getActiveAttrib(this.id, i);\r\n            const name = attribute.name;\r\n\r\n            this.a[name] = {\r\n                VBO: null,\r\n                loc: gl.getAttribLocation(this.id, name),\r\n                size: attribute.size,\r\n                type: attribute.type,\r\n            };\r\n        }\r\n    }\r\n}\r\n\r\nexport default ShaderProgram;\r\n","type LoadCallback = (success: boolean)  => void;\r\n\r\ninterface ICachedSource {\r\n    text: string;\r\n    pending: boolean;\r\n    failed: boolean;\r\n    callbacks: LoadCallback[];\r\n}\r\n\r\nconst cachedSources: { [id: string]: ICachedSource } = {};\r\n\r\n/* Fetches asynchronously the shader source from server and stores it in cache. */\r\nfunction loadSource(filename: string, callback: LoadCallback) {\r\n    function callAndClearCallbacks(cached: ICachedSource) {\r\n        for (const cachedCallback of cached.callbacks) {\r\n            cachedCallback(!cached.failed);\r\n        }\r\n\r\n        cached.callbacks = [];\r\n    }\r\n\r\n    if (typeof cachedSources[filename] === \"undefined\") {\r\n        cachedSources[filename] = {\r\n            callbacks: [callback],\r\n            failed: false,\r\n            pending: true,\r\n            text: null,\r\n        };\r\n        const cached = cachedSources[filename];\r\n\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open(\"GET\", \"./shaders/\" + filename, true);\r\n        xhr.onload = () => {\r\n            if (xhr.readyState === 4) {\r\n                cached.pending = false;\r\n\r\n                if (xhr.status === 200) {\r\n                    cached.text = xhr.responseText;\r\n                    cached.failed = false;\r\n                } else {\r\n                    console.error(\"Cannot load '\" + filename + \"' shader source: \" + xhr.statusText);\r\n                    cached.failed = true;\r\n                }\r\n\r\n                callAndClearCallbacks(cached);\r\n            }\r\n        };\r\n        xhr.onerror = () => {\r\n            console.error(\"Cannot load '\" + filename + \"' shader source: \" + xhr.statusText);\r\n            cached.pending = false;\r\n            cached.failed = true;\r\n            callAndClearCallbacks(cached);\r\n        };\r\n\r\n        xhr.send(null);\r\n    } else {\r\n        const cached = cachedSources[filename];\r\n\r\n        if (cached.pending === true) {\r\n            cached.callbacks.push(callback);\r\n        } else {\r\n            cached.callbacks = [callback];\r\n            callAndClearCallbacks(cached);\r\n        }\r\n    }\r\n}\r\n\r\nfunction getSource(filename: string): string {\r\n    return cachedSources[filename].text;\r\n}\r\n\r\nexport {\r\n    getSource,\r\n    loadSource,\r\n};\r\n","class Boundaries {\r\n    public minX: number;\r\n    public maxX: number;\r\n    public minY: number;\r\n    public maxY: number;\r\n\r\n    public constructor() {\r\n        this.minX = 0;\r\n        this.maxX = 0;\r\n        this.minY = 0;\r\n        this.maxY = 0;\r\n    }\r\n\r\n    public get center(): number[] {\r\n        return [\r\n            0.5 * (this.maxX + this.minX),\r\n            0.5 * (this.maxY + this.minY),\r\n        ];\r\n    }\r\n\r\n    public get maxDimension(): number {\r\n        return Math.max(this.maxX - this.minX, this.maxY - this.minY);\r\n    }\r\n\r\n    public includePoint(x: number, y: number) {\r\n        this.minX = Math.min(this.minX, x);\r\n        this.minY = Math.min(this.minY, y);\r\n\r\n        this.maxX = Math.max(this.maxX, x);\r\n        this.maxY = Math.max(this.maxY, y);\r\n    }\r\n}\r\n\r\nexport default Boundaries;\r\n","import { ControlsID, Parameters } from \"../parameters\";\r\nimport Attractor from \"./attractor\";\r\n\r\ndeclare const Controls: any;\r\n\r\nclass CliffordAttractor extends Attractor {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    public get name(): string {\r\n        return \"Clifford\";\r\n    }\r\n\r\n    public get formula(): string {\r\n        return `x_{n+1} = sin(a*y_{n}) + c*cos(a*x_{n})\r\n        y_{n+1} = sin(c*x_{n}) + d*cos(b*y_{n})`;\r\n    }\r\n\r\n    public get parameters(): string[] {\r\n        return [\r\n            \"a = \" + Parameters.a,\r\n            \"b = \" + Parameters.b,\r\n            \"c = \" + Parameters.c,\r\n            \"d = \" + Parameters.d,\r\n        ];\r\n    }\r\n\r\n    public toggleParametersVisibility(): void {\r\n        Controls.setVisibility(ControlsID.A, true);\r\n        Controls.setVisibility(ControlsID.B, true);\r\n        Controls.setVisibility(ControlsID.C, true);\r\n        Controls.setVisibility(ControlsID.D, true);\r\n    }\r\n\r\n    protected computeXPoints(nbPoints: number): Float32Array {\r\n        const data = new Float32Array(2 * nbPoints);\r\n\r\n        const a = Parameters.a;\r\n        const b = Parameters.b;\r\n        const c = Parameters.c;\r\n        const d = Parameters.d;\r\n\r\n        this.x = Math.random() * 2 - 1;\r\n        this.y = Math.random() * 2 - 1;\r\n\r\n        const computeNextPoint = (i: number) => {\r\n            data[2 * i + 0] = Math.sin(a * this.y) + c * Math.cos(a * this.x);\r\n            data[2 * i + 1] = Math.sin(c * this.x) + d * Math.cos(b * this.y);\r\n\r\n            this.x = data[2 * i + 0];\r\n            this.y = data[2 * i + 1];\r\n        };\r\n\r\n        this.fillData(nbPoints, computeNextPoint);\r\n\r\n        return data;\r\n    }\r\n}\r\n\r\nexport default CliffordAttractor;\r\n","import { ControlsID, Parameters } from \"../parameters\";\r\nimport Attractor from \"./attractor\";\r\n\r\ndeclare const Controls: any;\r\n\r\nclass DeJongAttractor extends Attractor {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    public get name(): string {\r\n        return \"De Jong\";\r\n    }\r\n\r\n    public get formula(): string {\r\n        return `x_{n+1} = sin(a*y_{n}) - cos(b*x_{n})\r\n        y_{n+1} = sin(c*x_{n}) - cos(d*y_{n})`;\r\n    }\r\n\r\n    public get parameters(): string[] {\r\n        return [\r\n            \"a = \" + Parameters.a,\r\n            \"b = \" + Parameters.b,\r\n            \"c = \" + Parameters.c,\r\n            \"d = \" + Parameters.d,\r\n        ];\r\n    }\r\n\r\n    public toggleParametersVisibility(): void {\r\n        Controls.setVisibility(ControlsID.A, true);\r\n        Controls.setVisibility(ControlsID.B, true);\r\n        Controls.setVisibility(ControlsID.C, true);\r\n        Controls.setVisibility(ControlsID.D, true);\r\n    }\r\n\r\n    protected computeXPoints(nbPoints: number): Float32Array {\r\n        const data = new Float32Array(2 * nbPoints);\r\n\r\n        const a = Parameters.a;\r\n        const b = Parameters.b;\r\n        const c = Parameters.c;\r\n        const d = Parameters.d;\r\n\r\n        this.x = Math.random() * 2 - 1;\r\n        this.y = Math.random() * 2 - 1;\r\n\r\n        const computeNextPoint = (i: number) => {\r\n            data[2 * i + 0] = Math.sin(a * this.y) - Math.cos(b * this.x);\r\n            data[2 * i + 1] = Math.sin(c * this.x) - Math.cos(d * this.y);\r\n\r\n            this.x = data[2 * i + 0];\r\n            this.y = data[2 * i + 1];\r\n        };\r\n\r\n        this.fillData(nbPoints, computeNextPoint);\r\n\r\n        return data;\r\n    }\r\n}\r\n\r\nexport default DeJongAttractor;\r\n","import { ControlsID, Parameters } from \"../parameters\";\r\nimport Attractor from \"./attractor\";\r\n\r\ndeclare const Controls: any;\r\n\r\nclass FractalDreamAttractor extends Attractor {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    public get name(): string {\r\n        return \"Fractal Dream\";\r\n    }\r\n\r\n    public get formula(): string {\r\n        return `x_{n+1} = sin(b*y_{n}) + c*sin(b*x_{n})\r\n        y_{n+1} = sin(a*x_{n}) + d*sin(a*y_{n})`;\r\n    }\r\n\r\n    public get parameters(): string[] {\r\n        return [\r\n            \"a = \" + Parameters.a,\r\n            \"b = \" + Parameters.b,\r\n            \"c = \" + Parameters.c,\r\n            \"d = \" + Parameters.d,\r\n        ];\r\n    }\r\n\r\n    public toggleParametersVisibility(): void {\r\n        Controls.setVisibility(ControlsID.A, true);\r\n        Controls.setVisibility(ControlsID.B, true);\r\n        Controls.setVisibility(ControlsID.C, true);\r\n        Controls.setVisibility(ControlsID.D, true);\r\n    }\r\n\r\n    protected computeXPoints(nbPoints: number): Float32Array {\r\n        const data = new Float32Array(2 * nbPoints);\r\n\r\n        const a = Parameters.a;\r\n        const b = Parameters.b;\r\n        const c = Parameters.c;\r\n        const d = Parameters.d;\r\n\r\n        this.x = Math.random() * 2 - 1;\r\n        this.y = Math.random() * 2 - 1;\r\n\r\n        const computeNextPoint = (i: number) => {\r\n            data[2 * i + 0] = Math.sin(b * this.y) + c * Math.sin(b * this.x);\r\n            data[2 * i + 1] = Math.sin(a * this.x) + d * Math.sin(a * this.y);\r\n\r\n            this.x = data[2 * i + 0];\r\n            this.y = data[2 * i + 1];\r\n        };\r\n\r\n        this.fillData(nbPoints, computeNextPoint);\r\n\r\n        return data;\r\n    }\r\n}\r\n\r\nexport default FractalDreamAttractor;\r\n","import FBO from \"../gl-utils/fbo\";\r\nimport * as GLCanvas from \"../gl-utils/gl-canvas\";\r\nimport { gl } from \"../gl-utils/gl-canvas\";\r\nimport Shader from \"../gl-utils/shader\";\r\nimport * as ShaderManager from \"../gl-utils/shader-manager\";\r\nimport VBO from \"../gl-utils/vbo\";\r\nimport Viewport from \"../gl-utils/viewport\";\r\n\r\nimport { Parameters } from \"../parameters\";\r\nimport CompositingBase from \"./compositing\";\r\n\r\ndeclare const Canvas: any;\r\n\r\nfunction HSVToRGB(hue: number, saturation: number, value: number): number[] {\r\n    let r = 0;\r\n    let g = 0;\r\n    let b = 0;\r\n\r\n    hue = (hue %  1) * 6;\r\n\r\n    if (hue < 1) {\r\n        r = 1;\r\n        g = hue;\r\n    } else if (hue < 2) {\r\n        r = 2 - hue;\r\n        g = 1;\r\n    } else if (hue < 3) {\r\n        g = 1;\r\n        b = hue - 2;\r\n    } else if (hue < 4) {\r\n        g = 4 - hue;\r\n        b = 1;\r\n    } else if (hue < 5) {\r\n        r = hue - 4;\r\n        b = 1;\r\n    } else if (hue < 6) {\r\n        r = 1;\r\n        b = 6 - hue;\r\n    }\r\n\r\n    r = value * (1 - saturation * (1 - r));\r\n    b = value * (1 - saturation * (1 - b));\r\n    g = value * (1 - saturation * (1 - g));\r\n\r\n    return [r, g, b, 1];\r\n}\r\n\r\nclass CompositingColor extends CompositingBase {\r\n    private _FBO: FBO;\r\n\r\n    private _compositionShader: Shader;\r\n\r\n    private _texture: WebGLTexture;\r\n    private _currentTextureSize: number;\r\n\r\n    private _foregroundRgb: number[];\r\n    private _backgroundRgb: number[];\r\n\r\n    public constructor() {\r\n        super();\r\n        this.backgroundColor = \"red\";\r\n        this.foregroundColor = \"yellow\";\r\n\r\n        ShaderManager.buildShader(\r\n            {\r\n                fragmentFilename: \"compose.frag\",\r\n                vertexFilename: \"compose.vert\",\r\n                injected: {},\r\n            },\r\n            (newShader) => {\r\n                if (newShader !== null) {\r\n                    this._compositionShader = newShader;\r\n                    /* tslint:disable:no-string-literal */\r\n                    this._compositionShader.a[\"aCorner\"].VBO = VBO.createQuad(gl, -1, -1, 1, 1);\r\n                    /* tslint:enable:no-string-literal */\r\n                }\r\n            },\r\n        );\r\n\r\n        const size = 512;\r\n\r\n        this._FBO = new FBO(gl, size, size);\r\n        this._currentTextureSize = 0;\r\n        this.initializeTexture(size);\r\n    }\r\n\r\n    public initialize(): void {\r\n        function upperPowerOfTwo(x: number): number {\r\n            return Math.pow(2, Math.ceil(Math.log(x) * Math.LOG2E));\r\n        }\r\n\r\n        const canvasSize = Canvas.getSize();\r\n        const minSize = Math.min(canvasSize[0], canvasSize[1]);\r\n        const neededSize = upperPowerOfTwo(minSize);\r\n        console.log(\"min \" + minSize + \" ; \" + neededSize);\r\n        if (this._currentTextureSize !== neededSize) {\r\n            this.initializeTexture(neededSize);\r\n            this._FBO.width = neededSize;\r\n            this._FBO.height = neededSize;\r\n        }\r\n\r\n        gl.clearColor(0, 0, 0, 1);\r\n\r\n        gl.enable(gl.BLEND);\r\n        gl.blendFunc(gl.ONE, gl.ONE);\r\n        gl.blendEquation(gl.FUNC_ADD);\r\n\r\n        GLCanvas.adjustSize();\r\n\r\n        this._FBO.bind([this._texture]);\r\n        gl.clear(gl.COLOR_BUFFER_BIT);\r\n\r\n        FBO.bindDefault(gl);\r\n        gl.clear(gl.COLOR_BUFFER_BIT);\r\n\r\n        this.updateColors();\r\n    }\r\n\r\n    public bindTopLayer(): void {\r\n        this._FBO.bind([this._texture]);\r\n    }\r\n\r\n    public compose(): void {\r\n        if (this._compositionShader) {\r\n            FBO.bindDefault(gl);\r\n            Viewport.setFullCanvas(gl);\r\n            gl.clear(gl.COLOR_BUFFER_BIT);\r\n\r\n            /* tslint:disable:no-string-literal */\r\n            this._compositionShader.u[\"uTexture\"].value = this._texture;\r\n            this._compositionShader.u[\"uForegroundColor\"].value = this._foregroundRgb;\r\n            this._compositionShader.u[\"uBackgroundColor\"].value = this._backgroundRgb;\r\n            /* tslint:enable:no-string-literal */\r\n\r\n            this._compositionShader.use();\r\n            this._compositionShader.bindUniformsAndAttributes();\r\n            gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\r\n        }\r\n    }\r\n\r\n    /* size parameter should be a power of two */\r\n    private initializeTexture(size: number): void {\r\n        if (this._texture) {\r\n            gl.deleteTexture(this._texture);\r\n            this._texture = null;\r\n        }\r\n\r\n        const uintTexels: number[] = new Array(4 * size * size);\r\n        for (let i = 0; i < uintTexels.length;  ++i) {\r\n            uintTexels[i] = 127;\r\n        }\r\n        const uintData = new Uint8Array(uintTexels);\r\n        this._texture = gl.createTexture();\r\n        gl.bindTexture(gl.TEXTURE_2D, this._texture);\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, size, size, 0, gl.RGBA, gl.UNSIGNED_BYTE, uintData);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\r\n        gl.bindTexture(gl.TEXTURE_2D, null);\r\n\r\n        this._currentTextureSize = size;\r\n    }\r\n\r\n    private updateColors(): void {\r\n        function normalizedTo255(x: number): number {\r\n            return Math.floor(255 * x);\r\n        }\r\n        function rgbaToString(rgb: number[]): string {\r\n            return \"rgb(\" + normalizedTo255(rgb[0]) + \",\" +\r\n                normalizedTo255(rgb[1]) + \",\" + normalizedTo255(rgb[2])  + \")\";\r\n        }\r\n\r\n        this._foregroundRgb = HSVToRGB(Parameters.foregroundHue, 0.8, 1);\r\n        this.foregroundColor = rgbaToString(this._foregroundRgb);\r\n\r\n        this._backgroundRgb = HSVToRGB(Parameters.backgroundHue, 0.2, 0.85);\r\n        this.backgroundColor = rgbaToString(this._backgroundRgb);\r\n    }\r\n}\r\n\r\nexport default CompositingColor;\r\n","import GLResource from \"./gl-resource\";\r\nimport Viewport from \"./viewport\";\r\n\r\nclass FBO extends GLResource {\r\n    public static bindDefault(gl: WebGLRenderingContext, viewport: Viewport = null): void {\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\r\n        if (viewport === null) {\r\n            gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\r\n        } else {\r\n            gl.viewport(viewport.left, viewport.lower, viewport.width, viewport.height);\r\n        }\r\n\r\n    }\r\n\r\n    public width: number;\r\n    public height: number;\r\n    private id: WebGLFramebuffer;\r\n\r\n    constructor(gl: WebGLRenderingContext, width: number, height: number) {\r\n        super(gl);\r\n\r\n        this.id = gl.createFramebuffer();\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n\r\n    public bind(colorBuffers: WebGLTexture[], depthBuffer: WebGLRenderbuffer = null): void {\r\n        const gl = super.gl();\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.id);\r\n        gl.viewport(0, 0, this.width, this.height);\r\n\r\n        for (let i = 0; i < colorBuffers.length; ++i) {\r\n          gl.framebufferTexture2D(\r\n            gl.FRAMEBUFFER, gl[\"COLOR_ATTACHMENT\" + i], gl.TEXTURE_2D, colorBuffers[i], 0);\r\n        }\r\n\r\n        if (depthBuffer) {\r\n          gl.bindRenderbuffer(gl.RENDERBUFFER, depthBuffer);\r\n          gl.framebufferRenderbuffer(\r\n            gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, depthBuffer);\r\n        }\r\n    }\r\n\r\n    public freeGLResources(): void {\r\n        super.gl().deleteFramebuffer(this.id);\r\n        this.id = null;\r\n    }\r\n}\r\n\r\nexport default FBO;\r\n","import * as GLCanvas from \"../gl-utils/gl-canvas\";\r\nimport { gl } from \"../gl-utils/gl-canvas\";\r\nimport Viewport from \"../gl-utils/viewport\";\r\n\r\nimport CompositingBase from \"./compositing\";\r\n\r\nclass CompositingDark extends CompositingBase {\r\n    public constructor() {\r\n        super();\r\n        this.backgroundColor = \"black\";\r\n        this.foregroundColor = \"white\";\r\n    }\r\n\r\n    public initialize(): void {\r\n        gl.clearColor(0, 0, 0, 1);\r\n\r\n        gl.enable(gl.BLEND);\r\n        gl.blendFunc(gl.ONE, gl.ONE);\r\n        gl.blendEquation(gl.FUNC_ADD);\r\n\r\n        GLCanvas.adjustSize();\r\n        Viewport.setFullCanvas(gl);\r\n        gl.clear(gl.COLOR_BUFFER_BIT);\r\n    }\r\n\r\n    /* tslint:disable:no-empty */\r\n    public bindTopLayer(): void {}\r\n    public compose(): void {}\r\n    /* tslint:enable:no-empty */\r\n}\r\n\r\nexport default CompositingDark;\r\n","import * as GLCanvas from \"../gl-utils/gl-canvas\";\r\nimport { gl } from \"../gl-utils/gl-canvas\";\r\nimport Viewport from \"../gl-utils/viewport\";\r\n\r\nimport CompositingBase from \"./compositing\";\r\n\r\nclass CompositingLight extends CompositingBase {\r\n    public constructor() {\r\n        super();\r\n        this.backgroundColor = \"white\";\r\n        this.foregroundColor = \"black\";\r\n    }\r\n\r\n    public initialize(): void {\r\n        gl.clearColor(1, 1, 1, 1);\r\n\r\n        gl.enable(gl.BLEND);\r\n        gl.blendFunc(gl.ONE, gl.ONE);\r\n        gl.blendEquation(gl.FUNC_REVERSE_SUBTRACT);\r\n\r\n        GLCanvas.adjustSize();\r\n        Viewport.setFullCanvas(gl);\r\n        gl.clear(gl.COLOR_BUFFER_BIT);\r\n    }\r\n\r\n    /* tslint:disable:no-empty */\r\n    public bindTopLayer(): void {}\r\n    public compose(): void {}\r\n    /* tslint:enable:no-empty */\r\n}\r\n\r\nexport default CompositingLight;\r\n"],"sourceRoot":""}