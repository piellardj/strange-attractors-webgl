{"version":3,"sources":["webpack://strange-attractors-webgl/./src/ts/attractors/attractor.ts","webpack://strange-attractors-webgl/./src/ts/attractors/bedhead.ts","webpack://strange-attractors-webgl/./src/ts/attractors/boundaries.ts","webpack://strange-attractors-webgl/./src/ts/attractors/clifford.ts","webpack://strange-attractors-webgl/./src/ts/attractors/de-jong.ts","webpack://strange-attractors-webgl/./src/ts/attractors/fractal-dream.ts","webpack://strange-attractors-webgl/./src/ts/compositing/compositing-color.ts","webpack://strange-attractors-webgl/./src/ts/compositing/compositing-dark.ts","webpack://strange-attractors-webgl/./src/ts/compositing/compositing-light.ts","webpack://strange-attractors-webgl/./src/ts/compositing/compositing.ts","webpack://strange-attractors-webgl/./src/ts/gl-utils/fbo.ts","webpack://strange-attractors-webgl/./src/ts/gl-utils/gl-canvas.ts","webpack://strange-attractors-webgl/./src/ts/gl-utils/gl-resource.ts","webpack://strange-attractors-webgl/./src/ts/gl-utils/shader-manager.ts","webpack://strange-attractors-webgl/./src/ts/gl-utils/shader-sources.ts","webpack://strange-attractors-webgl/./src/ts/gl-utils/shader.ts","webpack://strange-attractors-webgl/./src/ts/gl-utils/vbo.ts","webpack://strange-attractors-webgl/./src/ts/gl-utils/viewport.ts","webpack://strange-attractors-webgl/./src/ts/infos.ts","webpack://strange-attractors-webgl/./src/ts/main.ts","webpack://strange-attractors-webgl/./src/ts/parameters.ts","webpack://strange-attractors-webgl/webpack/bootstrap","webpack://strange-attractors-webgl/webpack/startup"],"names":["shader","pointsVBO","ShaderManager","buildShader","fragmentFilename","vertexFilename","injected","newShader","fillData","Float32Array","gl","FLOAT","this","boundaries","drawXPoints","nbPoints","data","computeXPoints","setData","canvasSize","Page","Canvas","getSize","aspectRatio","a","VBO","q","Parameters","quality","u","value","center","maxDimension","Math","max","min","use","bindUniformsAndAttributes","drawArrays","POINTS","reset","toggleParametersVisibility","Infos","setTitle","name","setFormula","formula","setParameters","parameters","computeNextPoint","i","includePoint","x","y","Attractor","b","Controls","setVisibility","ControlsID","A","B","C","D","random","sin","cos","BeadheadAttractor","minX","maxX","minY","maxY","Boundaries","c","d","CliffordAttractor","DeJongAttractor","FractalDreamAttractor","backgroundColor","foregroundColor","_compositionShader","createQuad","_FBO","_currentTextureSize","initializeTexture","initialize","neededSize","pow","ceil","log","LOG2E","width","height","clearColor","enable","BLEND","blendFunc","ONE","blendEquation","FUNC_ADD","GLCanvas","adjustSize","bind","_texture","clear","COLOR_BUFFER_BIT","bindDefault","updateColors","bindTopLayer","compose","setFullCanvas","_foregroundRgb","_backgroundRgb","TRIANGLE_STRIP","normalizedTo255","floor","rgbaToString","rgb","size","deleteTexture","uintTexels","Array","length","uintData","Uint8Array","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","REPEAT","TEXTURE_WRAP_T","CompositingColor","CompositingDark","FUNC_REVERSE_SUBTRACT","CompositingLight","id","createFramebuffer","viewport","bindFramebuffer","FRAMEBUFFER","drawingBufferWidth","drawingBufferHeight","left","lower","colorBuffers","depthBuffer","framebufferTexture2D","bindRenderbuffer","RENDERBUFFER","framebufferRenderbuffer","DEPTH_ATTACHMENT","freeGLResources","deleteFramebuffer","FBO","initGL","flags","setError","message","Demopage","setErrorMessage","canvas","getCanvas","getContext","disable","CULL_FACE","DEPTH_TEST","hidpi","cssPixel","window","devicePixelRatio","clientWidth","clientHeight","_gl","GLResource","cachedShaders","infos","callback","sourcesPending","sourcesFailed","loadedSource","success","processSource","source","replace","match","vert","ShaderSources","getSource","frag","processedVert","processedFrag","loadSource","getShader","registerShader","callAndClearCallbacks","cached","callbacks","cachedCallback","failed","pending","builtShader","push","deleteShader","cachedSources","filename","text","XMLHttpRequest","open","onload","readyState","status","responseText","console","error","statusText","onerror","send","notImplemented","location","alert","types","str","binder","uniform2fv","uniform3fv","uniform4fv","uniform2iv","uniform3iv","uniform4iv","uniform1i","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","unitNb","activeTexture","TEXTURE_CUBE_MAP","isArray","uniform1iv","uniform1fv","uniform1f","vertexSource","fragmentSource","createShader","type","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","uCount","aCount","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","introspection","getProgramInfoLog","deleteProgram","useProgram","bindUniforms","currTextureUnitNb","Object","keys","forEach","uName","uniform","loc","bindAttributes","aName","attribute","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","ShaderProgram","Usage","array","staticUsage","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","DYNAMIC_DRAW","normalize","stride","offset","usage","STATIC","DYNAMIC","deleteBuffer","enableVertexAttribArray","vertexAttribPointer","set","Viewport","fontLink","colorsStylesheet","FONT_NAME","fontColor","document","createElement","href","rel","head","appendChild","infosCss","infosStyle","setAttribute","styleSheet","cssText","createTextNode","infosColorsStyle","sheet","setColors","titleElt","className","formulaElt","parametersElt","infosBlockElt","newFontColor","newBackgroundColor","cssRules","deleteRule","insertRule","visible","style","opacity","parentElement","title","textContent","frame","op","f","frameNode","node","HALF_SPACE","html","$1","innerHTML","join","drawToCanvas","ctx","setFontSize","sizeInPx","font","drawBackground","previousFillStyle","fillStyle","fillRect","textAlign","textBaseline","top","BLOCK_MARGIN","fontSize","fillText","split","dLeft","currIndex","writeText","measureText","findNext","nodeName","indexOf","index","substring","line","alpha","depth","preserveDrawingBuffer","needToRestartRendering","Observers","canvasResize","clearObservers","attractor","attractorNames","DeJong","attractors","Bedhead","Clifford","FractalDream","totalPoints","shouldComposeAgain","compositings","setTotalPoints","total","setIndicatorText","toLocaleString","compositingNames","color","dark","light","shouldComposeAgainObservers","compositing","MAX_STEP_SIZE","FileControl","addDownloadObserver","DOWNLOAD","figureSize","Tabs","getValues","DOWNLOAD_SIZE","nbPointsNeeded","computeNbPointsNeeded","confirm","canvas2D","ctx2D","canvasGL","showLoader","position","maxStepSize","stepSize","drawImage","setLoaderText","msToBlob","blob","navigator","msSaveBlob","toBlob","link","download","URL","createObjectURL","click","requestAnimationFrame","mainLoop","main","controlId","ATTRACTOR","FORMULA","INDICATORS","INTENSITY","QUALITY","COMPOSITING","FOREGROUND","BACKGROUND","callObservers","observersList","observer","intensity","observers","updateNbPointsNeeded","setCompositing","isColor","att","Picker","setValue","minDimension","buildColor","r","g","addObserver","Range","newvalue","getValue","Checkbox","checked","isChecked","needToClear","newValue","ColorPicker","newColor","setIndicatorsVisibility","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call"],"mappings":"ktBAAA,aAEA,YACA,WAEA,YACA,QACA,YAEIA,EAAiB,KACjBC,EAAiB,KAErB,OAEA,iBAKI,aAgBI,GAfe,OAAXD,GACAE,EAAcC,YACV,CACIC,iBAAkB,cAClBC,eAAgB,cAChBC,SAAU,KAEd,SAACC,GACqB,OAAdA,IACAP,EAASO,MAMP,OAAdN,EAAoB,CACpB,IAAMO,EAAW,IAAIC,aAAa,GAClCR,EAAY,IAAI,UAAI,EAAAS,GAAIF,EAAU,EAAG,EAAAE,GAAGC,OAAO,GAGnDC,KAAKC,WAAa,KAsE1B,OAnEW,YAAAC,YAAP,SAAmBC,GACf,GAAIf,EAAQ,CACR,IAAMgB,EAAOJ,KAAKK,eAAeF,GACjCd,EAAUiB,QAAQF,GAElB,IAAMG,EAAaC,KAAKC,OAAOC,UACzBC,EAAcJ,EAAW,GAAKA,EAAW,GAG/CnB,EAAOwB,EAAW,QAAEC,IAAMxB,EAC1B,IAAMyB,EAAI,EAAAC,WAAWC,QACrB5B,EAAO6B,EAAU,OAAEC,MAAQ,CAACJ,EAAGA,EAAGA,EAAG,GACrC1B,EAAO6B,EAAW,QAAEC,MAAQlB,KAAKC,WAAWkB,OAC5C,IAAMC,EAAe,GAAMpB,KAAKC,WAAWmB,aAW3C,OAVAhC,EAAO6B,EAAU,OAAEC,MAAQ,CACvB,EAAIE,EAAeC,KAAKC,IAAIX,EAAa,GACzC,EAAIS,EAAeC,KAAKE,IAAIZ,EAAa,IAI7CvB,EAAOoC,MACPpC,EAAOqC,4BAEP,EAAA3B,GAAG4B,WAAW,EAAA5B,GAAG6B,OAAQ,EAAGxB,IACrB,EAGX,OAAO,GAGJ,YAAAyB,MAAP,WACI5B,KAAK6B,6BACLC,EAAMC,SAAS/B,KAAKgC,MACpBF,EAAMG,WAAWjC,KAAKkC,SACtBJ,EAAMK,cAAcnC,KAAKoC,YACzBpC,KAAKC,WAAa,MAaZ,YAAAL,SAAV,SAAmBO,EAAkBkC,GAEjC,IAAK,IAAIC,EAAI,EAAGA,EAAI,KAAMA,EACtBD,EAAiB,GAGrB,GAAwB,OAApBrC,KAAKC,WAGL,IAFAD,KAAKC,WAAa,IAAI,UAEbqC,EAAI,EAAGA,EAAInC,IAAYmC,EAC5BD,EAAiBC,GACjBtC,KAAKC,WAAWsC,aAAavC,KAAKwC,EAAGxC,KAAKyC,QAG9C,IAASH,EAAI,EAAGA,EAAInC,IAAYmC,EAC5BD,EAAiBC,IAIjC,EAhGA,GAkGA,UAAeI,G,mnBChHf,YACA,YAEA,OAEA,kBACI,a,OACI,cAAO,KA+Cf,OAjDgC,OAK5B,sBAAW,mBAAI,C,IAAf,WACI,MAAO,W,gCAGX,sBAAW,sBAAO,C,IAAlB,WACI,MAAO,+F,gCAIX,sBAAW,yBAAU,C,IAArB,WACI,MAAO,CACH,OAAS,EAAA3B,WAAWH,EACpB,OAAS,EAAAG,WAAW4B,I,gCAIrB,YAAAd,2BAAP,WACIrB,KAAKoC,SAASC,cAAc,EAAAC,WAAWC,GAAG,GAC1CvC,KAAKoC,SAASC,cAAc,EAAAC,WAAWE,GAAG,GAC1CxC,KAAKoC,SAASC,cAAc,EAAAC,WAAWG,GAAG,GAC1CzC,KAAKoC,SAASC,cAAc,EAAAC,WAAWI,GAAG,IAGpC,YAAA7C,eAAV,SAAyBF,GAAzB,WACUC,EAAO,IAAIP,aAAa,EAAIM,GAE5BS,EAAI,EAAAG,WAAWH,EACf+B,EAAI,EAAA5B,WAAW4B,EAerB,OAbA3C,KAAKwC,EAAoB,EAAhBnB,KAAK8B,SAAe,EAC7BnD,KAAKyC,EAAoB,EAAhBpB,KAAK8B,SAAe,EAU7BnD,KAAKJ,SAASO,GARW,SAACmC,GACtBlC,EAAK,EAAIkC,EAAI,GAAKjB,KAAK+B,IAAI,EAAKZ,EAAI,EAAKC,EAAIE,GAAKtB,KAAKgC,IAAIzC,EAAI,EAAK4B,EAAI,EAAKC,GAC7ErC,EAAK,EAAIkC,EAAI,GAAK,EAAKE,EAAInB,KAAK+B,IAAI,EAAKX,GAAKE,EAE9C,EAAKH,EAAIpC,EAAK,EAAIkC,EAAI,GACtB,EAAKG,EAAIrC,EAAK,EAAIkC,EAAI,MAKnBlC,GAEf,EAjDA,CAAgC,WAmDhC,UAAekD,G,mECxDf,iBAMI,aACItD,KAAKuD,KAAO,EACZvD,KAAKwD,KAAO,EACZxD,KAAKyD,KAAO,EACZzD,KAAK0D,KAAO,EAqBpB,OAlBI,sBAAW,qBAAM,C,IAAjB,WACI,MAAO,CACH,IAAO1D,KAAKwD,KAAOxD,KAAKuD,MACxB,IAAOvD,KAAK0D,KAAO1D,KAAKyD,Q,gCAIhC,sBAAW,2BAAY,C,IAAvB,WACI,OAAOpC,KAAKC,IAAItB,KAAKwD,KAAOxD,KAAKuD,KAAMvD,KAAK0D,KAAO1D,KAAKyD,O,gCAGrD,YAAAlB,aAAP,SAAoBC,EAAWC,GAC3BzC,KAAKuD,KAAOlC,KAAKE,IAAIvB,KAAKuD,KAAMf,GAChCxC,KAAKyD,KAAOpC,KAAKE,IAAIvB,KAAKyD,KAAMhB,GAEhCzC,KAAKwD,KAAOnC,KAAKC,IAAItB,KAAKwD,KAAMhB,GAChCxC,KAAK0D,KAAOrC,KAAKC,IAAItB,KAAK0D,KAAMjB,IAExC,EA/BA,GAiCA,UAAekB,G,mnBCjCf,YACA,YAEA,OAEA,kBACI,a,OACI,cAAO,KAmDf,OArDgC,OAK5B,sBAAW,mBAAI,C,IAAf,WACI,MAAO,Y,gCAGX,sBAAW,sBAAO,C,IAAlB,WACI,MAAO,4F,gCAIX,sBAAW,yBAAU,C,IAArB,WACI,MAAO,CACH,OAAS,EAAA5C,WAAWH,EACpB,OAAS,EAAAG,WAAW4B,EACpB,OAAS,EAAA5B,WAAW6C,EACpB,OAAS,EAAA7C,WAAW8C,I,gCAIrB,YAAAhC,2BAAP,WACIrB,KAAKoC,SAASC,cAAc,EAAAC,WAAWC,GAAG,GAC1CvC,KAAKoC,SAASC,cAAc,EAAAC,WAAWE,GAAG,GAC1CxC,KAAKoC,SAASC,cAAc,EAAAC,WAAWG,GAAG,GAC1CzC,KAAKoC,SAASC,cAAc,EAAAC,WAAWI,GAAG,IAGpC,YAAA7C,eAAV,SAAyBF,GAAzB,WACUC,EAAO,IAAIP,aAAa,EAAIM,GAE5BS,EAAI,EAAAG,WAAWH,EACf+B,EAAI,EAAA5B,WAAW4B,EACfiB,EAAI,EAAA7C,WAAW6C,EACfC,EAAI,EAAA9C,WAAW8C,EAerB,OAbA7D,KAAKwC,EAAoB,EAAhBnB,KAAK8B,SAAe,EAC7BnD,KAAKyC,EAAoB,EAAhBpB,KAAK8B,SAAe,EAU7BnD,KAAKJ,SAASO,GARW,SAACmC,GACtBlC,EAAK,EAAIkC,EAAI,GAAKjB,KAAK+B,IAAIxC,EAAI,EAAK6B,GAAKmB,EAAIvC,KAAKgC,IAAIzC,EAAI,EAAK4B,GAC/DpC,EAAK,EAAIkC,EAAI,GAAKjB,KAAK+B,IAAIQ,EAAI,EAAKpB,GAAKqB,EAAIxC,KAAKgC,IAAIV,EAAI,EAAKF,GAE/D,EAAKD,EAAIpC,EAAK,EAAIkC,EAAI,GACtB,EAAKG,EAAIrC,EAAK,EAAIkC,EAAI,MAKnBlC,GAEf,EArDA,CAAgC,WAuDhC,UAAe0D,G,mnBC5Df,YACA,YAEA,OAEA,kBACI,a,OACI,cAAO,KAmDf,OArD8B,OAK1B,sBAAW,mBAAI,C,IAAf,WACI,MAAO,W,gCAGX,sBAAW,sBAAO,C,IAAlB,WACI,MAAO,wF,gCAIX,sBAAW,yBAAU,C,IAArB,WACI,MAAO,CACH,OAAS,EAAA/C,WAAWH,EACpB,OAAS,EAAAG,WAAW4B,EACpB,OAAS,EAAA5B,WAAW6C,EACpB,OAAS,EAAA7C,WAAW8C,I,gCAIrB,YAAAhC,2BAAP,WACIrB,KAAKoC,SAASC,cAAc,EAAAC,WAAWC,GAAG,GAC1CvC,KAAKoC,SAASC,cAAc,EAAAC,WAAWE,GAAG,GAC1CxC,KAAKoC,SAASC,cAAc,EAAAC,WAAWG,GAAG,GAC1CzC,KAAKoC,SAASC,cAAc,EAAAC,WAAWI,GAAG,IAGpC,YAAA7C,eAAV,SAAyBF,GAAzB,WACUC,EAAO,IAAIP,aAAa,EAAIM,GAE5BS,EAAI,EAAAG,WAAWH,EACf+B,EAAI,EAAA5B,WAAW4B,EACfiB,EAAI,EAAA7C,WAAW6C,EACfC,EAAI,EAAA9C,WAAW8C,EAerB,OAbA7D,KAAKwC,EAAoB,EAAhBnB,KAAK8B,SAAe,EAC7BnD,KAAKyC,EAAoB,EAAhBpB,KAAK8B,SAAe,EAU7BnD,KAAKJ,SAASO,GARW,SAACmC,GACtBlC,EAAK,EAAIkC,EAAI,GAAKjB,KAAK+B,IAAIxC,EAAI,EAAK6B,GAAKpB,KAAKgC,IAAIV,EAAI,EAAKH,GAC3DpC,EAAK,EAAIkC,EAAI,GAAKjB,KAAK+B,IAAIQ,EAAI,EAAKpB,GAAKnB,KAAKgC,IAAIQ,EAAI,EAAKpB,GAE3D,EAAKD,EAAIpC,EAAK,EAAIkC,EAAI,GACtB,EAAKG,EAAIrC,EAAK,EAAIkC,EAAI,MAKnBlC,GAEf,EArDA,CAA8B,WAuD9B,UAAe2D,G,mnBC5Df,YACA,YAEA,OAEA,kBACI,a,OACI,cAAO,KAmDf,OArDoC,OAKhC,sBAAW,mBAAI,C,IAAf,WACI,MAAO,iB,gCAGX,sBAAW,sBAAO,C,IAAlB,WACI,MAAO,4F,gCAIX,sBAAW,yBAAU,C,IAArB,WACI,MAAO,CACH,OAAS,EAAAhD,WAAWH,EACpB,OAAS,EAAAG,WAAW4B,EACpB,OAAS,EAAA5B,WAAW6C,EACpB,OAAS,EAAA7C,WAAW8C,I,gCAIrB,YAAAhC,2BAAP,WACIrB,KAAKoC,SAASC,cAAc,EAAAC,WAAWC,GAAG,GAC1CvC,KAAKoC,SAASC,cAAc,EAAAC,WAAWE,GAAG,GAC1CxC,KAAKoC,SAASC,cAAc,EAAAC,WAAWG,GAAG,GAC1CzC,KAAKoC,SAASC,cAAc,EAAAC,WAAWI,GAAG,IAGpC,YAAA7C,eAAV,SAAyBF,GAAzB,WACUC,EAAO,IAAIP,aAAa,EAAIM,GAE5BS,EAAI,EAAAG,WAAWH,EACf+B,EAAI,EAAA5B,WAAW4B,EACfiB,EAAI,EAAA7C,WAAW6C,EACfC,EAAI,EAAA9C,WAAW8C,EAerB,OAbA7D,KAAKwC,EAAoB,EAAhBnB,KAAK8B,SAAe,EAC7BnD,KAAKyC,EAAoB,EAAhBpB,KAAK8B,SAAe,EAU7BnD,KAAKJ,SAASO,GARW,SAACmC,GACtBlC,EAAK,EAAIkC,EAAI,GAAKjB,KAAK+B,IAAIT,EAAI,EAAKF,GAAKmB,EAAIvC,KAAK+B,IAAIT,EAAI,EAAKH,GAC/DpC,EAAK,EAAIkC,EAAI,GAAKjB,KAAK+B,IAAIxC,EAAI,EAAK4B,GAAKqB,EAAIxC,KAAK+B,IAAIxC,EAAI,EAAK6B,GAE/D,EAAKD,EAAIpC,EAAK,EAAIkC,EAAI,GACtB,EAAKG,EAAIrC,EAAK,EAAIkC,EAAI,MAKnBlC,GAEf,EArDA,CAAoC,WAuDpC,UAAe4D,G,4oCC5Df,eACA,YACA,SAEA,YACA,WACA,YAEA,QACA,YAEA,OAEA,kBAWI,mBACI,cAAO,K,OACP,EAAKC,gBAAkB,MACvB,EAAKC,gBAAkB,SAEvB5E,EAAcC,YACV,CACIC,iBAAkB,eAClBC,eAAgB,eAChBC,SAAU,KAEd,SAACC,GACqB,OAAdA,IACA,EAAKwE,mBAAqBxE,EAE1B,EAAKwE,mBAAmBvD,EAAW,QAAEC,IAAM,UAAIuD,WAAW,EAAAtE,IAAK,GAAI,EAAG,EAAG,OAQrF,EAAKuE,KAAO,IAAI,UAAI,EAAAvE,GAFP,SAGb,EAAKwE,oBAAsB,EAC3B,EAAKC,kBAJQ,K,EAmGrB,OAnI+B,OAuCpB,YAAAC,WAAP,WAKI,IAJyBhC,EAInBjC,EAAaC,KAAKC,OAAOC,UAEzB+D,GANmBjC,EAKTnB,KAAKE,IAAIhB,EAAW,GAAIA,EAAW,IAJxCc,KAAKqD,IAAI,EAAGrD,KAAKsD,KAAKtD,KAAKuD,IAAIpC,GAAKnB,KAAKwD,SAMhD7E,KAAKsE,sBAAwBG,IAC7BzE,KAAKuE,kBAAkBE,GACvBzE,KAAKqE,KAAKS,MAAQL,EAClBzE,KAAKqE,KAAKU,OAASN,GAGvB,EAAA3E,GAAGkF,WAAW,EAAG,EAAG,EAAG,GAEvB,EAAAlF,GAAGmF,OAAO,EAAAnF,GAAGoF,OACb,EAAApF,GAAGqF,UAAU,EAAArF,GAAGsF,IAAK,EAAAtF,GAAGsF,KACxB,EAAAtF,GAAGuF,cAAc,EAAAvF,GAAGwF,UAEpBC,EAASC,aAETxF,KAAKqE,KAAKoB,KAAK,CAACzF,KAAK0F,WACrB,EAAA5F,GAAG6F,MAAM,EAAA7F,GAAG8F,kBAEZ,UAAIC,YAAY,EAAA/F,IAChB,EAAAA,GAAG6F,MAAM,EAAA7F,GAAG8F,kBAEZ5F,KAAK8F,gBAGF,YAAAC,aAAP,WACI/F,KAAKqE,KAAKoB,KAAK,CAACzF,KAAK0F,YAGlB,YAAAM,QAAP,WACQhG,KAAKmE,qBACL,UAAI0B,YAAY,EAAA/F,IAChB,UAASmG,cAAc,EAAAnG,IACvB,EAAAA,GAAG6F,MAAM,EAAA7F,GAAG8F,kBAGZ5F,KAAKmE,mBAAmBlD,EAAY,SAAEC,MAAQlB,KAAK0F,SACnD1F,KAAKmE,mBAAmBlD,EAAoB,iBAAEC,MAAQlB,KAAKkG,eAC3DlG,KAAKmE,mBAAmBlD,EAAoB,iBAAEC,MAAQlB,KAAKmG,eAG3DnG,KAAKmE,mBAAmB3C,MACxBxB,KAAKmE,mBAAmB1C,4BACxB,EAAA3B,GAAG4B,WAAW,EAAA5B,GAAGsG,eAAgB,EAAG,KAIrC,YAAAN,aAAP,WACI,SAASO,EAAgB7D,GACrB,OAAOnB,KAAKiF,MAAM,IAAM9D,GAE5B,SAAS+D,EAAaC,GAClB,MAAO,OAASH,EAAgBG,EAAI,IAAM,IACtCH,EAAgBG,EAAI,IAAM,IAAMH,EAAgBG,EAAI,IAAO,IAGnExG,KAAKkG,eAAiB,EAAAnF,WAAWmD,gBACjClE,KAAKkE,gBAAkBqC,EAAavG,KAAKkG,gBAEzClG,KAAKmG,eAAiB,EAAApF,WAAWkD,gBACjCjE,KAAKiE,gBAAkBsC,EAAavG,KAAKmG,iBAIrC,YAAA5B,kBAAR,SAA0BkC,GAClBzG,KAAK0F,WACL,EAAA5F,GAAG4G,cAAc1G,KAAK0F,UACtB1F,KAAK0F,SAAW,MAIpB,IADA,IAAMiB,EAAuB,IAAIC,MAAM,EAAIH,EAAOA,GACzCnE,EAAI,EAAGA,EAAIqE,EAAWE,SAAWvE,EACtCqE,EAAWrE,GAAK,IAEpB,IAAMwE,EAAW,IAAIC,WAAWJ,GAChC3G,KAAK0F,SAAW,EAAA5F,GAAGkH,gBACnB,EAAAlH,GAAGmH,YAAY,EAAAnH,GAAGoH,WAAYlH,KAAK0F,UACnC,EAAA5F,GAAGqH,WAAW,EAAArH,GAAGoH,WAAY,EAAG,EAAApH,GAAGsH,KAAMX,EAAMA,EAAM,EAAG,EAAA3G,GAAGsH,KAAM,EAAAtH,GAAGuH,cAAeP,GACnF,EAAAhH,GAAGwH,cAAc,EAAAxH,GAAGoH,WAAY,EAAApH,GAAGyH,mBAAoB,EAAAzH,GAAG0H,QAC1D,EAAA1H,GAAGwH,cAAc,EAAAxH,GAAGoH,WAAY,EAAApH,GAAG2H,mBAAoB,EAAA3H,GAAG0H,QAC1D,EAAA1H,GAAGwH,cAAc,EAAAxH,GAAGoH,WAAY,EAAApH,GAAG4H,eAAgB,EAAA5H,GAAG6H,QACtD,EAAA7H,GAAGwH,cAAc,EAAAxH,GAAGoH,WAAY,EAAApH,GAAG8H,eAAgB,EAAA9H,GAAG6H,QACtD,EAAA7H,GAAGmH,YAAY,EAAAnH,GAAGoH,WAAY,MAE9BlH,KAAKsE,oBAAsBmC,GAEnC,EAnIA,CAA+B,WAqI/B,UAAeoB,G,4oCClJf,gBACA,SACA,YAIA,cACI,mBACI,cAAO,K,OACP,EAAK5D,gBAAkB,QACvB,EAAKC,gBAAkB,Q,EAoB/B,OAxB8B,OAOnB,YAAAM,WAAP,WACI,EAAA1E,GAAGkF,WAAW,EAAG,EAAG,EAAG,GAEvB,EAAAlF,GAAGmF,OAAO,EAAAnF,GAAGoF,OACb,EAAApF,GAAGqF,UAAU,EAAArF,GAAGsF,IAAK,EAAAtF,GAAGsF,KACxB,EAAAtF,GAAGuF,cAAc,EAAAvF,GAAGwF,UAEpBC,EAASC,aACT,UAASS,cAAc,EAAAnG,IACvB,EAAAA,GAAG6F,MAAM,EAAA7F,GAAG8F,mBAIT,YAAAG,aAAP,aACO,YAAAC,QAAP,aACO,YAAAF,aAAP,aAEJ,EAxBA,CAFA,UAE8B,SA0B9B,UAAegC,G,4oCChCf,gBACA,SACA,YAIA,cACI,mBACI,cAAO,K,OACP,EAAK7D,gBAAkB,QACvB,EAAKC,gBAAkB,Q,EAoB/B,OAxB+B,OAOpB,YAAAM,WAAP,WACI,EAAA1E,GAAGkF,WAAW,EAAG,EAAG,EAAG,GAEvB,EAAAlF,GAAGmF,OAAO,EAAAnF,GAAGoF,OACb,EAAApF,GAAGqF,UAAU,EAAArF,GAAGsF,IAAK,EAAAtF,GAAGsF,KACxB,EAAAtF,GAAGuF,cAAc,EAAAvF,GAAGiI,uBAEpBxC,EAASC,aACT,UAASS,cAAc,EAAAnG,IACvB,EAAAA,GAAG6F,MAAM,EAAA7F,GAAG8F,mBAIT,YAAAG,aAAP,aACO,YAAAC,QAAP,aACO,YAAAF,aAAP,aAEJ,EAxBA,CAFA,UAE+B,SA0B/B,UAAekC,G,mECtBf,UAVA,c,knBCAA,IAGA,cAgBI,WAAYlI,EAA2BgF,EAAeC,GAAtD,MACI,YAAMjF,IAAG,K,OAET,EAAKmI,GAAKnI,EAAGoI,oBACb,EAAKpD,MAAQA,EACb,EAAKC,OAASA,E,EAyBtB,OA9CkB,OACA,EAAAc,YAAd,SAA0B/F,EAA2BqI,QAAA,IAAAA,MAAA,MACjDrI,EAAGsI,gBAAgBtI,EAAGuI,YAAa,MAElB,OAAbF,EACArI,EAAGqI,SAAS,EAAG,EAAGrI,EAAGwI,mBAAoBxI,EAAGyI,qBAE5CzI,EAAGqI,SAASA,EAASK,KAAML,EAASM,MAAON,EAASrD,MAAOqD,EAASpD,SAiBrE,YAAAU,KAAP,SAAYiD,EAA8BC,QAAA,IAAAA,MAAA,MACtC,IAAM7I,EAAK,YAAMA,GAAE,WAEnBA,EAAGsI,gBAAgBtI,EAAGuI,YAAarI,KAAKiI,IACxCnI,EAAGqI,SAAS,EAAG,EAAGnI,KAAK8E,MAAO9E,KAAK+E,QAEnC,IAAK,IAAIzC,EAAI,EAAGA,EAAIoG,EAAa7B,SAAUvE,EACzCxC,EAAG8I,qBACD9I,EAAGuI,YAAavI,EAAG,mBAAqBwC,GAAIxC,EAAGoH,WAAYwB,EAAapG,GAAI,GAG5EqG,IACF7I,EAAG+I,iBAAiB/I,EAAGgJ,aAAcH,GACrC7I,EAAGiJ,wBACDjJ,EAAGuI,YAAavI,EAAGkJ,iBAAkBlJ,EAAGgJ,aAAcH,KAIvD,YAAAM,gBAAP,WACI,YAAMnJ,GAAE,WAAGoJ,kBAAkBlJ,KAAKiI,IAClCjI,KAAKiI,GAAK,MAElB,EA9CA,CAHA,UAGkB,SAgDlB,UAAekB,G,uGCnDf,OAEA,IAAIrJ,EAA4B,KA8C5B,EAAAA,KADA,EAAAsJ,OA1CJ,SAAgBC,GACZ,SAASC,EAASC,GACd/I,KAAKgJ,SAASC,gBAAgB,gBAAiBF,GAGnD,IAAMG,EAASlJ,KAAKC,OAAOkJ,YAG3B,GADA,EAAA7J,KAAK4J,EAAOE,WAAW,QAASP,GACtB,MAANvJ,EAAY,CAEZ,GADA,EAAAA,KAAK4J,EAAOE,WAAW,qBAAsBP,GACnC,MAANvJ,EAEA,OADAwJ,EAAS,2DACF,EAGXA,EAAS,qGASb,OALAxJ,EAAG+J,QAAQ/J,EAAGgK,WACdhK,EAAG+J,QAAQ/J,EAAGiK,YACdjK,EAAG+J,QAAQ/J,EAAGoF,OACdpF,EAAGkF,WAAW,EAAG,EAAG,EAAG,IAEhB,GAiBP,EAAAQ,WAbJ,SAAoBwE,QAAA,IAAAA,OAAA,GAChB,IAAMC,EAAmB,EAAUC,OAAOC,iBAAmB,EACvDT,EAAS5J,EAAG4J,OAEZ5E,EAAgBzD,KAAKiF,MAAMoD,EAAOU,YAAcH,GAChDlF,EAAiB1D,KAAKiF,MAAMoD,EAAOW,aAAeJ,GACpDP,EAAO5E,QAAUA,GAAS4E,EAAO3E,SAAWA,IAC5C2E,EAAO5E,MAAQA,EACf4E,EAAO3E,OAASA,K,mECzCxB,iBAGI,WAAYjF,GACRE,KAAKsK,IAAMxK,EAQnB,OALW,YAAAA,GAAP,WACI,OAAOE,KAAKsK,KAIpB,EAZA,GAcA,UAAeC,G,mvBCdf,aACA,YACA,WAkBMC,EAAgD,GAQtD,SAASjL,EAAYkL,EAAqBC,GACtC,IAAIC,EAAiB,EACjBC,EAAgB,EAEpB,SAASC,EAAaC,GAClB,SAASC,EAAcC,GACnB,OAAOA,EAAOC,QAAQ,qBAAqB,SAACC,EAAOlJ,GAC/C,OAAIyI,EAAM/K,SAASsC,GACRyI,EAAM/K,SAASsC,GAEnBkJ,KASf,GALAP,IACKG,GACDF,IAGmB,IAAnBD,EAAsB,CACtB,IAAIvL,EAAS,KAEb,GAAsB,IAAlBwL,EAAqB,CACrB,IAAMO,EAAOC,EAAcC,UAAUZ,EAAMhL,gBACrC6L,EAAOF,EAAcC,UAAUZ,EAAMjL,kBAErC+L,EAAgBR,EAAcI,GAC9BK,EAAgBT,EAAcO,GAEpClM,EAAS,IAAI,UAAO,EAAAU,GAAIyL,EAAeC,GAG3Cd,EAAStL,IAIjBgM,EAAcK,WAAWhB,EAAMhL,eAAgBoL,GAC/CO,EAAcK,WAAWhB,EAAMjL,iBAAkBqL,GAmDjD,EAAAa,UA9FJ,SAAmB1J,GACf,OAAOwI,EAAcxI,GAAM5C,QA4F3B,EAAAG,cAGA,EAAAoM,eAlDJ,SAAwB3J,EAAcyI,EAAqBC,GACvD,SAASkB,EAAsBC,GAC3B,IAA6B,UAAAA,EAAOC,UAAP,gBACzBC,EADqB,OACLF,EAAOG,OAAQH,EAAOzM,QAG1CyM,EAAOC,UAAY,GAGvB,QAAmC,IAAxBtB,EAAcxI,GAAuB,CAC5CwI,EAAcxI,GAAQ,CAClB8J,UAAW,CAACpB,GACZsB,QAAQ,EACRvB,MAAK,EACLwB,SAAS,EACT7M,OAAQ,MAEZ,IAAM,EAASoL,EAAcxI,GAE7BzC,EAAYkL,GAAO,SAACyB,GAChB,EAAOD,SAAU,EACjB,EAAOD,OAAyB,OAAhBE,EAChB,EAAO9M,OAAS8M,EAEhBN,EAAsB,UAEvB,CACH,IAAMC,EAASrB,EAAcxI,IAEN,IAAnB6J,EAAOI,QACPJ,EAAOC,UAAUK,KAAKzB,GAEtBkB,EAAsBC,KAmB9B,EAAAO,aAdJ,SAAsBpK,GACdwI,EAAcxI,KACVwI,EAAcxI,GAAM5C,QACpBoL,EAAcxI,GAAM5C,OAAO6J,yBAExBuB,EAAcxI,M,kGCrG7B,IAAMqK,EAAiD,GAgEnD,EAAAZ,WA7DJ,SAAoBa,EAAkB5B,GAClC,SAASkB,EAAsBC,GAC3B,IAA6B,UAAAA,EAAOC,UAAP,gBACzBC,EADqB,OACLF,EAAOG,QAG3BH,EAAOC,UAAY,GAGvB,QAAuC,IAA5BO,EAAcC,GAA2B,CAChDD,EAAcC,GAAY,CACtBR,UAAW,CAACpB,GACZsB,QAAQ,EACRC,SAAS,EACTM,KAAM,MAEV,IAAM,EAASF,EAAcC,GAEvB,EAAM,IAAIE,eAChB,EAAIC,KAAK,MAAO,aAAeH,GAAU,GACzC,EAAII,OAAS,WACc,IAAnB,EAAIC,aACJ,EAAOV,SAAU,EAEE,MAAf,EAAIW,QACJ,EAAOL,KAAO,EAAIM,aAClB,EAAOb,QAAS,IAEhBc,QAAQC,MAAM,gBAAkBT,EAAW,oBAAsB,EAAIU,YACrE,EAAOhB,QAAS,GAGpBJ,EAAsB,KAG9B,EAAIqB,QAAU,WACVH,QAAQC,MAAM,gBAAkBT,EAAW,oBAAsB,EAAIU,YACrE,EAAOf,SAAU,EACjB,EAAOD,QAAS,EAChBJ,EAAsB,IAG1B,EAAIsB,KAAK,UACN,CACH,IAAMrB,EAASQ,EAAcC,IAEN,IAAnBT,EAAOI,QACPJ,EAAOC,UAAUK,KAAKzB,IAEtBmB,EAAOC,UAAY,CAACpB,GACpBkB,EAAsBC,MAU9B,EAAAR,UALJ,SAAmBiB,GACf,OAAOD,EAAcC,GAAUC,O,mnBCpEnC,gBAGA,SAASY,EAAerN,EAA2BsN,EAAgClM,GAC/EmM,MAAM,uBAyFV,IAAMC,EAAQ,CACV,MAAQ,CAAEC,IAAK,aAAcC,OA9EjC,SAA4B1N,EAA2BsN,EAAgClM,GACnFpB,EAAG2N,WAAWL,EAAUlM,KA8ExB,MAAQ,CAAEqM,IAAK,aAAcC,OA3EjC,SAA4B1N,EAA2BsN,EAAgClM,GACnFpB,EAAG4N,WAAWN,EAAUlM,KA2ExB,MAAQ,CAAEqM,IAAK,aAAcC,OAxEjC,SAA4B1N,EAA2BsN,EAAgClM,GACnFpB,EAAG6N,WAAWP,EAAUlM,KAwExB,MAAQ,CAAEqM,IAAK,WAAYC,OA5D/B,SAA0B1N,EAA2BsN,EAAgClM,GACjFpB,EAAG8N,WAAWR,EAAUlM,KA4DxB,MAAQ,CAAEqM,IAAK,WAAYC,OAzD/B,SAA0B1N,EAA2BsN,EAAgClM,GACjFpB,EAAG+N,WAAWT,EAAUlM,KAyDxB,MAAQ,CAAEqM,IAAK,WAAYC,OAtD/B,SAA0B1N,EAA2BsN,EAAgClM,GACjFpB,EAAGgO,WAAWV,EAAUlM,KAsDxB,MAAQ,CAAEqM,IAAK,OAAQC,OAnD3B,SAAyB1N,EAA2BsN,EAAgClM,GAChFpB,EAAGiO,UAAUX,GAAWlM,KAmDxB,MAAQ,CAAEqM,IAAK,YAAaC,OAhDhC,SAA2B1N,EAA2BsN,EAAgClM,GAClFpB,EAAG8N,WAAWR,EAAUlM,KAgDxB,MAAQ,CAAEqM,IAAK,YAAaC,OA7ChC,SAA2B1N,EAA2BsN,EAAgClM,GAClFpB,EAAG+N,WAAWT,EAAUlM,KA6CxB,MAAQ,CAAEqM,IAAK,YAAaC,OA1ChC,SAA2B1N,EAA2BsN,EAAgClM,GAClFpB,EAAGgO,WAAWV,EAAUlM,KA0CxB,MAAQ,CAAEqM,IAAK,aAAcC,OAvCjC,SAA8B1N,EAA2BsN,EAAgClM,GACrFpB,EAAGkO,iBAAiBZ,GAAU,EAAOlM,KAuCrC,MAAQ,CAAEqM,IAAK,aAAcC,OApCjC,SAA8B1N,EAA2BsN,EAAgClM,GACrFpB,EAAGmO,iBAAiBb,GAAU,EAAOlM,KAoCrC,MAAQ,CAAEqM,IAAK,aAAcC,OAjCjC,SAA8B1N,EAA2BsN,EAAgClM,GACrFpB,EAAGoO,iBAAiBd,GAAU,EAAOlM,KAiCrC,MAAQ,CAAEqM,IAAK,aAAcC,OA9BjC,SAAuB1N,EAA2BsN,EAAgCe,EAC3DjN,GACnBpB,EAAGiO,UAAUX,EAAUe,GACvBrO,EAAGsO,cAActO,EAAG,UAAYqO,IAChCrO,EAAGmH,YAAYnH,EAAGoH,WAAYhG,KA2B9B,MAAQ,CAAEqM,IAAK,eAAgBC,OAxBnC,SAAyB1N,EAA2BsN,EAAgCe,EAC3DjN,GACrBpB,EAAGiO,UAAUX,EAAUe,GACvBrO,EAAGsO,cAActO,EAAG,UAAYqO,IAChCrO,EAAGmH,YAAYnH,EAAGuO,iBAAkBnN,KAqBpC,KAAQ,CAAEqM,IAAK,OAAQC,OAAQL,GAC/B,KAAQ,CAAEI,IAAK,gBAAiBC,OAAQL,GACxC,KAAQ,CAAEI,IAAK,QAASC,OAAQL,GAChC,KAAQ,CAAEI,IAAK,iBAAkBC,OAAQL,GACzC,KAAQ,CAAEI,IAAK,MAAOC,OApF1B,SAAwB1N,EAA2BsN,EAAgClM,GAC3E0F,MAAM0H,QAAQpN,GACdpB,EAAGyO,WAAWnB,EAAUlM,KAmF5B,KAAQ,CAAEqM,IAAK,eAAgBC,OAAQL,GACvC,KAAQ,CAAEI,IAAK,QAASC,OA3G5B,SAA0B1N,EAA2BsN,EAAgClM,GAC7E0F,MAAM0H,QAAQpN,GACdpB,EAAG0O,WAAWpB,EAAUlM,GAExBpB,EAAG2O,UAAUrB,EAAUlM,MAwH/B,cAQI,WAAYpB,EAA2B4O,EAAsBC,GAA7D,WACI,SAASC,EAAaC,EAAc7D,GAChC,IAAM5L,EAASU,EAAG8O,aAAaC,GAK/B,OAJA/O,EAAGgP,aAAa1P,EAAQ4L,GACxBlL,EAAGiP,cAAc3P,GAEMU,EAAGkP,mBAAmB5P,EAAQU,EAAGmP,gBAOjD7P,GALH0N,QAAQC,MAAMjN,EAAGoP,iBAAiB9P,IAClCU,EAAGsM,aAAahN,GACT,OAMf,cAAMU,IAAG,MAEJmI,GAAK,KACV,EAAKkH,OAAS,EACd,EAAKC,OAAS,EAEd,IAAMC,EAAeT,EAAa9O,EAAGwP,cAAeZ,GAC9Ca,EAAiBX,EAAa9O,EAAG0P,gBAAiBb,GAElD1G,EAAKnI,EAAG2P,gB,OACd3P,EAAG4P,aAAazH,EAAIoH,GACpBvP,EAAG4P,aAAazH,EAAIsH,GACpBzP,EAAG6P,YAAY1H,GAEKnI,EAAG8P,oBAAoB3H,EAAInI,EAAG+P,cAK9C,EAAK5H,GAAKA,EAEV,EAAK6H,kBALLhD,QAAQC,MAAMjN,EAAGiQ,kBAAkB9H,IACnCnI,EAAGkQ,cAAc/H,I,EAgF7B,OAzH4B,OAiDjB,YAAAgB,gBAAP,WACI,YAAMnJ,GAAE,WAAGkQ,cAAchQ,KAAKiI,IAC9BjI,KAAKiI,GAAK,MAGP,YAAAzG,IAAP,WACI,YAAM1B,GAAE,WAAGmQ,WAAWjQ,KAAKiI,KAGxB,YAAAiI,aAAP,sBACUpQ,EAA4B,YAAMA,GAAE,WACtCqQ,EAA4B,EAEhCC,OAAOC,KAAKrQ,KAAKiB,GAAGqP,SAAQ,SAACC,GACzB,IAAMC,EAAU,EAAKvP,EAAEsP,GACvB,GAAsB,OAAlBC,EAAQtP,MACR,GAAqB,QAAjBsP,EAAQ3B,MAAoC,QAAjB2B,EAAQ3B,KAAiB,CACpD,IAAMV,EAAiBgC,EACvB7C,EAAMkD,EAAQ3B,MAAMrB,OAAO1N,EAAI0Q,EAAQC,IAAKtC,EAAQqC,EAAQtP,OAC5DiP,SAEA7C,EAAMkD,EAAQ3B,MAAMrB,OAAO1N,EAAI0Q,EAAQC,IAAKD,EAAQtP,WAM7D,YAAAwP,eAAP,sBACIN,OAAOC,KAAKrQ,KAAKY,GAAG0P,SAAQ,SAACK,GACzB,IAAMC,EAAY,EAAKhQ,EAAE+P,GACH,OAAlBC,EAAU/P,KACV+P,EAAU/P,IAAI4E,KAAKmL,EAAUH,SAKlC,YAAAhP,0BAAP,WACIzB,KAAKkQ,eACLlQ,KAAK0Q,kBAGD,YAAAZ,cAAR,WACI,IAAMhQ,EAAK,YAAMA,GAAE,WAEnBE,KAAKmP,OAASrP,EAAG8P,oBAAoB5P,KAAKiI,GAAInI,EAAG+Q,iBACjD7Q,KAAKiB,EAAI,GACT,IAAK,IAAIqB,EAAI,EAAGA,EAAItC,KAAKmP,SAAU7M,EAAG,CAClC,IAAMkO,EAAU1Q,EAAGgR,iBAAiB9Q,KAAKiI,GAAI3F,GACvC,EAAOkO,EAAQxO,KAErBhC,KAAKiB,EAAE,GAAQ,CACXwP,IAAK3Q,EAAGiR,mBAAmB/Q,KAAKiI,GAAI,GACpCxB,KAAM+J,EAAQ/J,KACdoI,KAAM2B,EAAQ3B,KACd3N,MAAO,MAMf,IAFAlB,KAAKoP,OAAStP,EAAG8P,oBAAoB5P,KAAKiI,GAAInI,EAAGkR,mBACjDhR,KAAKY,EAAI,GACA0B,EAAI,EAAGA,EAAItC,KAAKoP,SAAU9M,EAAG,CAClC,IAAMsO,EAAY9Q,EAAGmR,gBAAgBjR,KAAKiI,GAAI3F,GACxC,EAAOsO,EAAU5O,KAEvBhC,KAAKY,EAAE,GAAQ,CACXC,IAAK,KACL4P,IAAK3Q,EAAGoR,kBAAkBlR,KAAKiI,GAAI,GACnCxB,KAAMmK,EAAUnK,KAChBoI,KAAM+B,EAAU/B,QAIhC,EAzHA,CAA4B,WA2H5B,UAAesC,G,knBC/Pf,IAEKC,EAFL,aAEA,SAAKA,GACD,yBACA,uBAFJ,CAAKA,MAAK,KAKV,kBAoBI,WAAYtR,EAA2BuR,EAAY5K,EAAcoI,EAAcyC,QAAA,IAAAA,OAAA,GAA/E,MACI,YAAMxR,IAAG,K,OAET,EAAKmI,GAAKnI,EAAGyR,eACbzR,EAAG0R,WAAW1R,EAAG2R,aAAc,EAAKxJ,IAChCqJ,EACAxR,EAAG4R,WAAW5R,EAAG2R,aAAcJ,EAAOvR,EAAG6R,aAEzC7R,EAAG4R,WAAW5R,EAAG2R,aAAcJ,EAAOvR,EAAG8R,cAE7C9R,EAAG0R,WAAW1R,EAAG2R,aAAc,MAE/B,EAAKhL,KAAOA,EACZ,EAAKoI,KAAOA,EACZ,EAAKgD,WAAY,EACjB,EAAKC,OAAS,EACd,EAAKC,OAAS,EACd,EAAKC,MAAQ,EAAgBZ,EAAMa,OAASb,EAAMc,Q,EA0B1D,OA/DkB,OACA,EAAA9N,WAAd,SAAyBtE,EAA2ByD,EAAcE,EAAcD,EAAcE,GAQ1F,OAAO,IAAI7C,EAAIf,EAAI,IAAID,aAPV,CACT0D,EAAME,EACND,EAAMC,EACNF,EAAMG,EACNF,EAAME,IAGiC,EAAG5D,EAAGC,OAAO,IA+BrD,YAAAkJ,gBAAP,WACIjJ,KAAKF,KAAKqS,aAAanS,KAAKiI,IAC5BjI,KAAKiI,GAAK,MAGP,YAAAxC,KAAP,SAAY2H,GACR,IAAMtN,EAAK,YAAMA,GAAE,WACnBA,EAAGsS,wBAAwBhF,GAC3BtN,EAAG0R,WAAW1R,EAAG2R,aAAczR,KAAKiI,IACpCnI,EAAGuS,oBAAoBjF,EAAUpN,KAAKyG,KAAMzG,KAAK6O,KAAM7O,KAAK6R,UAAW7R,KAAK8R,OAAQ9R,KAAK+R,SAGtF,YAAAzR,QAAP,SAAe+Q,GACX,IAAMvR,EAAK,YAAMA,GAAE,WAEnBA,EAAG0R,WAAW1R,EAAG2R,aAAczR,KAAKiI,IAChCjI,KAAKgS,QAAUZ,EAAMa,OACrBnS,EAAG4R,WAAW5R,EAAG2R,aAAcJ,EAAOvR,EAAG6R,aAEzC7R,EAAG4R,WAAW5R,EAAG2R,aAAcJ,EAAOvR,EAAG8R,cAE7C9R,EAAG0R,WAAW1R,EAAG2R,aAAc,OAEvC,EA/DA,CAAkB,WAiElB,UAAe5Q,G,mECxEf,iBAUI,WAAY2H,EAAcC,EAAe3D,EAAeC,GACpD/E,KAAKwI,KAAOA,EACZxI,KAAKyI,MAAQA,EACbzI,KAAK8E,MAAQA,EACb9E,KAAK+E,OAASA,EAMtB,OAnBkB,EAAAkB,cAAd,SAA4BnG,GACxBA,EAAGqI,SAAS,EAAG,EAAGrI,EAAGwI,mBAAoBxI,EAAGyI,sBAezC,YAAA+J,IAAP,SAAWxS,GACPA,EAAGqI,SAASnI,KAAKyI,MAAOzI,KAAKwI,KAAMxI,KAAK8E,MAAO9E,KAAK+E,SAE5D,EApBA,GAsBA,UAAewN,G,+JCtBf,OAEA,IAWUC,EAMNC,EAjBEC,EAAY,uBAOdC,EAAoB,OACpB1O,EAA0B,OAGpBuO,EAAWI,SAASC,cAAc,SAC/BC,KAAO,2CAA6CJ,EAAUzH,QAAQ,IAAK,KACpFuH,EAASO,IAAM,aACfH,SAASI,KAAKC,YAAYT,GAI9B,WACI,IAAMU,EACN,kLAOsBR,EAPtB,4TAwBMS,EAAaP,SAASC,cAAc,SAC1CM,EAAWC,aAAa,OAAQ,YAC3BD,EAAmBE,WACnBF,EAAmBE,WAAWC,QAAUJ,EAEzCC,EAAWF,YAAYL,SAASW,eAAeL,IAEnDN,SAASI,KAAKC,YAAYE,GAE1B,IAAMK,EAAmBZ,SAASC,cAAc,SAChDD,SAASI,KAAKC,YAAYO,GAC1Bf,EAAmBe,EAAiBC,MArCxC,GAwCAC,EAAU,QAAS,SAEnB,IAAMC,EAAWf,SAASC,cAAc,OACxCc,EAASC,UAAY,iBACrB,IAAMC,EAAajB,SAASC,cAAc,OACpCiB,EAAgBlB,SAASC,cAAc,OAC7CiB,EAAcF,UAAY,uBAE1B,IAAMG,EAAgBnB,SAASC,cAAc,OAU7C,SAASa,EAAUM,EAAsBC,GAIrC,IAHAtB,EAAYqB,EACZ/P,EAAkBgQ,EAEXxB,EAAiByB,SAASrN,OAAS,GACtC4L,EAAiB0B,WAAW,GAEhC1B,EAAiB2B,WAAW,mBAAqBzB,EAAY,MAAO,GACpEF,EAAiB2B,WAAW,4BAA8BnQ,EAAkB,MAAO,GAGvF,SAASpB,EAAcwR,GACnBN,EAAcO,MAAMC,QAAUF,EAAU,IAAM,IArBlDN,EAAcH,UAAY,QAC1BG,EAAcd,YAAYU,GAC1BI,EAAcd,YAAYY,GAC1BE,EAAcd,YAAYa,GAC1BjR,GAAc,GAEWrC,KAAKC,OAAOkJ,YAA4B6K,cACjDvB,YAAYc,GA4HxB,EAAAL,YAIA,EAAA7Q,gBADA,EAAAd,SA9GJ,SAAkB0S,GACdd,EAASe,YAAcD,GA2GvB,EAAAxS,WAxGJ,SAAoBC,GAChB,SAASyS,EAAMC,EAAYC,GACvB,OAAOA,EAAID,EAAKC,EAEpB,SAASC,EAAUF,EAAYG,GAC3B,MAAO,IAAMA,EAAO,IAAMH,EAAK,KAAOG,EAAO,IAGjD,IACMC,EAAa,UAEfC,EAAO/S,EAAQ+I,QAAQ,YAAa0J,EAAM,SAAUK,IAQxDC,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,EAAOA,EAAKhK,QAAQ,YAAa0J,EAAM,UAAWK,KACtC/J,QAAQ,YAAa0J,EAAM,IALzB,OAMF1J,QAAQ,WAAY0J,EAAM,IANxB,OAOF1J,QAAQ,WAAY0J,EAAM,IAPxB,OAQF1J,QAAQ,oBAAqB,IAAM0J,EAAM,IAAKK,GAAc,MAC5D/J,QAAQ,MAAO,UACfA,QAAQ,eAAe,SAACsC,EAAK2H,GAAO,OAAAJ,EAAUI,EAAI,WAClDjK,QAAQ,gBAAgB,SAACsC,EAAK2H,GAAO,OAAAJ,EAAUI,EAAI,UAE/DrB,EAAWsB,UAAYF,GAoFvB,EAAA9S,cAjFJ,SAAuBC,GACnB0R,EAAcqB,UAAY/S,EAAWgT,KAAK,UA6E1C,EAAAC,aA1EJ,SAAsBC,GAClB,SAASC,EAAYC,GACjBF,EAAIG,KAAOD,EAAW,MAAQ9C,EAGlC,SAASgD,EAAelT,EAAWC,EAAWqC,EAAeC,GACzD,IAAM4Q,EAAoBL,EAAIM,UAC9BN,EAAIM,UAAY3R,EAChBqR,EAAIO,SAASrT,EAAGC,EAAGqC,EAAOC,GAC1BuQ,EAAIM,UAAYD,EAGpBD,EAtIiB,IAsI0B/B,EAASvJ,YAAauJ,EAAStJ,cAC1EiL,EAAIM,UAAYjD,EAChB2C,EAAIQ,UAAY,OAChBR,EAAIS,aAAe,MAEnB,IACIC,EAAMC,GAENC,EA5IgB,GA6IpBX,EAAYW,GACZZ,EAAIa,SAASxC,EAASe,YALJuB,GAK4BD,GAC9CA,GAAO,GAGPT,EADAW,EAhJc,IAmJdR,EAtJiB,EAsJYM,EArJX,EAqJgCnC,EAAWzJ,YAAayJ,EAAWxJ,cAIrFwJ,EAAWsB,UAAUiB,MAAM,kBAAkB9F,SAAQ,SAAC/C,GAClD,IAAI8I,EAAQ,EACRC,EAAY,EAEhB,SAASC,EAAUhK,GACf+I,EAAIa,SAAS5J,EApBH0J,GAoBqBI,EAAOL,GACtCK,GAASf,EAAIkB,YAAYjK,GAAMzH,MAGnC,SAAS2R,EAASC,GACd,IAAMpU,EAAIiL,EAAIoJ,QAAQD,EAAUJ,GAChC,OAAQhU,EAAI,EAAKiL,EAAI1G,OAASvE,EAGlC,KAAOgU,EAAY/I,EAAI1G,QAAQ,CAC3B,IAAI+P,EAAQH,EAAS,SACrBF,EAAUhJ,EAAIsJ,UAAUP,EAAWM,IACnCN,EAAYM,EAAQ,EAEpBA,EAAQH,EAAS,UACjBT,GAAO,GAAKE,EACZX,EA3KU,IA4KVgB,EAAUhJ,EAAIsJ,UAAUP,EAAWM,IACnCZ,GAAO,GAAKE,EACZI,EAAYM,EAAQ,EAEpBrB,EAAYW,GAEhBF,GAAO,KAAOE,KAKlBR,EA3LiB,GAyLjBM,GAAO,IAxLW,EA0LgClC,EAAc1J,YAAa0J,EAAczJ,cAE3FyJ,EAAcqB,UAAUiB,MAAM,kBAAkB9F,SAAQ,SAACwG,GACrDxB,EAAIa,SAASW,EAnDCb,GAmDgBD,GAC9BA,GAAO,EAAIE,O,krBClMnB,gBACA,SAGA,YACA,YACA,YACA,YACA,YACA,QAGA,YACA,YACA,YAEA,OAEA,WAwEa3Q,EAAS6D,OALG,CACb2N,OAAO,EACPC,OAAO,EACPC,uBAAuB,IAnE/B,IAAIC,GAAyB,EAC7B1W,KAAKC,OAAO0W,UAAUC,aAAajL,MAAK,WAAM,OAAA+K,GAAyB,KACvE,EAAAnW,WAAWsW,eAAelL,MAAK,WAAM,OAAA+K,GAAyB,KAE9D,EAAAnW,WAAWuW,UAAY,EAAAC,eAAeC,OAEtC,IAAMC,EAAa,GACnBA,EAAW,EAAAF,eAAeG,SAAW,IAAI,UACzCD,EAAW,EAAAF,eAAeI,UAAY,IAAI,UAC1CF,EAAW,EAAAF,eAAeC,QAAU,IAAI,UACxCC,EAAW,EAAAF,eAAeK,cAAgB,IAAI,UAE9C,IAKIC,EAOAC,EAZEC,EAAe,GAMrB,SAASC,EAAeC,GACpBJ,EAAcI,EACdzX,KAAKC,OAAOyX,iBAAiB,eAAgBL,EAAYM,kBAP7DJ,EAAa,EAAAK,iBAAiBC,OAAS,IAAI,UAC3CN,EAAa,EAAAK,iBAAiBE,MAAQ,IAAI,UAC1CP,EAAa,EAAAK,iBAAiBG,OAAS,IAAI,UAO3CP,EAAe,GAGf,EAAAjX,WAAWyX,4BAA4BrM,MAAK,WAAM,OAAA2L,GAAqB,KAEvE,IACIR,EACAmB,EAFEC,EAAgBrX,KAAKqD,IAAI,EAAG,IA+ClClE,KAAKmY,YAAYC,oBAAoB,EAAA9V,WAAW+V,UAAU,WACtD,IAAMC,GAActY,KAAKuY,KAAKC,UAAU,EAAAlW,WAAWmW,eAAe,GAE5DC,EAAiB,EAAAnY,WAAWoY,sBAAsB,CAACL,EAAYA,IACrE,GAAII,EAAiB,KAAU,CAC3B,IAAM3P,EAAU,uEACqB2P,EAAef,iBADpC,mCAGhB,IAAKiB,QAAQ7P,GACT,OAIR,IAAM8P,EAAWzG,SAASC,cAAc,UAClCyG,EAAQD,EAASzP,WAAW,MAElCyP,EAASvU,MAAQgU,EAAa,IAC9BO,EAAStU,OAAS+T,EAElB,IAAMS,EAAW/Y,KAAKC,OAAOkJ,YAEzBnJ,KAAKC,OAAO+Y,YAAW,GAEvBD,EAASjF,MAAMmF,SAAW,WAC1BF,EAASjF,MAAMxP,MAAQgU,EAAa,KACpCS,EAASjF,MAAMvP,OAAS+T,EAAa,KACrCS,EAASzU,MAAQgU,EACjBS,EAASxU,OAAS+T,EAElBL,EAAYjU,aAchB,IAAIrE,EAAW,EACTuZ,EAAcrY,KAAKqD,IAAI,EAAG,IAEhC,IADA+T,EAAY1S,eACL5F,EAAW+Y,GAAgB,CAC9B,IAAMS,EAAWtY,KAAKsD,KAAKtD,KAAKE,IAAImY,EAAaR,EAAiB/Y,IAClEA,GAAYwZ,EACZrC,EAAUpX,YAAYyZ,GAU1B,GARAlB,EAAYzS,UAEZsT,EAAM1D,UAAY6C,EAAYxU,gBAC9BqV,EAAMzD,SAAS,EAAG,EAAGwD,EAASvU,MAAOuU,EAAStU,QAC9CuU,EAAMM,UAAU,EAAA9Z,GAAG4J,OAAQ,IAAO2P,EAASvU,MAAQgU,GAAa,EAAGA,EAAYA,GAtB3ES,EAASjF,MAAMmF,SAAW,GAC1BF,EAASjF,MAAMxP,MAAQ,GACvByU,EAASjF,MAAMvP,OAAS,GACxBvE,KAAKC,OAAO+Y,YAAW,GACvBhZ,KAAKC,OAAOoZ,cAAc,IAC1B3C,GAAyB,EAmB7BpV,EAAMuT,aAAaiE,GAEdD,EAAiBS,SAAU,CAC5B,IAAMC,EAAQV,EAAiBS,WAC/B5P,OAAO8P,UAAUC,WAAWF,EAAM,kBAElCV,EAASa,QAAO,SAACH,GACb,IAAMI,EAAOvH,SAASC,cAAc,KACpCsH,EAAKC,SAAW,YAChBD,EAAKrH,KAAOuH,IAAIC,gBAAgBP,GAChCI,EAAKI,cAKjBC,uBApHA,SAASC,IAcL,GAbIvD,IACAA,GAAyB,EACzBc,EAAe,IAEfV,EAAYG,EAAW,EAAA1W,WAAWuW,YACxB1V,SAEV6W,EAAcV,EAAa,EAAAhX,WAAW0X,cAC1BjU,aAEZ1C,EAAM4R,UAAU+E,EAAYvU,gBAAiBuU,EAAYxU,kBAGzD4T,EAAc,EAAA9W,WAAWmY,eAAgB,CACzCT,EAAY1S,eACZ,IAAM4T,EAAWtY,KAAKsD,KAAKtD,KAAKE,IAAImX,EAAe,EAAA3X,WAAWmY,eAAiBrB,IAC3EP,EAAUpX,YAAYyZ,KACtB3B,EAAeH,EAAc8B,GAC7BlB,EAAYzS,WAIhB8R,IACAA,GAAqB,EACrBW,EAAY3S,eACZ2S,EAAYzS,UACZlE,EAAM4R,UAAU+E,EAAYvU,gBAAiBuU,EAAYxU,kBAG7DuW,sBAAsBC,MAyF9BC,I,urBC1KA,gBAEA,OAmOI,EAAAnD,eAjOmB,CACnBC,OAAQ,UACRE,QAAS,UACTC,SAAU,WACVC,aAAc,iBAGlB,IAAMQ,EAAmB,CACrBE,KAAM,OACNC,MAAO,QACPF,MAAO,SAwNP,EAAAD,mBApNJ,IAAMuC,EAAY,CACdC,UAAW,sBACX7X,EAAG,aACHC,EAAG,aACHC,EAAG,aACHC,EAAG,aACH2X,QAAS,sBACTC,WAAY,yBACZC,UAAW,qBACXC,QAAS,mBACTC,YAAa,cACbC,WAAY,sBACZC,WAAY,sBACZlC,cAAe,gBACfJ,SAAU,oBAMd,SAASuC,EAAcC,GACnB,IAAuB,UAAAA,EAAA,gBACnBC,EADe,QAgMN,EAAAxY,WAAA,EA3LjB,IAQIwU,EACA1W,EACA+B,EACAiB,EACAC,EAEA0X,EACAva,EACAyX,EACAvU,EACAD,EACAiV,EAnBEsC,EAIK,GAJLA,EAKkB,GAgBxB,SAASC,IACLvC,EAAiBnY,EAAWoY,sBAAsB3Y,KAAKC,OAAOC,WAGlE,SAASgb,EAAe1Z,GACpB,IAAM2Z,EAAW3Z,IAASoW,EAAiBC,MAC3C7X,KAAKoC,SAASC,cAAc8X,EAAUO,WAAYS,GAClDnb,KAAKoC,SAASC,cAAc8X,EAAUQ,WAAYQ,GAElDlD,EAAczW,EACdoZ,EAAcI,GAIlB,iBA0DI,cACJ,OA1DI,sBAAkB,cAAS,C,IAA3B,WACI,OAAOlE,G,IAEX,SAA4BsE,GACxBpb,KAAKqb,OAAOC,SAASnB,EAAUC,UAAWgB,GAC1CtE,EAAYsE,G,gCAGhB,sBAAkB,MAAC,C,IAAnB,WACI,OAAOhb,G,gCAGX,sBAAkB,MAAC,C,IAAnB,WACI,OAAO+B,G,gCAGX,sBAAkB,MAAC,C,IAAnB,WACI,OAAOiB,G,gCAGX,sBAAkB,MAAC,C,IAAnB,WACI,OAAOC,G,gCAGX,sBAAkB,mBAAc,C,IAAhC,WACI,OAAOqV,G,gCAGX,sBAAkB,YAAO,C,IAAzB,WACI,OAAOlY,G,gCAGX,sBAAkB,gBAAW,C,IAA7B,WACI,OAAOyX,G,gCAGX,sBAAkB,oBAAe,C,IAAjC,WACI,OAAOvU,G,gCAGX,sBAAkB,oBAAe,C,IAAjC,WACI,OAAOD,G,gCAGX,sBAAkB,mBAAc,C,IAAhC,WACI,OAAOuX,G,gCAGX,sBAAkB,gCAA2B,C,IAA7C,WACI,OAAOA,G,gCAGG,EAAArC,sBAAd,SAAoC5Y,GAChC,IAAMwb,EAAe1a,KAAKE,IAAIhB,EAAW,GAAIA,EAAW,IACxD,OAAOgb,GAAa,IAAMva,GAAW+a,EAAeA,GAI5D,EA3DA,GA8HA,SAASC,EAAW3D,GAChB,MAAO,CAACA,EAAM4D,EAAI,IAAK5D,EAAM6D,EAAI,IAAK7D,EAAM1V,EAAI,IAAK,GA0BrD,EAAA5B,aA1FJP,KAAKqb,OAAOM,YAAYxB,EAAUC,WAAW,SAAC1Z,GAC1CoW,EAAYpW,EACZka,EAAcI,MAGlBhb,KAAK4b,MAAMD,YAAYxB,EAAU5X,GAAG,SAACsZ,GACjCzb,EAAIyb,EACJjB,EAAcI,MAElB5a,EAAIJ,KAAK4b,MAAME,SAAS3B,EAAU5X,GAElCvC,KAAK4b,MAAMD,YAAYxB,EAAU3X,GAAG,SAACqZ,GACjC1Z,EAAI0Z,EACJjB,EAAcI,MAElB7Y,EAAInC,KAAK4b,MAAME,SAAS3B,EAAU3X,GAElCxC,KAAK4b,MAAMD,YAAYxB,EAAU1X,GAAG,SAACoZ,GACjCzY,EAAIyY,EACJjB,EAAcI,MAElB5X,EAAIpD,KAAK4b,MAAME,SAAS3B,EAAU1X,GAElCzC,KAAK4b,MAAMD,YAAYxB,EAAUzX,GAAG,SAACmZ,GACjCxY,EAAIwY,EACJjB,EAAcI,MAElB3X,EAAIrD,KAAK4b,MAAME,SAAS3B,EAAUzX,GAElC1C,KAAK+b,SAASJ,YAAYxB,EAAUE,SAAS,SAAC2B,GAC1C1a,EAAMe,cAAc2Z,MAExB1a,EAAMe,cAAcrC,KAAK+b,SAASE,UAAU9B,EAAUE,UAEtDra,KAAK4b,MAAMD,YAAYxB,EAAUI,WAAW,SAACsB,GACzC,IAAMK,EAAeL,EAAWd,EAChCA,EAAYc,EACZZ,IAEIiB,GACAtB,EAAcI,MAGtBD,EAAY/a,KAAK4b,MAAME,SAAS3B,EAAUI,WAE1Cva,KAAK4b,MAAMD,YAAYxB,EAAUK,SAAS,SAACqB,GACvCrb,EAAU,EAAK,IAAM,IAAOqb,EAC5BZ,IACAL,EAAcI,MAElBxa,EAAU,EAAK,IAAM,IAAOR,KAAK4b,MAAME,SAAS3B,EAAUK,SAE1Dxa,KAAKuY,KAAKoD,YAAYxB,EAAUM,aAAa,SAAC0B,GAC1CjB,EAAe,GAAKiB,EAAS,OAEjCjB,EAAe,GAAKlb,KAAKuY,KAAKC,UAAU2B,EAAUM,cAWlDza,KAAKoc,YAAYT,YAAYxB,EAAUO,YAAY,SAAC2B,GAChD3Y,EAAkB8X,EAAWa,GAC7BzB,EAAcI,MAElBtX,EAAkB8X,EAAWxb,KAAKoc,YAAYN,SAAS3B,EAAUO,aAEjE1a,KAAKoc,YAAYT,YAAYxB,EAAUQ,YAAY,SAAC0B,GAChD5Y,EAAkB+X,EAAWa,GAC7BzB,EAAcI,MAElBvX,EAAkB+X,EAAWxb,KAAKoc,YAAYN,SAAS3B,EAAUQ,aAEjE3a,KAAK+b,SAASJ,YAAYxB,EAAUG,YAAY,SAAC0B,GAC7Chc,KAAKC,OAAOqc,wBAAwBN,MAExChc,KAAKC,OAAOqc,wBAAwBtc,KAAK+b,SAASE,UAAU9B,EAAUG,aAEtEta,KAAKC,OAAO0W,UAAUC,aAAajL,KAAKsP,GACxCA,MCjOIsB,EAA2B,IAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,IAOV,OAHAE,EAAoBL,GAAUM,KAAKF,EAAOD,QAASC,EAAQA,EAAOD,QAASJ,GAGpEK,EAAOD,QClBWJ,CAAoB,K","file":"main.min.js","sourcesContent":["import { gl } from \"../gl-utils/gl-canvas\";\r\nimport Shader from \"../gl-utils/shader\";\r\nimport * as ShaderManager from \"../gl-utils/shader-manager\";\r\nimport VBO from \"../gl-utils/vbo\";\r\n\r\nimport * as Infos from \"../infos\";\r\nimport { Parameters } from \"../parameters\";\r\nimport Boundaries from \"./boundaries\";\r\n\r\nlet shader: Shader = null;\r\nlet pointsVBO: VBO = null;\r\n\r\nimport \"../page-interface-generated\";\r\n\r\nabstract class Attractor {\r\n    protected boundaries: Boundaries;\r\n    protected x: number;\r\n    protected y: number;\r\n\r\n    constructor() {\r\n        if (shader === null) {\r\n            ShaderManager.buildShader(\r\n                {\r\n                    fragmentFilename: \"points.frag\",\r\n                    vertexFilename: \"points.vert\",\r\n                    injected: {},\r\n                },\r\n                (newShader) => {\r\n                    if (newShader !== null) {\r\n                        shader = newShader;\r\n                    }\r\n                },\r\n            );\r\n        }\r\n\r\n        if (pointsVBO === null) {\r\n            const fillData = new Float32Array(2);\r\n            pointsVBO = new VBO(gl, fillData, 2, gl.FLOAT, false);\r\n        }\r\n\r\n        this.boundaries = null;\r\n    }\r\n\r\n    public drawXPoints(nbPoints: number): boolean {\r\n        if (shader) {\r\n            const data = this.computeXPoints(nbPoints);\r\n            pointsVBO.setData(data);\r\n\r\n            const canvasSize = Page.Canvas.getSize();\r\n            const aspectRatio = canvasSize[0] / canvasSize[1];\r\n\r\n            /* tslint:disable:no-string-literal */\r\n            shader.a[\"aCoords\"].VBO = pointsVBO;\r\n            const q = Parameters.quality;\r\n            shader.u[\"uColor\"].value = [q, q, q, 1];\r\n            shader.u[\"uCenter\"].value = this.boundaries.center;\r\n            const maxDimension = 0.5 + this.boundaries.maxDimension;\r\n            shader.u[\"uScale\"].value = [\r\n                2 / maxDimension / Math.max(aspectRatio, 1),\r\n                2 / maxDimension * Math.min(aspectRatio, 1),\r\n            ];\r\n            /* tslint:enable:no-string-literal */\r\n\r\n            shader.use();\r\n            shader.bindUniformsAndAttributes();\r\n\r\n            gl.drawArrays(gl.POINTS, 0, nbPoints);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public reset(): void {\r\n        this.toggleParametersVisibility();\r\n        Infos.setTitle(this.name);\r\n        Infos.setFormula(this.formula);\r\n        Infos.setParameters(this.parameters);\r\n        this.boundaries = null;\r\n    }\r\n\r\n    /* For infos block display */\r\n    public abstract get name(): string;\r\n    public abstract get formula(): string;\r\n    public abstract get parameters(): string[];\r\n\r\n    public abstract toggleParametersVisibility(): void;\r\n\r\n    /* Should update minX, maxX, minY and maxY */\r\n    protected abstract computeXPoints(nbPoints: number): Float32Array;\r\n\r\n    protected fillData(nbPoints: number, computeNextPoint: (pointIndex: number) => void) {\r\n        /* ignore the first few ones */\r\n        for (let i = 0; i < 10; ++i) {\r\n            computeNextPoint(0);\r\n        }\r\n\r\n        if (this.boundaries === null) {\r\n            this.boundaries = new Boundaries();\r\n\r\n            for (let i = 0; i < nbPoints; ++i) {\r\n                computeNextPoint(i);\r\n                this.boundaries.includePoint(this.x, this.y);\r\n            }\r\n        } else {\r\n            for (let i = 0; i < nbPoints; ++i) {\r\n                computeNextPoint(i);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Attractor;\r\n","import { ControlsID, Parameters } from \"../parameters\";\r\nimport Attractor from \"./attractor\";\r\n\r\nimport \"../page-interface-generated\";\r\n\r\nclass BeadheadAttractor extends Attractor {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    public get name(): string {\r\n        return \"Bedhead\";\r\n    }\r\n\r\n    public get formula(): string {\r\n        return `x_{n+1} = sin(x_{n}*y_{n}/b) + cos(a*x_{n} - y_{n})\r\n        y_{n+1} = x_{n} + sin(y_{n})/b`;\r\n    }\r\n\r\n    public get parameters(): string[] {\r\n        return [\r\n            \"a = \" + Parameters.a,\r\n            \"b = \" + Parameters.b,\r\n        ];\r\n    }\r\n\r\n    public toggleParametersVisibility(): void {\r\n        Page.Controls.setVisibility(ControlsID.A, true);\r\n        Page.Controls.setVisibility(ControlsID.B, true);\r\n        Page.Controls.setVisibility(ControlsID.C, false);\r\n        Page.Controls.setVisibility(ControlsID.D, false);\r\n    }\r\n\r\n    protected computeXPoints(nbPoints: number): Float32Array {\r\n        const data = new Float32Array(2 * nbPoints);\r\n\r\n        const a = Parameters.a;\r\n        const b = Parameters.b;\r\n\r\n        this.x = Math.random() * 2 - 1;\r\n        this.y = Math.random() * 2 - 1;\r\n\r\n        const computeNextPoint = (i: number) => {\r\n            data[2 * i + 0] = Math.sin(this.x * this.y / b) + Math.cos(a * this.x - this.y);\r\n            data[2 * i + 1] = this.x + Math.sin(this.y) / b;\r\n\r\n            this.x = data[2 * i + 0];\r\n            this.y = data[2 * i + 1];\r\n        };\r\n\r\n        this.fillData(nbPoints, computeNextPoint);\r\n\r\n        return data;\r\n    }\r\n}\r\n\r\nexport default BeadheadAttractor;\r\n","class Boundaries {\r\n    public minX: number;\r\n    public maxX: number;\r\n    public minY: number;\r\n    public maxY: number;\r\n\r\n    public constructor() {\r\n        this.minX = 0;\r\n        this.maxX = 0;\r\n        this.minY = 0;\r\n        this.maxY = 0;\r\n    }\r\n\r\n    public get center(): number[] {\r\n        return [\r\n            0.5 * (this.maxX + this.minX),\r\n            0.5 * (this.maxY + this.minY),\r\n        ];\r\n    }\r\n\r\n    public get maxDimension(): number {\r\n        return Math.max(this.maxX - this.minX, this.maxY - this.minY);\r\n    }\r\n\r\n    public includePoint(x: number, y: number) {\r\n        this.minX = Math.min(this.minX, x);\r\n        this.minY = Math.min(this.minY, y);\r\n\r\n        this.maxX = Math.max(this.maxX, x);\r\n        this.maxY = Math.max(this.maxY, y);\r\n    }\r\n}\r\n\r\nexport default Boundaries;\r\n","import { ControlsID, Parameters } from \"../parameters\";\r\nimport Attractor from \"./attractor\";\r\n\r\nimport \"../page-interface-generated\";\r\n\r\nclass CliffordAttractor extends Attractor {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    public get name(): string {\r\n        return \"Clifford\";\r\n    }\r\n\r\n    public get formula(): string {\r\n        return `x_{n+1} = sin(a*y_{n}) + c*cos(a*x_{n})\r\n        y_{n+1} = sin(c*x_{n}) + d*cos(b*y_{n})`;\r\n    }\r\n\r\n    public get parameters(): string[] {\r\n        return [\r\n            \"a = \" + Parameters.a,\r\n            \"b = \" + Parameters.b,\r\n            \"c = \" + Parameters.c,\r\n            \"d = \" + Parameters.d,\r\n        ];\r\n    }\r\n\r\n    public toggleParametersVisibility(): void {\r\n        Page.Controls.setVisibility(ControlsID.A, true);\r\n        Page.Controls.setVisibility(ControlsID.B, true);\r\n        Page.Controls.setVisibility(ControlsID.C, true);\r\n        Page.Controls.setVisibility(ControlsID.D, true);\r\n    }\r\n\r\n    protected computeXPoints(nbPoints: number): Float32Array {\r\n        const data = new Float32Array(2 * nbPoints);\r\n\r\n        const a = Parameters.a;\r\n        const b = Parameters.b;\r\n        const c = Parameters.c;\r\n        const d = Parameters.d;\r\n\r\n        this.x = Math.random() * 2 - 1;\r\n        this.y = Math.random() * 2 - 1;\r\n\r\n        const computeNextPoint = (i: number) => {\r\n            data[2 * i + 0] = Math.sin(a * this.y) + c * Math.cos(a * this.x);\r\n            data[2 * i + 1] = Math.sin(c * this.x) + d * Math.cos(b * this.y);\r\n\r\n            this.x = data[2 * i + 0];\r\n            this.y = data[2 * i + 1];\r\n        };\r\n\r\n        this.fillData(nbPoints, computeNextPoint);\r\n\r\n        return data;\r\n    }\r\n}\r\n\r\nexport default CliffordAttractor;\r\n","import { ControlsID, Parameters } from \"../parameters\";\r\nimport Attractor from \"./attractor\";\r\n\r\nimport \"../page-interface-generated\";\r\n\r\nclass DeJongAttractor extends Attractor {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    public get name(): string {\r\n        return \"De Jong\";\r\n    }\r\n\r\n    public get formula(): string {\r\n        return `x_{n+1} = sin(a*y_{n}) - cos(b*x_{n})\r\n        y_{n+1} = sin(c*x_{n}) - cos(d*y_{n})`;\r\n    }\r\n\r\n    public get parameters(): string[] {\r\n        return [\r\n            \"a = \" + Parameters.a,\r\n            \"b = \" + Parameters.b,\r\n            \"c = \" + Parameters.c,\r\n            \"d = \" + Parameters.d,\r\n        ];\r\n    }\r\n\r\n    public toggleParametersVisibility(): void {\r\n        Page.Controls.setVisibility(ControlsID.A, true);\r\n        Page.Controls.setVisibility(ControlsID.B, true);\r\n        Page.Controls.setVisibility(ControlsID.C, true);\r\n        Page.Controls.setVisibility(ControlsID.D, true);\r\n    }\r\n\r\n    protected computeXPoints(nbPoints: number): Float32Array {\r\n        const data = new Float32Array(2 * nbPoints);\r\n\r\n        const a = Parameters.a;\r\n        const b = Parameters.b;\r\n        const c = Parameters.c;\r\n        const d = Parameters.d;\r\n\r\n        this.x = Math.random() * 2 - 1;\r\n        this.y = Math.random() * 2 - 1;\r\n\r\n        const computeNextPoint = (i: number) => {\r\n            data[2 * i + 0] = Math.sin(a * this.y) - Math.cos(b * this.x);\r\n            data[2 * i + 1] = Math.sin(c * this.x) - Math.cos(d * this.y);\r\n\r\n            this.x = data[2 * i + 0];\r\n            this.y = data[2 * i + 1];\r\n        };\r\n\r\n        this.fillData(nbPoints, computeNextPoint);\r\n\r\n        return data;\r\n    }\r\n}\r\n\r\nexport default DeJongAttractor;\r\n","import { ControlsID, Parameters } from \"../parameters\";\r\nimport Attractor from \"./attractor\";\r\n\r\nimport \"../page-interface-generated\";\r\n\r\nclass FractalDreamAttractor extends Attractor {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    public get name(): string {\r\n        return \"Fractal Dream\";\r\n    }\r\n\r\n    public get formula(): string {\r\n        return `x_{n+1} = sin(b*y_{n}) + c*sin(b*x_{n})\r\n        y_{n+1} = sin(a*x_{n}) + d*sin(a*y_{n})`;\r\n    }\r\n\r\n    public get parameters(): string[] {\r\n        return [\r\n            \"a = \" + Parameters.a,\r\n            \"b = \" + Parameters.b,\r\n            \"c = \" + Parameters.c,\r\n            \"d = \" + Parameters.d,\r\n        ];\r\n    }\r\n\r\n    public toggleParametersVisibility(): void {\r\n        Page.Controls.setVisibility(ControlsID.A, true);\r\n        Page.Controls.setVisibility(ControlsID.B, true);\r\n        Page.Controls.setVisibility(ControlsID.C, true);\r\n        Page.Controls.setVisibility(ControlsID.D, true);\r\n    }\r\n\r\n    protected computeXPoints(nbPoints: number): Float32Array {\r\n        const data = new Float32Array(2 * nbPoints);\r\n\r\n        const a = Parameters.a;\r\n        const b = Parameters.b;\r\n        const c = Parameters.c;\r\n        const d = Parameters.d;\r\n\r\n        this.x = Math.random() * 2 - 1;\r\n        this.y = Math.random() * 2 - 1;\r\n\r\n        const computeNextPoint = (i: number) => {\r\n            data[2 * i + 0] = Math.sin(b * this.y) + c * Math.sin(b * this.x);\r\n            data[2 * i + 1] = Math.sin(a * this.x) + d * Math.sin(a * this.y);\r\n\r\n            this.x = data[2 * i + 0];\r\n            this.y = data[2 * i + 1];\r\n        };\r\n\r\n        this.fillData(nbPoints, computeNextPoint);\r\n\r\n        return data;\r\n    }\r\n}\r\n\r\nexport default FractalDreamAttractor;\r\n","import FBO from \"../gl-utils/fbo\";\r\nimport * as GLCanvas from \"../gl-utils/gl-canvas\";\r\nimport { gl } from \"../gl-utils/gl-canvas\";\r\nimport Shader from \"../gl-utils/shader\";\r\nimport * as ShaderManager from \"../gl-utils/shader-manager\";\r\nimport VBO from \"../gl-utils/vbo\";\r\nimport Viewport from \"../gl-utils/viewport\";\r\n\r\nimport { Parameters } from \"../parameters\";\r\nimport CompositingBase from \"./compositing\";\r\n\r\nimport \"../page-interface-generated\";\r\n\r\nclass CompositingColor extends CompositingBase {\r\n    private _FBO: FBO;\r\n\r\n    private _compositionShader: Shader;\r\n\r\n    private _texture: WebGLTexture;\r\n    private _currentTextureSize: number;\r\n\r\n    private _foregroundRgb: number[]; // in [0, 1]^3\r\n    private _backgroundRgb: number[]; // in [0, 1]^3\r\n\r\n    public constructor() {\r\n        super();\r\n        this.backgroundColor = \"red\";\r\n        this.foregroundColor = \"yellow\";\r\n\r\n        ShaderManager.buildShader(\r\n            {\r\n                fragmentFilename: \"compose.frag\",\r\n                vertexFilename: \"compose.vert\",\r\n                injected: {},\r\n            },\r\n            (newShader) => {\r\n                if (newShader !== null) {\r\n                    this._compositionShader = newShader;\r\n                    /* tslint:disable:no-string-literal */\r\n                    this._compositionShader.a[\"aCorner\"].VBO = VBO.createQuad(gl, -1, -1, 1, 1);\r\n                    /* tslint:enable:no-string-literal */\r\n                }\r\n            },\r\n        );\r\n\r\n        const size = 512;\r\n\r\n        this._FBO = new FBO(gl, size, size);\r\n        this._currentTextureSize = 0;\r\n        this.initializeTexture(size);\r\n    }\r\n\r\n    public initialize(): void {\r\n        function upperPowerOfTwo(x: number): number {\r\n            return Math.pow(2, Math.ceil(Math.log(x) * Math.LOG2E));\r\n        }\r\n\r\n        const canvasSize = Page.Canvas.getSize();\r\n        const minSize = Math.min(canvasSize[0], canvasSize[1]);\r\n        const neededSize = upperPowerOfTwo(minSize);\r\n        if (this._currentTextureSize !== neededSize) {\r\n            this.initializeTexture(neededSize);\r\n            this._FBO.width = neededSize;\r\n            this._FBO.height = neededSize;\r\n        }\r\n\r\n        gl.clearColor(0, 0, 0, 1);\r\n\r\n        gl.enable(gl.BLEND);\r\n        gl.blendFunc(gl.ONE, gl.ONE);\r\n        gl.blendEquation(gl.FUNC_ADD);\r\n\r\n        GLCanvas.adjustSize();\r\n\r\n        this._FBO.bind([this._texture]);\r\n        gl.clear(gl.COLOR_BUFFER_BIT);\r\n\r\n        FBO.bindDefault(gl);\r\n        gl.clear(gl.COLOR_BUFFER_BIT);\r\n\r\n        this.updateColors();\r\n    }\r\n\r\n    public bindTopLayer(): void {\r\n        this._FBO.bind([this._texture]);\r\n    }\r\n\r\n    public compose(): void {\r\n        if (this._compositionShader) {\r\n            FBO.bindDefault(gl);\r\n            Viewport.setFullCanvas(gl);\r\n            gl.clear(gl.COLOR_BUFFER_BIT);\r\n\r\n            /* tslint:disable:no-string-literal */\r\n            this._compositionShader.u[\"uTexture\"].value = this._texture;\r\n            this._compositionShader.u[\"uForegroundColor\"].value = this._foregroundRgb;\r\n            this._compositionShader.u[\"uBackgroundColor\"].value = this._backgroundRgb;\r\n            /* tslint:enable:no-string-literal */\r\n\r\n            this._compositionShader.use();\r\n            this._compositionShader.bindUniformsAndAttributes();\r\n            gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\r\n        }\r\n    }\r\n\r\n    public updateColors(): void {\r\n        function normalizedTo255(x: number): number {\r\n            return Math.floor(255 * x);\r\n        }\r\n        function rgbaToString(rgb: number[]): string {\r\n            return \"rgb(\" + normalizedTo255(rgb[0]) + \",\" +\r\n                normalizedTo255(rgb[1]) + \",\" + normalizedTo255(rgb[2])  + \")\";\r\n        }\r\n\r\n        this._foregroundRgb = Parameters.foregroundColor;\r\n        this.foregroundColor = rgbaToString(this._foregroundRgb);\r\n\r\n        this._backgroundRgb = Parameters.backgroundColor;\r\n        this.backgroundColor = rgbaToString(this._backgroundRgb);\r\n    }\r\n\r\n    /* size parameter should be a power of two */\r\n    private initializeTexture(size: number): void {\r\n        if (this._texture) {\r\n            gl.deleteTexture(this._texture);\r\n            this._texture = null;\r\n        }\r\n\r\n        const uintTexels: number[] = new Array(4 * size * size);\r\n        for (let i = 0; i < uintTexels.length;  ++i) {\r\n            uintTexels[i] = 127;\r\n        }\r\n        const uintData = new Uint8Array(uintTexels);\r\n        this._texture = gl.createTexture();\r\n        gl.bindTexture(gl.TEXTURE_2D, this._texture);\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, size, size, 0, gl.RGBA, gl.UNSIGNED_BYTE, uintData);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\r\n        gl.bindTexture(gl.TEXTURE_2D, null);\r\n\r\n        this._currentTextureSize = size;\r\n    }\r\n}\r\n\r\nexport default CompositingColor;\r\n","import * as GLCanvas from \"../gl-utils/gl-canvas\";\r\nimport { gl } from \"../gl-utils/gl-canvas\";\r\nimport Viewport from \"../gl-utils/viewport\";\r\n\r\nimport CompositingBase from \"./compositing\";\r\n\r\nclass CompositingDark extends CompositingBase {\r\n    public constructor() {\r\n        super();\r\n        this.backgroundColor = \"black\";\r\n        this.foregroundColor = \"white\";\r\n    }\r\n\r\n    public initialize(): void {\r\n        gl.clearColor(0, 0, 0, 1);\r\n\r\n        gl.enable(gl.BLEND);\r\n        gl.blendFunc(gl.ONE, gl.ONE);\r\n        gl.blendEquation(gl.FUNC_ADD);\r\n\r\n        GLCanvas.adjustSize();\r\n        Viewport.setFullCanvas(gl);\r\n        gl.clear(gl.COLOR_BUFFER_BIT);\r\n    }\r\n\r\n    /* tslint:disable:no-empty */\r\n    public bindTopLayer(): void {}\r\n    public compose(): void {}\r\n    public updateColors(): void {}\r\n    /* tslint:enable:no-empty */\r\n}\r\n\r\nexport default CompositingDark;\r\n","import * as GLCanvas from \"../gl-utils/gl-canvas\";\r\nimport { gl } from \"../gl-utils/gl-canvas\";\r\nimport Viewport from \"../gl-utils/viewport\";\r\n\r\nimport CompositingBase from \"./compositing\";\r\n\r\nclass CompositingLight extends CompositingBase {\r\n    public constructor() {\r\n        super();\r\n        this.backgroundColor = \"white\";\r\n        this.foregroundColor = \"black\";\r\n    }\r\n\r\n    public initialize(): void {\r\n        gl.clearColor(1, 1, 1, 1);\r\n\r\n        gl.enable(gl.BLEND);\r\n        gl.blendFunc(gl.ONE, gl.ONE);\r\n        gl.blendEquation(gl.FUNC_REVERSE_SUBTRACT);\r\n\r\n        GLCanvas.adjustSize();\r\n        Viewport.setFullCanvas(gl);\r\n        gl.clear(gl.COLOR_BUFFER_BIT);\r\n    }\r\n\r\n    /* tslint:disable:no-empty */\r\n    public bindTopLayer(): void {}\r\n    public compose(): void {}\r\n    public updateColors(): void {}\r\n    /* tslint:enable:no-empty */\r\n}\r\n\r\nexport default CompositingLight;\r\n","abstract class CompositingBase {\r\n    public backgroundColor: string;\r\n    public foregroundColor: string;\r\n\r\n    public abstract initialize(): void;\r\n    public abstract bindTopLayer(): void;\r\n    public abstract compose(): void;\r\n    public abstract updateColors(): void;\r\n}\r\n\r\nexport default CompositingBase;\r\n","import GLResource from \"./gl-resource\";\r\nimport Viewport from \"./viewport\";\r\n\r\nclass FBO extends GLResource {\r\n    public static bindDefault(gl: WebGLRenderingContext, viewport: Viewport = null): void {\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\r\n        if (viewport === null) {\r\n            gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\r\n        } else {\r\n            gl.viewport(viewport.left, viewport.lower, viewport.width, viewport.height);\r\n        }\r\n\r\n    }\r\n\r\n    public width: number;\r\n    public height: number;\r\n    private id: WebGLFramebuffer;\r\n\r\n    constructor(gl: WebGLRenderingContext, width: number, height: number) {\r\n        super(gl);\r\n\r\n        this.id = gl.createFramebuffer();\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n\r\n    public bind(colorBuffers: WebGLTexture[], depthBuffer: WebGLRenderbuffer = null): void {\r\n        const gl = super.gl();\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.id);\r\n        gl.viewport(0, 0, this.width, this.height);\r\n\r\n        for (let i = 0; i < colorBuffers.length; ++i) {\r\n          gl.framebufferTexture2D(\r\n            gl.FRAMEBUFFER, gl[\"COLOR_ATTACHMENT\" + i], gl.TEXTURE_2D, colorBuffers[i], 0);\r\n        }\r\n\r\n        if (depthBuffer) {\r\n          gl.bindRenderbuffer(gl.RENDERBUFFER, depthBuffer);\r\n          gl.framebufferRenderbuffer(\r\n            gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, depthBuffer);\r\n        }\r\n    }\r\n\r\n    public freeGLResources(): void {\r\n        super.gl().deleteFramebuffer(this.id);\r\n        this.id = null;\r\n    }\r\n}\r\n\r\nexport default FBO;\r\n","import \"../page-interface-generated\";\r\n\r\nlet gl: WebGLRenderingContext = null;\r\n\r\n/** Initializes a WebGL context */\r\nfunction initGL(flags: any): boolean {\r\n    function setError(message: string) {\r\n        Page.Demopage.setErrorMessage(\"webgl-support\", message);\r\n    }\r\n\r\n    const canvas = Page.Canvas.getCanvas();\r\n\r\n    gl = canvas.getContext(\"webgl\", flags) as WebGLRenderingContext;\r\n    if (gl == null) {\r\n        gl = canvas.getContext(\"experimental-webgl\", flags) as WebGLRenderingContext;\r\n        if (gl == null) {\r\n            setError(\"Your browser or device does not seem to support WebGL.\");\r\n            return false;\r\n        }\r\n\r\n        setError(\"Your browser or device only supports experimental WebGL.\\n\" +\r\n            \"The simulation may not run as expected.\");\r\n    }\r\n\r\n    gl.disable(gl.CULL_FACE);\r\n    gl.disable(gl.DEPTH_TEST);\r\n    gl.disable(gl.BLEND);\r\n    gl.clearColor(0, 0, 0, 1);\r\n\r\n    return true;\r\n}\r\n\r\n/* Adjusts the GL canvas size to the actual canvas element size on the page */\r\nfunction adjustSize(hidpi: boolean = false): void {\r\n    const cssPixel: number = (hidpi) ? window.devicePixelRatio : 1;\r\n    const canvas = gl.canvas as HTMLCanvasElement;\r\n\r\n    const width: number = Math.floor(canvas.clientWidth * cssPixel);\r\n    const height: number = Math.floor(canvas.clientHeight * cssPixel);\r\n    if (canvas.width !== width || canvas.height !== height) {\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n    }\r\n}\r\n\r\nexport {\r\n    adjustSize,\r\n    initGL,\r\n    gl,\r\n};\r\n","abstract class GLResource {\r\n    private _gl: WebGLRenderingContext;\r\n\r\n    constructor(gl: WebGLRenderingContext) {\r\n        this._gl = gl;\r\n    }\r\n\r\n    public gl(): WebGLRenderingContext {\r\n        return this._gl;\r\n    }\r\n\r\n    public abstract freeGLResources(): void;\r\n}\r\n\r\nexport default GLResource;\r\n","import { gl } from \"./gl-canvas\";\r\nimport Shader from \"./shader\";\r\nimport * as ShaderSources from \"./shader-sources\";\r\n\r\ntype RegisterCallback = (success: boolean, shader: Shader | null) => void;\r\n\r\ninterface IShaderInfos {\r\n    fragmentFilename: string;\r\n    vertexFilename: string;\r\n    injected: { [id: string]: string };\r\n}\r\n\r\ninterface ICachedShader {\r\n    shader: Shader;\r\n    infos: IShaderInfos;\r\n    pending: boolean;\r\n    failed: boolean;\r\n    callbacks: RegisterCallback[];\r\n}\r\n\r\nconst cachedShaders: { [id: string]: ICachedShader} = {};\r\n\r\nfunction getShader(name: string): Shader | null {\r\n    return cachedShaders[name].shader;\r\n}\r\n\r\ntype BuildCallback = (builtShader: Shader | null) => void;\r\n\r\nfunction buildShader(infos: IShaderInfos, callback: BuildCallback) {\r\n    let sourcesPending = 2;\r\n    let sourcesFailed = 0;\r\n\r\n    function loadedSource(success: boolean) {\r\n        function processSource(source: string): string {\r\n            return source.replace(/#INJECT\\((.*)\\)/mg, (match, name) => {\r\n                if (infos.injected[name]) {\r\n                    return infos.injected[name];\r\n                }\r\n                return match;\r\n            });\r\n        }\r\n\r\n        sourcesPending--;\r\n        if (!success) {\r\n            sourcesFailed++;\r\n        }\r\n\r\n        if (sourcesPending === 0) {\r\n            let shader = null;\r\n\r\n            if (sourcesFailed === 0) {\r\n                const vert = ShaderSources.getSource(infos.vertexFilename);\r\n                const frag = ShaderSources.getSource(infos.fragmentFilename);\r\n\r\n                const processedVert = processSource(vert);\r\n                const processedFrag = processSource(frag);\r\n\r\n                shader = new Shader(gl, processedVert, processedFrag);\r\n            }\r\n\r\n            callback(shader);\r\n        }\r\n    }\r\n\r\n    ShaderSources.loadSource(infos.vertexFilename, loadedSource);\r\n    ShaderSources.loadSource(infos.fragmentFilename, loadedSource);\r\n}\r\n\r\nfunction registerShader(name: string, infos: IShaderInfos, callback: RegisterCallback): void {\r\n    function callAndClearCallbacks(cached: ICachedShader) {\r\n        for (const cachedCallback of cached.callbacks) {\r\n            cachedCallback(!cached.failed, cached.shader);\r\n        }\r\n\r\n        cached.callbacks = [];\r\n    }\r\n\r\n    if (typeof cachedShaders[name] === \"undefined\") {\r\n        cachedShaders[name] = {\r\n            callbacks: [callback],\r\n            failed: false,\r\n            infos,\r\n            pending: true,\r\n            shader: null,\r\n        };\r\n        const cached = cachedShaders[name];\r\n\r\n        buildShader(infos, (builtShader) => {\r\n            cached.pending = false;\r\n            cached.failed = builtShader === null;\r\n            cached.shader = builtShader;\r\n\r\n            callAndClearCallbacks(cached);\r\n        });\r\n    } else {\r\n        const cached = cachedShaders[name];\r\n\r\n        if (cached.pending === true) {\r\n            cached.callbacks.push(callback);\r\n        } else {\r\n            callAndClearCallbacks(cached);\r\n        }\r\n    }\r\n}\r\n\r\nfunction deleteShader(name: string) {\r\n    if (cachedShaders[name]) {\r\n        if (cachedShaders[name].shader) {\r\n            cachedShaders[name].shader.freeGLResources();\r\n        }\r\n        delete cachedShaders[name];\r\n    }\r\n}\r\n\r\nexport {\r\n    buildShader,\r\n    getShader,\r\n    IShaderInfos,\r\n    registerShader,\r\n    deleteShader,\r\n};\r\n","type LoadCallback = (success: boolean)  => void;\r\n\r\ninterface ICachedSource {\r\n    text: string;\r\n    pending: boolean;\r\n    failed: boolean;\r\n    callbacks: LoadCallback[];\r\n}\r\n\r\nconst cachedSources: { [id: string]: ICachedSource } = {};\r\n\r\n/* Fetches asynchronously the shader source from server and stores it in cache. */\r\nfunction loadSource(filename: string, callback: LoadCallback) {\r\n    function callAndClearCallbacks(cached: ICachedSource) {\r\n        for (const cachedCallback of cached.callbacks) {\r\n            cachedCallback(!cached.failed);\r\n        }\r\n\r\n        cached.callbacks = [];\r\n    }\r\n\r\n    if (typeof cachedSources[filename] === \"undefined\") {\r\n        cachedSources[filename] = {\r\n            callbacks: [callback],\r\n            failed: false,\r\n            pending: true,\r\n            text: null,\r\n        };\r\n        const cached = cachedSources[filename];\r\n\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open(\"GET\", \"./shaders/\" + filename, true);\r\n        xhr.onload = () => {\r\n            if (xhr.readyState === 4) {\r\n                cached.pending = false;\r\n\r\n                if (xhr.status === 200) {\r\n                    cached.text = xhr.responseText;\r\n                    cached.failed = false;\r\n                } else {\r\n                    console.error(\"Cannot load '\" + filename + \"' shader source: \" + xhr.statusText);\r\n                    cached.failed = true;\r\n                }\r\n\r\n                callAndClearCallbacks(cached);\r\n            }\r\n        };\r\n        xhr.onerror = () => {\r\n            console.error(\"Cannot load '\" + filename + \"' shader source: \" + xhr.statusText);\r\n            cached.pending = false;\r\n            cached.failed = true;\r\n            callAndClearCallbacks(cached);\r\n        };\r\n\r\n        xhr.send(null);\r\n    } else {\r\n        const cached = cachedSources[filename];\r\n\r\n        if (cached.pending === true) {\r\n            cached.callbacks.push(callback);\r\n        } else {\r\n            cached.callbacks = [callback];\r\n            callAndClearCallbacks(cached);\r\n        }\r\n    }\r\n}\r\n\r\nfunction getSource(filename: string): string {\r\n    return cachedSources[filename].text;\r\n}\r\n\r\nexport {\r\n    getSource,\r\n    loadSource,\r\n};\r\n","import GLResource from \"./gl-resource\";\r\nimport VBO from \"./vbo\";\r\n\r\nfunction notImplemented(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    alert(\"NOT IMPLEMENTED YET\");\r\n}\r\n\r\nfunction bindUniformFloat(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number | number[]): void;\r\nfunction bindUniformFloat(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    if (Array.isArray(value)) {\r\n        gl.uniform1fv(location, value);\r\n    } else {\r\n        gl.uniform1f(location, value);\r\n    }\r\n}\r\n\r\nfunction bindUniformFloat2v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform2fv(location, value);\r\n}\r\n\r\nfunction bindUniformFloat3v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform3fv(location, value);\r\n}\r\n\r\nfunction bindUniformFloat4v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform4fv(location, value);\r\n}\r\n\r\nfunction bindUniformInt(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number | number[]): void;\r\nfunction bindUniformInt(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    if (Array.isArray(value)) {\r\n        gl.uniform1iv(location, value);\r\n    } else {\r\n        gl.uniform1iv(location, value);\r\n    }\r\n}\r\n\r\nfunction bindUniformInt2v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform2iv(location, value);\r\n}\r\n\r\nfunction bindUniformInt3v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform3iv(location, value);\r\n}\r\n\r\nfunction bindUniformInt4v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform4iv(location, value);\r\n}\r\n\r\nfunction bindUniformBool(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: boolean | number): void {\r\n    gl.uniform1i(location, +value);\r\n}\r\n\r\nfunction bindUniformBool2v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value): void {\r\n    gl.uniform2iv(location, value);\r\n}\r\n\r\nfunction bindUniformBool3v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value): void {\r\n    gl.uniform3iv(location, value);\r\n}\r\n\r\nfunction bindUniformBool4v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value): void {\r\n    gl.uniform4iv(location, value);\r\n}\r\n\r\nfunction bindUniformFloatMat2(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniformMatrix2fv(location, false, value);\r\n}\r\n\r\nfunction bindUniformFloatMat3(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniformMatrix3fv(location, false, value);\r\n}\r\n\r\nfunction bindUniformFloatMat4(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniformMatrix4fv(location, false, value);\r\n}\r\n\r\nfunction bindSampler2D(gl: WebGLRenderingContext, location: WebGLUniformLocation, unitNb: number,\r\n                       value: WebGLTexture): void {\r\n    gl.uniform1i(location, unitNb);\r\n    gl.activeTexture(gl[\"TEXTURE\" + unitNb]);\r\n    gl.bindTexture(gl.TEXTURE_2D, value);\r\n}\r\n\r\nfunction bindSamplerCube(gl: WebGLRenderingContext, location: WebGLUniformLocation, unitNb: number,\r\n                         value: WebGLTexture): void {\r\n    gl.uniform1i(location, unitNb);\r\n    gl.activeTexture(gl[\"TEXTURE\" + unitNb]);\r\n    gl.bindTexture(gl.TEXTURE_CUBE_MAP, value);\r\n}\r\n\r\n/* From WebGL spec:\r\n* http://www.khronos.org/registry/webgl/specs/latest/1.0/#5.14 */\r\nconst types = {\r\n    0x8B50: { str: \"FLOAT_VEC2\", binder: bindUniformFloat2v },\r\n    0x8B51: { str: \"FLOAT_VEC3\", binder: bindUniformFloat3v },\r\n    0x8B52: { str: \"FLOAT_VEC4\", binder: bindUniformFloat4v },\r\n    0x8B53: { str: \"INT_VEC2\", binder: bindUniformInt2v },\r\n    0x8B54: { str: \"INT_VEC3\", binder: bindUniformInt3v },\r\n    0x8B55: { str: \"INT_VEC4\", binder: bindUniformInt4v },\r\n    0x8B56: { str: \"BOOL\", binder: bindUniformBool },\r\n    0x8B57: { str: \"BOOL_VEC2\", binder: bindUniformBool2v },\r\n    0x8B58: { str: \"BOOL_VEC3\", binder: bindUniformBool3v },\r\n    0x8B59: { str: \"BOOL_VEC4\", binder: bindUniformBool4v },\r\n    0x8B5A: { str: \"FLOAT_MAT2\", binder: bindUniformFloatMat2 },\r\n    0x8B5B: { str: \"FLOAT_MAT3\", binder: bindUniformFloatMat3 },\r\n    0x8B5C: { str: \"FLOAT_MAT4\", binder: bindUniformFloatMat4 },\r\n    0x8B5E: { str: \"SAMPLER_2D\", binder: bindSampler2D },\r\n    0x8B60: { str: \"SAMPLER_CUBE\", binder: bindSamplerCube },\r\n    0x1400: { str: \"BYTE\", binder: notImplemented },\r\n    0x1401: { str: \"UNSIGNED_BYTE\", binder: notImplemented },\r\n    0x1402: { str: \"SHORT\", binder: notImplemented },\r\n    0x1403: { str: \"UNSIGNED_SHORT\", binder: notImplemented },\r\n    0x1404: { str: \"INT\", binder: bindUniformInt },\r\n    0x1405: { str: \"UNSIGNED_INT\", binder: notImplemented },\r\n    0x1406: { str: \"FLOAT\", binder: bindUniformFloat },\r\n};\r\n\r\ninterface IShaderUniform {\r\n    value: boolean | boolean[] | number | number[] | WebGLTexture | WebGLTexture[];\r\n    loc: WebGLUniformLocation;\r\n    size: number;\r\n    type: number;\r\n}\r\n\r\ninterface IShaderAttribute {\r\n    VBO: VBO;\r\n    loc: GLint;\r\n    size: number;\r\n    type: number;\r\n}\r\n\r\nclass ShaderProgram extends GLResource {\r\n    public u: IShaderUniform[];\r\n    public a: IShaderAttribute[];\r\n\r\n    private id: WebGLProgram;\r\n    private uCount: number;\r\n    private aCount: number;\r\n\r\n    constructor(gl: WebGLRenderingContext, vertexSource: string, fragmentSource: string) {\r\n        function createShader(type: GLenum, source: string): WebGLShader {\r\n            const shader = gl.createShader(type);\r\n            gl.shaderSource(shader, source);\r\n            gl.compileShader(shader);\r\n\r\n            const compileSuccess = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n            if (!compileSuccess) {\r\n                console.error(gl.getShaderInfoLog(shader));\r\n                gl.deleteShader(shader);\r\n                return null;\r\n            }\r\n\r\n            return shader;\r\n        }\r\n\r\n        super(gl);\r\n\r\n        this.id = null;\r\n        this.uCount = 0;\r\n        this.aCount = 0;\r\n\r\n        const vertexShader = createShader(gl.VERTEX_SHADER, vertexSource);\r\n        const fragmentShader = createShader(gl.FRAGMENT_SHADER, fragmentSource);\r\n\r\n        const id = gl.createProgram();\r\n        gl.attachShader(id, vertexShader);\r\n        gl.attachShader(id, fragmentShader);\r\n        gl.linkProgram(id);\r\n\r\n        const linkSuccess = gl.getProgramParameter(id, gl.LINK_STATUS);\r\n        if (!linkSuccess) {\r\n            console.error(gl.getProgramInfoLog(id));\r\n            gl.deleteProgram(id);\r\n        } else {\r\n            this.id = id;\r\n\r\n            this.introspection();\r\n        }\r\n    }\r\n\r\n    public freeGLResources(): void {\r\n        super.gl().deleteProgram(this.id);\r\n        this.id = null;\r\n    }\r\n\r\n    public use(): void {\r\n        super.gl().useProgram(this.id);\r\n    }\r\n\r\n    public bindUniforms(): void {\r\n        const gl: WebGLRenderingContext = super.gl();\r\n        let currTextureUnitNb: number = 0;\r\n\r\n        Object.keys(this.u).forEach((uName) => {\r\n            const uniform = this.u[uName];\r\n            if (uniform.value !== null) {\r\n                if (uniform.type === 0x8B5E || uniform.type === 0x8B60) {\r\n                    const unitNb: number = currTextureUnitNb;\r\n                    types[uniform.type].binder(gl, uniform.loc, unitNb, uniform.value);\r\n                    currTextureUnitNb++;\r\n                } else {\r\n                    types[uniform.type].binder(gl, uniform.loc, uniform.value);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public bindAttributes(): void {\r\n        Object.keys(this.a).forEach((aName) => {\r\n            const attribute = this.a[aName];\r\n            if (attribute.VBO !== null) {\r\n                attribute.VBO.bind(attribute.loc);\r\n            }\r\n        });\r\n    }\r\n\r\n    public bindUniformsAndAttributes(): void {\r\n        this.bindUniforms();\r\n        this.bindAttributes();\r\n    }\r\n\r\n    private introspection(): void {\r\n        const gl = super.gl();\r\n\r\n        this.uCount = gl.getProgramParameter(this.id, gl.ACTIVE_UNIFORMS);\r\n        this.u = [];\r\n        for (let i = 0; i < this.uCount; ++i) {\r\n            const uniform = gl.getActiveUniform(this.id, i);\r\n            const name = uniform.name;\r\n\r\n            this.u[name] = {\r\n                loc: gl.getUniformLocation(this.id, name),\r\n                size: uniform.size,\r\n                type: uniform.type,\r\n                value: null,\r\n            };\r\n        }\r\n\r\n        this.aCount = gl.getProgramParameter(this.id, gl.ACTIVE_ATTRIBUTES);\r\n        this.a = [];\r\n        for (let i = 0; i < this.aCount; ++i) {\r\n            const attribute = gl.getActiveAttrib(this.id, i);\r\n            const name = attribute.name;\r\n\r\n            this.a[name] = {\r\n                VBO: null,\r\n                loc: gl.getAttribLocation(this.id, name),\r\n                size: attribute.size,\r\n                type: attribute.type,\r\n            };\r\n        }\r\n    }\r\n}\r\n\r\nexport default ShaderProgram;\r\n","import GLResource from \"./gl-resource\";\r\n\r\nenum Usage {\r\n    DYNAMIC,\r\n    STATIC,\r\n}\r\n\r\nclass VBO extends GLResource {\r\n    public static createQuad(gl: WebGLRenderingContext, minX: number, minY: number, maxX: number, maxY: number): VBO {\r\n        const vert = [\r\n            minX, minY,\r\n            maxX, minY,\r\n            minX, maxY,\r\n            maxX, maxY,\r\n        ];\r\n\r\n        return new VBO(gl, new Float32Array(vert), 2, gl.FLOAT, true);\r\n    }\r\n\r\n    private id: WebGLBuffer;\r\n    private size: number;\r\n    private type: GLenum;\r\n    private normalize: GLboolean;\r\n    private stride: GLsizei;\r\n    private offset: GLintptr;\r\n    private usage: Usage;\r\n\r\n    constructor(gl: WebGLRenderingContext, array: any, size: number, type: GLenum, staticUsage: boolean = true) {\r\n        super(gl);\r\n\r\n        this.id = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.id);\r\n        if (staticUsage) {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.STATIC_DRAW);\r\n        } else {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.DYNAMIC_DRAW);\r\n        }\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n\r\n        this.size = size;\r\n        this.type = type;\r\n        this.normalize = false;\r\n        this.stride = 0;\r\n        this.offset = 0;\r\n        this.usage = (staticUsage) ? Usage.STATIC : Usage.DYNAMIC;\r\n    }\r\n\r\n    public freeGLResources(): void {\r\n        this.gl().deleteBuffer(this.id);\r\n        this.id = null;\r\n    }\r\n\r\n    public bind(location: GLuint): void {\r\n        const gl = super.gl();\r\n        gl.enableVertexAttribArray(location);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.id);\r\n        gl.vertexAttribPointer(location, this.size, this.type, this.normalize, this.stride, this.offset);\r\n    }\r\n\r\n    public setData(array: any): void {\r\n        const gl = super.gl();\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.id);\r\n        if (this.usage === Usage.STATIC) {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.STATIC_DRAW);\r\n        } else {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.DYNAMIC_DRAW);\r\n        }\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n    }\r\n}\r\n\r\nexport default VBO;\r\n","class Viewport {\r\n    public static setFullCanvas(gl: WebGLRenderingContext): void {\r\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\r\n    }\r\n\r\n    public lower: number;\r\n    public left: number;\r\n    public width: number;\r\n    public height: number;\r\n\r\n    constructor(left: number, lower: number, width: number, height: number) {\r\n        this.left = left;\r\n        this.lower = lower;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n\r\n    public set(gl: WebGLRenderingContext): void {\r\n        gl.viewport(this.lower, this.left, this.width, this.height);\r\n    }\r\n}\r\n\r\nexport default Viewport;\r\n","import \"./page-interface-generated\";\r\n\r\nconst FONT_NAME = \"Nothing You Could Do\";\r\nconst BLOCK_MARGIN = 8;\r\nconst BLOCK_PADDING = 8;\r\nconst TITLE_FONT_SIZE = 24;\r\nconst FONT_SIZE = 20;\r\nconst SUB_FONT_SIZE = 16;\r\n\r\nlet fontColor: string = \"blue\";\r\nlet backgroundColor: string = \"red\";\r\n\r\n(function registerFont() {\r\n    const fontLink = document.createElement(\"link\");\r\n    fontLink.href = \"https://fonts.googleapis.com/css?family=\" + FONT_NAME.replace(\" \", \"+\");\r\n    fontLink.rel = \"stylesheet\";\r\n    document.head.appendChild(fontLink);\r\n})();\r\n\r\nlet colorsStylesheet: any; // really a StyleSheet but Typescript definitions are incomplete\r\n(function registerCss() {\r\n    const infosCss =\r\n    `.infos {\r\n        position: absolute;\r\n        bottom: 0;\r\n        left: 0;\r\n        line-height: 1em;\r\n        margin: ` + BLOCK_MARGIN + `px;\r\n        text-align: left;\r\n        font-family: '` + FONT_NAME + `', cursive;\r\n        font-size: ` + FONT_SIZE + `px;\r\n    }\r\n    .infos sub {\r\n        font-size: ` + SUB_FONT_SIZE + `px;\r\n    }\r\n    .infos div {\r\n        padding: ` + BLOCK_PADDING + `px;\r\n    }\r\n    .infos .attractor-name {\r\n        display: inline-block;\r\n        font-size: ` + TITLE_FONT_SIZE + `px;\r\n    }\r\n    .infos .attractor-parameters {\r\n        display: inline-block;\r\n    }`;\r\n\r\n    const infosStyle = document.createElement(\"style\");\r\n    infosStyle.setAttribute(\"type\", \"text/css\");\r\n    if ((infosStyle as any).styleSheet) {   // IE\r\n        (infosStyle as any).styleSheet.cssText = infosCss;\r\n    } else {\r\n        infosStyle.appendChild(document.createTextNode(infosCss));\r\n    }\r\n    document.head.appendChild(infosStyle);\r\n\r\n    const infosColorsStyle = document.createElement(\"style\");\r\n    document.head.appendChild(infosColorsStyle);\r\n    colorsStylesheet = infosColorsStyle.sheet;\r\n})();\r\n\r\nsetColors(\"white\", \"black\");\r\n\r\nconst titleElt = document.createElement(\"div\");\r\ntitleElt.className = \"attractor-name\";\r\nconst formulaElt = document.createElement(\"div\");\r\nconst parametersElt = document.createElement(\"div\");\r\nparametersElt.className = \"attractor-parameters\";\r\n\r\nconst infosBlockElt = document.createElement(\"div\");\r\ninfosBlockElt.className = \"infos\";\r\ninfosBlockElt.appendChild(titleElt);\r\ninfosBlockElt.appendChild(formulaElt);\r\ninfosBlockElt.appendChild(parametersElt);\r\nsetVisibility(false);\r\n\r\nconst canvasContainer = (Page.Canvas.getCanvas() as HTMLElement).parentElement;\r\ncanvasContainer.appendChild(infosBlockElt);\r\n\r\nfunction setColors(newFontColor: string, newBackgroundColor: string) {\r\n    fontColor = newFontColor;\r\n    backgroundColor = newBackgroundColor;\r\n\r\n    while (colorsStylesheet.cssRules.length > 0) {\r\n        colorsStylesheet.deleteRule(0);\r\n    }\r\n    colorsStylesheet.insertRule(\".infos { color: \" + fontColor + \"; }\", 0);\r\n    colorsStylesheet.insertRule(\".infos div { background: \" + backgroundColor + \"; }\", 0);\r\n}\r\n\r\nfunction setVisibility(visible: boolean) {\r\n    infosBlockElt.style.opacity = visible ? \"1\" : \"0\";\r\n}\r\n\r\nfunction setTitle(title: string) {\r\n    titleElt.textContent = title;\r\n}\r\n\r\nfunction setFormula(formula: string) {\r\n    function frame(op: string, f: string) {\r\n        return f + op + f;\r\n    }\r\n    function frameNode(op: string, node: string) {\r\n        return \"<\" + node + \">\" + op + \"</\" + node + \">\";\r\n    }\r\n\r\n    const SPACE = \" \";\r\n    const HALF_SPACE = \"&#8239;\";\r\n\r\n    let html = formula.replace(/\\s*\\*\\s*/g, frame(\"&times\", HALF_SPACE));\r\n    html = html.replace(/\\s*\\/\\s*/g, frame(\"&divide\", HALF_SPACE));\r\n    html = html.replace(/\\s*\\+\\s*/g, frame(\"+\", SPACE));\r\n    html = html.replace(/\\s*-\\s*/g, frame(\"-\", SPACE));\r\n    html = html.replace(/\\s*=\\s*/g, frame(\"=\", SPACE));\r\n    html = html.replace(/\\s*n\\s*\\+\\s*1\\s*/g, \"n\" + frame(\"+\", HALF_SPACE) + \"1\");\r\n    html = html.replace(/\\n/g, \"<br/>\");\r\n    html = html.replace(/_{([^}]*)}/g, (str, $1) => frameNode($1, \"sub\"));\r\n    html = html.replace(/\\^{([^}]*)}/g, (str, $1) => frameNode($1, \"sup\"));\r\n\r\n    formulaElt.innerHTML = html;\r\n}\r\n\r\nfunction setParameters(parameters: string[]) {\r\n    parametersElt.innerHTML = parameters.join(\"<br/>\");\r\n}\r\n\r\nfunction drawToCanvas(ctx: CanvasRenderingContext2D) {\r\n    function setFontSize(sizeInPx: number) {\r\n        ctx.font = sizeInPx + \"px \" + FONT_NAME;\r\n    }\r\n\r\n    function drawBackground(x: number, y: number, width: number, height: number) {\r\n        const previousFillStyle = ctx.fillStyle;\r\n        ctx.fillStyle = backgroundColor;\r\n        ctx.fillRect(x, y, width, height);\r\n        ctx.fillStyle = previousFillStyle;\r\n    }\r\n\r\n    drawBackground(BLOCK_MARGIN, BLOCK_MARGIN, titleElt.clientWidth, titleElt.clientHeight);\r\n    ctx.fillStyle = fontColor;\r\n    ctx.textAlign = \"left\";\r\n    ctx.textBaseline = \"top\";\r\n\r\n    const blockLeft = BLOCK_MARGIN + BLOCK_PADDING;\r\n    let top = BLOCK_MARGIN + BLOCK_PADDING;\r\n\r\n    let fontSize = TITLE_FONT_SIZE;\r\n    setFontSize(fontSize);\r\n    ctx.fillText(titleElt.textContent, blockLeft, top);\r\n    top += 2 * FONT_SIZE;\r\n\r\n    fontSize = FONT_SIZE;\r\n    setFontSize(fontSize);\r\n\r\n    drawBackground(BLOCK_MARGIN, top - BLOCK_PADDING, formulaElt.clientWidth, formulaElt.clientHeight);\r\n\r\n    /* HTML tags cannot be used when drawing text on a canvas,\r\n     * so we need to handle manually tags such as br and sub. */\r\n    formulaElt.innerHTML.split(/\\s*<br\\/?>\\s*/g).forEach((str) => {\r\n        let dLeft = 0;\r\n        let currIndex = 0;\r\n\r\n        function writeText(text: string) {\r\n            ctx.fillText(text, blockLeft + dLeft, top);\r\n            dLeft += ctx.measureText(text).width;\r\n        }\r\n\r\n        function findNext(nodeName: string) {\r\n            const i = str.indexOf(nodeName, currIndex);\r\n            return (i < 0) ? str.length : i;\r\n        }\r\n\r\n        while (currIndex < str.length) {\r\n            let index = findNext(\"<sub>\");\r\n            writeText(str.substring(currIndex, index));\r\n            currIndex = index + 5; // 5 === \"<sub>\".length\r\n\r\n            index = findNext(\"</sub>\");\r\n            top += .4 * fontSize;\r\n            setFontSize(SUB_FONT_SIZE);\r\n            writeText(str.substring(currIndex, index));\r\n            top -= .4 * fontSize;\r\n            currIndex = index + 6; // 6 === \"</sub>\".length\r\n\r\n            setFontSize(fontSize);\r\n        }\r\n        top += 1.25 * fontSize;\r\n    });\r\n\r\n    top += 1 * FONT_SIZE;\r\n\r\n    drawBackground(BLOCK_MARGIN, top - BLOCK_PADDING, parametersElt.clientWidth, parametersElt.clientHeight);\r\n\r\n    parametersElt.innerHTML.split(/\\s*<br\\/?>\\s*/g).forEach((line) => {\r\n        ctx.fillText(line, blockLeft, top);\r\n        top += 1 * fontSize;\r\n    });\r\n}\r\n\r\nexport {\r\n    drawToCanvas,\r\n    setColors,\r\n    setFormula,\r\n    setParameters,\r\n    setTitle,\r\n    setVisibility,\r\n};\r\n","import * as GLCanvas from \"./gl-utils/gl-canvas\";\r\nimport { gl } from \"./gl-utils/gl-canvas\";\r\n\r\nimport Attractor from \"./attractors/attractor\";\r\nimport BedHeadAttractor from \"./attractors/bedhead\";\r\nimport CliffordAttractor from \"./attractors/clifford\";\r\nimport DeJongAttractor from \"./attractors/de-jong\";\r\nimport FractalDreamAttractor from \"./attractors/fractal-dream\";\r\nimport * as Infos from \"./infos\";\r\nimport { attractorNames, compositingNames, ControlsID, Parameters } from \"./parameters\";\r\n\r\nimport Compositing from \"./compositing/compositing\";\r\nimport CompositingColor from \"./compositing/compositing-color\";\r\nimport CompositingDark from \"./compositing/compositing-dark\";\r\nimport CompositingLight from \"./compositing/compositing-light\";\r\n\r\nimport \"./page-interface-generated\";\r\n\r\nfunction main() {\r\n    initGL();\r\n\r\n    let needToRestartRendering = true;\r\n    Page.Canvas.Observers.canvasResize.push(() => needToRestartRendering = true);\r\n    Parameters.clearObservers.push(() => needToRestartRendering = true);\r\n\r\n    Parameters.attractor = attractorNames.DeJong;\r\n\r\n    const attractors = {};\r\n    attractors[attractorNames.Bedhead] = new BedHeadAttractor();\r\n    attractors[attractorNames.Clifford] = new CliffordAttractor();\r\n    attractors[attractorNames.DeJong] = new DeJongAttractor();\r\n    attractors[attractorNames.FractalDream] = new FractalDreamAttractor();\r\n\r\n    const compositings = {};\r\n    compositings[compositingNames.color] = new CompositingColor();\r\n    compositings[compositingNames.dark] = new CompositingDark();\r\n    compositings[compositingNames.light] = new CompositingLight();\r\n\r\n    let totalPoints: number;\r\n    function setTotalPoints(total: number): void {\r\n        totalPoints = total;\r\n        Page.Canvas.setIndicatorText(\"points-drawn\", totalPoints.toLocaleString());\r\n    }\r\n    setTotalPoints(0);\r\n\r\n    let shouldComposeAgain: boolean;\r\n    Parameters.shouldComposeAgainObservers.push(() => shouldComposeAgain = true);\r\n\r\n    const MAX_STEP_SIZE = Math.pow(2, 17);\r\n    let attractor: Attractor;\r\n    let compositing: Compositing;\r\n    function mainLoop() {\r\n        if (needToRestartRendering) {\r\n            needToRestartRendering = false;\r\n            setTotalPoints(0);\r\n\r\n            attractor = attractors[Parameters.attractor];\r\n            attractor.reset();\r\n\r\n            compositing = compositings[Parameters.compositing];\r\n            compositing.initialize();\r\n\r\n            Infos.setColors(compositing.foregroundColor, compositing.backgroundColor);\r\n        }\r\n\r\n        if (totalPoints < Parameters.nbPointsNeeded) {\r\n            compositing.bindTopLayer();\r\n            const stepSize = Math.ceil(Math.min(MAX_STEP_SIZE, Parameters.nbPointsNeeded - totalPoints));\r\n            if (attractor.drawXPoints(stepSize)) {\r\n                setTotalPoints(totalPoints + stepSize);\r\n                compositing.compose();\r\n            }\r\n        }\r\n\r\n        if (shouldComposeAgain) {\r\n            shouldComposeAgain = false;\r\n            compositing.updateColors();\r\n            compositing.compose();\r\n            Infos.setColors(compositing.foregroundColor, compositing.backgroundColor);\r\n        }\r\n\r\n        requestAnimationFrame(mainLoop);\r\n    }\r\n\r\n    function initGL() {\r\n        const glParams = {\r\n            alpha: false,\r\n            depth: false,\r\n            preserveDrawingBuffer: true,\r\n        };\r\n        if (!GLCanvas.initGL(glParams)) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    Page.FileControl.addDownloadObserver(ControlsID.DOWNLOAD, () => {\r\n        const figureSize = +Page.Tabs.getValues(ControlsID.DOWNLOAD_SIZE)[0];\r\n\r\n        const nbPointsNeeded = Parameters.computeNbPointsNeeded([figureSize, figureSize]);\r\n        if (nbPointsNeeded > 25000000) {\r\n            const message = \"Rendering your image might take a while \" +\r\n                \"because it requires to draw \" + nbPointsNeeded.toLocaleString() + \" points. \" +\r\n                \"Do you want to proceed?\";\r\n            if (!confirm(message)) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        const canvas2D = document.createElement(\"canvas\");\r\n        const ctx2D = canvas2D.getContext(\"2d\");\r\n\r\n        canvas2D.width = figureSize + 400;\r\n        canvas2D.height = figureSize;\r\n\r\n        const canvasGL = Page.Canvas.getCanvas();\r\n        function isolateCanvasGL() {\r\n            Page.Canvas.showLoader(true);\r\n\r\n            canvasGL.style.position = \"absolute\";\r\n            canvasGL.style.width = figureSize + \"px\";\r\n            canvasGL.style.height = figureSize + \"px\";\r\n            canvasGL.width = figureSize;\r\n            canvasGL.height = figureSize;\r\n\r\n            compositing.initialize();\r\n        }\r\n\r\n        function restoreCanvasGL() {\r\n            canvasGL.style.position = \"\";\r\n            canvasGL.style.width = \"\";\r\n            canvasGL.style.height = \"\";\r\n            Page.Canvas.showLoader(false);\r\n            Page.Canvas.setLoaderText(\"\");\r\n            needToRestartRendering = true;\r\n        }\r\n\r\n        isolateCanvasGL();\r\n\r\n        let nbPoints = 0;\r\n        const maxStepSize = Math.pow(2, 18);\r\n        compositing.bindTopLayer();\r\n        while (nbPoints < nbPointsNeeded) {\r\n            const stepSize = Math.ceil(Math.min(maxStepSize, nbPointsNeeded - nbPoints));\r\n            nbPoints += stepSize;\r\n            attractor.drawXPoints(stepSize);\r\n        }\r\n        compositing.compose();\r\n\r\n        ctx2D.fillStyle = compositing.backgroundColor;\r\n        ctx2D.fillRect(0, 0, canvas2D.width, canvas2D.height);\r\n        ctx2D.drawImage(gl.canvas, 0.5 * (canvas2D.width - figureSize), 0, figureSize, figureSize);\r\n        restoreCanvasGL();\r\n        Infos.drawToCanvas(ctx2D);\r\n\r\n        if ((canvas2D as any).msToBlob) { // for IE\r\n            const blob = (canvas2D as any).msToBlob();\r\n            window.navigator.msSaveBlob(blob, \"image.png\");\r\n        } else {\r\n            canvas2D.toBlob((blob) => {\r\n                const link = document.createElement(\"a\");\r\n                link.download = \"image.png\";\r\n                link.href = URL.createObjectURL(blob);\r\n                link.click();\r\n            });\r\n        }\r\n    });\r\n\r\n    requestAnimationFrame(mainLoop);\r\n}\r\n\r\nmain();\r\n","import * as Infos from \"./infos\";\r\n\r\nimport \"./page-interface-generated\";\r\n\r\nconst attractorNames = {\r\n    DeJong: \"de-jong\",\r\n    Bedhead: \"bedhead\",\r\n    Clifford: \"clifford\",\r\n    FractalDream: \"fractal-dream\",\r\n};\r\n\r\nconst compositingNames = {\r\n    dark: \"dark\",\r\n    light: \"light\",\r\n    color: \"color\",\r\n};\r\n\r\n/* === IDs ============================================================ */\r\nconst controlId = {\r\n    ATTRACTOR: \"attractor-picker-id\",\r\n    A: \"a-range-id\",\r\n    B: \"b-range-id\",\r\n    C: \"c-range-id\",\r\n    D: \"d-range-id\",\r\n    FORMULA: \"formula-checkbox-id\",\r\n    INDICATORS: \"indicators-checkbox-id\",\r\n    INTENSITY: \"intensity-range-id\",\r\n    QUALITY: \"quality-range-id\",\r\n    COMPOSITING: \"compositing\",\r\n    FOREGROUND: \"foreground-range-id\",\r\n    BACKGROUND: \"background-range-id\",\r\n    DOWNLOAD_SIZE: \"download-size\",\r\n    DOWNLOAD: \"file-download-id\",\r\n};\r\n\r\n/* === OBSERVERS ====================================================== */\r\ntype GenericObserver = () => void;\r\n\r\nfunction callObservers(observersList: any[]): void {\r\n    for (const observer of observersList) {\r\n        observer();\r\n    }\r\n}\r\n\r\nconst observers: {\r\n    clear: GenericObserver[],\r\n    shouldComposeAgain: GenericObserver[],\r\n} = {\r\n    clear: [],\r\n    shouldComposeAgain: [],\r\n};\r\n\r\nlet attractor: string;\r\nlet a: number;\r\nlet b: number;\r\nlet c: number;\r\nlet d: number;\r\n\r\nlet intensity: number;\r\nlet quality: number;\r\nlet compositing: string;\r\nlet foregroundColor: number[]; // in [0, 1]^3\r\nlet backgroundColor: number[]; // in [0, 1]^3\r\nlet nbPointsNeeded: number;\r\n\r\nfunction updateNbPointsNeeded() {\r\n    nbPointsNeeded = Parameters.computeNbPointsNeeded(Page.Canvas.getSize());\r\n}\r\n\r\nfunction setCompositing(name: string) {\r\n    const isColor = (name === compositingNames.color);\r\n    Page.Controls.setVisibility(controlId.FOREGROUND, isColor);\r\n    Page.Controls.setVisibility(controlId.BACKGROUND, isColor);\r\n\r\n    compositing = name;\r\n    callObservers(observers.clear);\r\n}\r\n\r\n/* === INTERFACE ====================================================== */\r\nclass Parameters {\r\n    public static get attractor(): string {\r\n        return attractor;\r\n    }\r\n    public static set attractor(att: string) {\r\n        Page.Picker.setValue(controlId.ATTRACTOR, att);\r\n        attractor = att;\r\n    }\r\n\r\n    public static get a(): number {\r\n        return a;\r\n    }\r\n\r\n    public static get b(): number {\r\n        return b;\r\n    }\r\n\r\n    public static get c(): number {\r\n        return c;\r\n    }\r\n\r\n    public static get d(): number {\r\n        return d;\r\n    }\r\n\r\n    public static get nbPointsNeeded(): number {\r\n        return nbPointsNeeded;\r\n    }\r\n\r\n    public static get quality(): number {\r\n        return quality;\r\n    }\r\n\r\n    public static get compositing(): string {\r\n        return compositing;\r\n    }\r\n\r\n    public static get foregroundColor(): number[] {\r\n        return foregroundColor;\r\n    }\r\n\r\n    public static get backgroundColor(): number[] {\r\n        return backgroundColor;\r\n    }\r\n\r\n    public static get clearObservers(): GenericObserver[] {\r\n        return observers.clear;\r\n    }\r\n\r\n    public static get shouldComposeAgainObservers(): GenericObserver[] {\r\n        return observers.shouldComposeAgain;\r\n    }\r\n\r\n    public static computeNbPointsNeeded(canvasSize: number[]): number {\r\n        const minDimension = Math.min(canvasSize[0], canvasSize[1]);\r\n        return intensity / (256 * quality) * minDimension * minDimension;\r\n    }\r\n\r\n    private constructor() {}\r\n}\r\n\r\n/* === EVENTS BINDING ================================================= */\r\n/* --- PARAMETERS ----------------------------------------------------- */\r\nPage.Picker.addObserver(controlId.ATTRACTOR, (value: string) => {\r\n    attractor = value;\r\n    callObservers(observers.clear);\r\n});\r\n\r\nPage.Range.addObserver(controlId.A, (newvalue: number) => {\r\n    a = newvalue;\r\n    callObservers(observers.clear);\r\n});\r\na = Page.Range.getValue(controlId.A);\r\n\r\nPage.Range.addObserver(controlId.B, (newvalue: number) => {\r\n    b = newvalue;\r\n    callObservers(observers.clear);\r\n});\r\nb = Page.Range.getValue(controlId.B);\r\n\r\nPage.Range.addObserver(controlId.C, (newvalue: number) => {\r\n    c = newvalue;\r\n    callObservers(observers.clear);\r\n});\r\nc = Page.Range.getValue(controlId.C);\r\n\r\nPage.Range.addObserver(controlId.D, (newvalue: number) => {\r\n    d = newvalue;\r\n    callObservers(observers.clear);\r\n});\r\nd = Page.Range.getValue(controlId.D);\r\n\r\nPage.Checkbox.addObserver(controlId.FORMULA, (checked: boolean) => {\r\n    Infos.setVisibility(checked);\r\n});\r\nInfos.setVisibility(Page.Checkbox.isChecked(controlId.FORMULA));\r\n\r\nPage.Range.addObserver(controlId.INTENSITY, (newvalue: number) => {\r\n    const needToClear = (newvalue < intensity);\r\n    intensity = newvalue;\r\n    updateNbPointsNeeded();\r\n\r\n    if (needToClear) {\r\n        callObservers(observers.clear);\r\n    }\r\n});\r\nintensity = Page.Range.getValue(controlId.INTENSITY);\r\n\r\nPage.Range.addObserver(controlId.QUALITY, (newvalue: number) => {\r\n    quality = 1 - (254 / 255) * newvalue;\r\n    updateNbPointsNeeded();\r\n    callObservers(observers.clear);\r\n});\r\nquality = 1 - (254 / 255) * Page.Range.getValue(controlId.QUALITY);\r\n\r\nPage.Tabs.addObserver(controlId.COMPOSITING, (newValue: string[]) => {\r\n    setCompositing(\"\" + newValue[0]);\r\n});\r\nsetCompositing(\"\" + Page.Tabs.getValues(controlId.COMPOSITING));\r\n\r\ninterface IRGB {\r\n    r: number;\r\n    g: number;\r\n    b: number;\r\n}\r\n\r\nfunction buildColor(color: IRGB): number[] {\r\n    return [color.r / 255, color.g / 255, color.b / 255, 1];\r\n}\r\nPage.ColorPicker.addObserver(controlId.FOREGROUND, (newColor) => {\r\n    foregroundColor = buildColor(newColor);\r\n    callObservers(observers.shouldComposeAgain);\r\n});\r\nforegroundColor = buildColor(Page.ColorPicker.getValue(controlId.FOREGROUND));\r\n\r\nPage.ColorPicker.addObserver(controlId.BACKGROUND, (newColor) => {\r\n    backgroundColor = buildColor(newColor);\r\n    callObservers(observers.shouldComposeAgain);\r\n});\r\nbackgroundColor = buildColor(Page.ColorPicker.getValue(controlId.BACKGROUND));\r\n\r\nPage.Checkbox.addObserver(controlId.INDICATORS, (checked: boolean) => {\r\n    Page.Canvas.setIndicatorsVisibility(checked);\r\n});\r\nPage.Canvas.setIndicatorsVisibility(Page.Checkbox.isChecked(controlId.INDICATORS));\r\n\r\nPage.Canvas.Observers.canvasResize.push(updateNbPointsNeeded);\r\nupdateNbPointsNeeded();\r\n\r\nexport {\r\n    attractorNames,\r\n    compositingNames,\r\n    controlId as ControlsID,\r\n    Parameters,\r\n};\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(633);\n"],"sourceRoot":""}