{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/ts/parameters.ts","webpack:///./src/ts/gl-utils/gl-canvas.ts","webpack:///./src/ts/attractors/attractor.ts","webpack:///./src/ts/infos.ts","webpack:///./src/ts/gl-utils/gl-resource.ts","webpack:///./src/ts/main.ts","webpack:///./src/ts/gl-utils/viewport.ts","webpack:///./src/ts/attractors/bedhead.ts","webpack:///./src/ts/gl-utils/shader-manager.ts","webpack:///./src/ts/gl-utils/shader.ts","webpack:///./src/ts/gl-utils/shader-sources.ts","webpack:///./src/ts/gl-utils/vbo.ts","webpack:///./src/ts/attractors/boundaries.ts","webpack:///./src/ts/attractors/clifford.ts","webpack:///./src/ts/attractors/de-jong.ts","webpack:///./src/ts/attractors/fractal-dream.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Infos","__importStar","attractorNames","DeJong","Bedhead","Clifford","FractalDream","controlId","ATTRACTOR","A","B","C","D","FORMULA","INDICATORS","INTENSITY","QUALITY","DOWNLOAD_SIZE","DOWNLOAD","callObservers","observersList","_i","observersList_1","length","observer","ControlsID","attractor","a","b","intensity","quality","nbPointsNeeded","observers","updateNbPointsNeeded","Parameters","computeNbPointsNeeded","Canvas","getSize","att","Picker","setValue","canvasSize","minDimension","Math","min","addObserver","Range","newvalue","getValue","Checkbox","checked","setVisibility","isChecked","needToClear","setIndicatorsVisibility","Observers","canvasResize","push","gl","initGL","flags","setError","message","Demopage","setErrorMessage","canvas","getCanvas","getContext","disable","CULL_FACE","DEPTH_TEST","BLEND","clearColor","adjustSize","hidpi","cssPixel","window","devicePixelRatio","width","floor","clientWidth","height","clientHeight","gl_canvas_1","ShaderManager","vbo_1","__importDefault","parameters_1","boundaries_1","shader","pointsVBO","Attractor","buildShader","fragmentFilename","vertexFilename","injected","newShader","fillData","Float32Array","default","FLOAT","this","boundaries","drawXPoints","nbPoints","data","computeXPoints","setData","aspectRatio","VBO","q","u","center","maxDimension","max","use","bindUniformsAndAttributes","drawArrays","POINTS","reset","toggleParametersVisibility","setTitle","setFormula","formula","setParameters","parameters","computeNextPoint","includePoint","x","y","fontLink","infosCss","infosStyle","FONT_NAME","BLOCK_MARGIN","BLOCK_PADDING","TITLE_FONT_SIZE","FONT_SIZE","SUB_FONT_SIZE","document","createElement","href","replace","rel","head","appendChild","setAttribute","styleSheet","cssText","createTextNode","titleElt","className","formulaElt","parametersElt","infosBlockElt","visible","style","display","parentElement","title","textContent","frame","op","f","frameNode","node","html","str","$1","innerHTML","join","drawToCanvas","ctx","setFontSize","sizeInPx","font","drawBackground","previousFillStyle","fillStyle","fillRect","textAlign","textBaseline","blockLeft","top","fontSize","fillText","split","forEach","dLeft","currIndex","writeText","text","measureText","findNext","nodeName","indexOf","index","substring","line","GLResource","_gl","GLCanvas","viewport_1","bedhead_1","clifford_1","de_jong_1","fractal_dream_1","alpha","depth","preserveDrawingBuffer","enable","blendEquation","FUNC_ADD","blendFunc","ONE","needToAdjustCanvas","clearObservers","totalPoints","attractors","setTotalPoints","total","setIndicatorText","toLocaleString","STEP_SIZE","pow","FileControl","addDownloadObserver","figureSize","Tabs","getValues","canvas2D","ctx2D","canvasGL","showLoader","position","setFullCanvas","clear","COLOR_BUFFER_BIT","stepSize","drawImage","setLoaderText","msToBlob","blob","navigator","msSaveBlob","toBlob","link","download","URL","createObjectURL","click","requestAnimationFrame","mainLoop","console","log","main","Viewport","left","lower","viewport","drawingBufferWidth","drawingBufferHeight","set","BeadheadAttractor","_super","__extends","Controls","_this","random","sin","cos","shader_1","ShaderSources","cachedShaders","infos","callback","sourcesPending","sourcesFailed","loadedSource","success","processSource","source","match","vert","getSource","frag","processedVert","processedFrag","loadSource","getShader","registerShader","callAndClearCallbacks","cached","_a","callbacks","cachedCallback","failed","pending","cached_1","builtShader","deleteShader","freeGLResources","gl_resource_1","notImplemented","location","alert","types","35664","binder","uniform2fv","35665","uniform3fv","35666","uniform4fv","35667","uniform2iv","35668","uniform3iv","35669","uniform4iv","35670","uniform1i","35671","35672","35673","35674","uniformMatrix2fv","35675","uniformMatrix3fv","35676","uniformMatrix4fv","35678","unitNb","activeTexture","bindTexture","TEXTURE_2D","35680","TEXTURE_CUBE_MAP","5120","5121","5122","5123","5124","Array","isArray","uniform1iv","5125","5126","uniform1fv","uniform1f","ShaderProgram","vertexSource","fragmentSource","createShader","type","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","error","getShaderInfoLog","id","uCount","aCount","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","introspection","getProgramInfoLog","deleteProgram","useProgram","bindUniforms","currTextureUnitNb","keys","uName","uniform","loc","bindAttributes","aName","attribute","ACTIVE_UNIFORMS","getActiveUniform","name_1","getUniformLocation","size","ACTIVE_ATTRIBUTES","getActiveAttrib","name_2","getAttribLocation","cachedSources","filename","xhr_1","XMLHttpRequest","open","onload","readyState","status","responseText","statusText","onerror","send","Usage","array","staticUsage","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","DYNAMIC_DRAW","normalize","stride","offset","usage","STATIC","DYNAMIC","createQuad","minX","minY","maxX","maxY","deleteBuffer","enableVertexAttribArray","vertexAttribPointer","Boundaries","CliffordAttractor","DeJongAttractor","FractalDreamAttractor"],"mappings":"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","file":"main.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","import * as Infos from \"./infos\";\r\n\r\ndeclare const Button: any;\r\ndeclare const Canvas: any;\r\ndeclare const Checkbox: any;\r\ndeclare const Controls: any;\r\ndeclare const FileControl: any;\r\ndeclare const Picker: any;\r\ndeclare const Range: any;\r\ndeclare const Tabs: any;\r\n\r\nconst attractorNames = {\r\n    DeJong: \"de-jong\",\r\n    Bedhead: \"bedhead\",\r\n    Clifford: \"clifford\",\r\n    FractalDream: \"fractal-dream\",\r\n};\r\n\r\n/* === IDs ============================================================ */\r\nconst controlId = {\r\n    ATTRACTOR: \"attractor-picker-id\",\r\n    A: \"a-range-id\",\r\n    B: \"b-range-id\",\r\n    C: \"c-range-id\",\r\n    D: \"d-range-id\",\r\n    FORMULA: \"formula-checkbox-id\",\r\n    INDICATORS: \"indicators-checkbox-id\",\r\n    INTENSITY: \"intensity-range-id\",\r\n    QUALITY: \"quality-range-id\",\r\n    DOWNLOAD_SIZE: \"download-size\",\r\n    DOWNLOAD: \"file-download-id\",\r\n};\r\n\r\n/* === OBSERVERS ====================================================== */\r\ntype GenericObserver = () => void;\r\n\r\nfunction callObservers(observersList: any[]): void {\r\n    for (const observer of observersList) {\r\n        observer();\r\n    }\r\n}\r\n\r\nconst observers: {\r\n    clear: GenericObserver[],\r\n} = {\r\n    clear: [],\r\n};\r\n\r\nlet attractor: string;\r\nlet a: number;\r\nlet b: number;\r\nlet c: number;\r\nlet d: number;\r\n\r\nlet intensity: number;\r\nlet quality: number;\r\nlet nbPointsNeeded: number;\r\n\r\nfunction updateNbPointsNeeded() {\r\n    nbPointsNeeded = Parameters.computeNbPointsNeeded(Canvas.getSize());\r\n}\r\n\r\n/* === INTERFACE ====================================================== */\r\nclass Parameters {\r\n    public static get attractor(): string {\r\n        return attractor;\r\n    }\r\n    public static set attractor(att: string) {\r\n        Picker.setValue(controlId.ATTRACTOR, att);\r\n        attractor = att;\r\n    }\r\n\r\n    public static get a(): number {\r\n        return a;\r\n    }\r\n\r\n    public static get b(): number {\r\n        return b;\r\n    }\r\n\r\n    public static get c(): number {\r\n        return c;\r\n    }\r\n\r\n    public static get d(): number {\r\n        return d;\r\n    }\r\n\r\n    public static get nbPointsNeeded(): number {\r\n        return nbPointsNeeded;\r\n    }\r\n\r\n    public static get quality(): number {\r\n        return quality;\r\n    }\r\n\r\n    public static get clearObservers(): GenericObserver[] {\r\n        return observers.clear;\r\n    }\r\n\r\n    public static computeNbPointsNeeded(canvasSize: number[]): number {\r\n        const minDimension = Math.min(canvasSize[0], canvasSize[1]);\r\n        return intensity / (256 * quality) * minDimension * minDimension;\r\n    }\r\n\r\n    private constructor() {}\r\n}\r\n\r\n/* === EVENTS BINDING ================================================= */\r\n/* --- PARAMETERS ----------------------------------------------------- */\r\nPicker.addObserver(controlId.ATTRACTOR, (value: string) => {\r\n    attractor = value;\r\n    callObservers(observers.clear);\r\n});\r\n\r\nRange.addObserver(controlId.A, (newvalue: number) => {\r\n    a = newvalue;\r\n    callObservers(observers.clear);\r\n});\r\na = Range.getValue(controlId.A);\r\n\r\nRange.addObserver(controlId.B, (newvalue: number) => {\r\n    b = newvalue;\r\n    callObservers(observers.clear);\r\n});\r\nb = Range.getValue(controlId.B);\r\n\r\nRange.addObserver(controlId.C, (newvalue: number) => {\r\n    c = newvalue;\r\n    callObservers(observers.clear);\r\n});\r\nc = Range.getValue(controlId.C);\r\n\r\nRange.addObserver(controlId.D, (newvalue: number) => {\r\n    d = newvalue;\r\n    callObservers(observers.clear);\r\n});\r\nd = Range.getValue(controlId.D);\r\n\r\nCheckbox.addObserver(controlId.FORMULA, (checked: boolean) => {\r\n    Infos.setVisibility(checked);\r\n});\r\nInfos.setVisibility(Checkbox.isChecked(controlId.FORMULA));\r\n\r\nRange.addObserver(controlId.INTENSITY, (newvalue: number) => {\r\n    const needToClear = (newvalue < intensity);\r\n    intensity = newvalue;\r\n    updateNbPointsNeeded();\r\n\r\n    if (needToClear) {\r\n        callObservers(observers.clear);\r\n    }\r\n});\r\nintensity = Range.getValue(controlId.INTENSITY);\r\n\r\nRange.addObserver(controlId.QUALITY, (newvalue: number) => {\r\n    quality = 1 - (254 / 255) * newvalue;\r\n    updateNbPointsNeeded();\r\n    callObservers(observers.clear);\r\n});\r\nquality = 1 - (254 / 255) * Range.getValue(controlId.QUALITY);\r\n\r\nCheckbox.addObserver(controlId.INDICATORS, (checked: number) => {\r\n    Canvas.setIndicatorsVisibility(checked);\r\n});\r\nCanvas.setIndicatorsVisibility(Checkbox.isChecked(controlId.INDICATORS));\r\n\r\nCanvas.Observers.canvasResize.push(updateNbPointsNeeded);\r\nupdateNbPointsNeeded();\r\n\r\nexport {\r\n    attractorNames,\r\n    controlId as ControlsID,\r\n    Parameters,\r\n};\r\n","declare const Demopage: any;\r\ndeclare const Canvas: any;\r\n\r\nlet gl: WebGLRenderingContext = null;\r\n\r\n/** Initializes a WebGL context */\r\nfunction initGL(flags: any): boolean {\r\n    function setError(message: string) {\r\n        Demopage.setErrorMessage(\"webgl-support\", message);\r\n    }\r\n\r\n    const canvas = Canvas.getCanvas();\r\n\r\n    gl = canvas.getContext(\"webgl\", flags) as WebGLRenderingContext;\r\n    if (gl == null) {\r\n        gl = canvas.getContext(\"experimental-webgl\", flags) as WebGLRenderingContext;\r\n        if (gl == null) {\r\n            setError(\"Your browser or device does not seem to support WebGL.\");\r\n            return false;\r\n        }\r\n\r\n        setError(\"Your browser or device only supports experimental WebGL.\\n\" +\r\n            \"The simulation may not run as expected.\");\r\n    }\r\n\r\n    gl.disable(gl.CULL_FACE);\r\n    gl.disable(gl.DEPTH_TEST);\r\n    gl.disable(gl.BLEND);\r\n    gl.clearColor(0, 0, 0, 1);\r\n\r\n    return true;\r\n}\r\n\r\n/* Adjusts the GL canvas size to the actual canvas element size on the page */\r\nfunction adjustSize(hidpi: boolean = false): void {\r\n    const cssPixel: number = (hidpi) ? window.devicePixelRatio : 1;\r\n\r\n    const width: number = Math.floor(gl.canvas.clientWidth * cssPixel);\r\n    const height: number = Math.floor(gl.canvas.clientHeight * cssPixel);\r\n    if (gl.canvas.width !== width || gl.canvas.height !== height) {\r\n        gl.canvas.width = width;\r\n        gl.canvas.height = height;\r\n    }\r\n}\r\n\r\nexport {\r\n    adjustSize,\r\n    initGL,\r\n    gl,\r\n};\r\n","import { gl } from \"../gl-utils/gl-canvas\";\r\nimport Shader from \"../gl-utils/shader\";\r\nimport * as ShaderManager from \"../gl-utils/shader-manager\";\r\nimport VBO from \"../gl-utils/vbo\";\r\n\r\nimport * as Infos from \"../infos\";\r\nimport { Parameters } from \"../parameters\";\r\nimport Boundaries from \"./boundaries\";\r\n\r\nlet shader: Shader = null;\r\nlet pointsVBO: VBO = null;\r\n\r\ndeclare const Canvas: any;\r\n\r\nabstract class Attractor {\r\n    protected boundaries: Boundaries;\r\n    protected x: number;\r\n    protected y: number;\r\n\r\n    constructor() {\r\n        if (shader === null) {\r\n            ShaderManager.buildShader(\r\n                {\r\n                    fragmentFilename: \"points.frag\",\r\n                    vertexFilename: \"points.vert\",\r\n                    injected: {},\r\n                },\r\n                (newShader) => {\r\n                    if (newShader !== null) {\r\n                        shader = newShader;\r\n                    }\r\n                },\r\n            );\r\n        }\r\n\r\n        if (pointsVBO === null) {\r\n            const fillData = new Float32Array(2);\r\n            pointsVBO = new VBO(gl, fillData, 2, gl.FLOAT, false);\r\n        }\r\n\r\n        this.boundaries = null;\r\n    }\r\n\r\n    public drawXPoints(nbPoints: number): boolean {\r\n        if (shader) {\r\n            const data = this.computeXPoints(nbPoints);\r\n            pointsVBO.setData(data);\r\n\r\n            const canvasSize = Canvas.getSize();\r\n            const aspectRatio = canvasSize[0] / canvasSize[1];\r\n\r\n            /* tslint:disable:no-string-literal */\r\n            shader.a[\"aCoords\"].VBO = pointsVBO;\r\n            const q = Parameters.quality;\r\n            shader.u[\"uColor\"].value = [q, q, q, 1];\r\n            shader.u[\"uCenter\"].value = this.boundaries.center;\r\n            const maxDimension = 0.5 + this.boundaries.maxDimension;\r\n            shader.u[\"uScale\"].value = [\r\n                2 / maxDimension / Math.max(aspectRatio, 1),\r\n                2 / maxDimension * Math.min(aspectRatio, 1),\r\n            ];\r\n            /* tslint:enable:no-string-literal */\r\n\r\n            shader.use();\r\n            shader.bindUniformsAndAttributes();\r\n\r\n            gl.drawArrays(gl.POINTS, 0, nbPoints);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public reset(): void {\r\n        this.toggleParametersVisibility();\r\n        Infos.setTitle(this.name);\r\n        Infos.setFormula(this.formula);\r\n        Infos.setParameters(this.parameters);\r\n        this.boundaries = null;\r\n    }\r\n\r\n    /* For infos block display */\r\n    public abstract get name(): string;\r\n    public abstract get formula(): string;\r\n    public abstract get parameters(): string[];\r\n\r\n    public abstract toggleParametersVisibility(): void;\r\n\r\n    /* Should update minX, maxX, minY and maxY */\r\n    protected abstract computeXPoints(nbPoints: number): Float32Array;\r\n\r\n    protected fillData(nbPoints: number, computeNextPoint: (pointIndex: number) => void) {\r\n        /* ignore the first 1000 ones */\r\n        for (let i = 0; i < 100; ++i) {\r\n            computeNextPoint(0);\r\n        }\r\n\r\n        if (this.boundaries === null) {\r\n            this.boundaries = new Boundaries();\r\n\r\n            for (let i = 0; i < nbPoints; ++i) {\r\n                computeNextPoint(i);\r\n                this.boundaries.includePoint(this.x, this.y);\r\n            }\r\n        } else {\r\n            for (let i = 0; i < nbPoints; ++i) {\r\n                computeNextPoint(i);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Attractor;\r\n","declare const Canvas: any;\r\n\r\nconst FONT_NAME = \"Nothing You Could Do\";\r\nconst BLOCK_MARGIN = 8;\r\nconst BLOCK_PADDING = 8;\r\nconst TITLE_FONT_SIZE = 24;\r\nconst FONT_SIZE = 20;\r\nconst SUB_FONT_SIZE = 16;\r\n\r\n(function registerFont() {\r\n    const fontLink = document.createElement(\"link\");\r\n    fontLink.href = \"https://fonts.googleapis.com/css?family=\" + FONT_NAME.replace(\" \", \"+\");\r\n    fontLink.rel = \"stylesheet\";\r\n    document.head.appendChild(fontLink);\r\n})();\r\n\r\n(function registerCss() {\r\n    const infosCss =\r\n        `.infos {\r\n        position: absolute;\r\n        bottom: 0;\r\n        left: 0;\r\n        line-height: 1em;\r\n        margin: ` + BLOCK_MARGIN + `px;\r\n        text-align: left;\r\n        color: white;\r\n        font-family: '` + FONT_NAME + `', cursive;\r\n        font-size: ` + FONT_SIZE + `px;\r\n    }\r\n    .infos sub {\r\n        font-size: ` + SUB_FONT_SIZE + `px;\r\n    }\r\n    .infos div {\r\n        padding: ` + BLOCK_PADDING + `px;\r\n        background: black;\r\n    }\r\n    .infos .attractor-name {\r\n        display: inline-block;\r\n        font-size: ` + TITLE_FONT_SIZE + `px;\r\n    }\r\n    .infos .attractor-parameters {\r\n        display: inline-block;\r\n    }`;\r\n\r\n    const infosStyle = document.createElement(\"style\");\r\n    infosStyle.setAttribute(\"type\", \"text/css\");\r\n    if ((infosStyle as any).styleSheet) {   // IE\r\n        (infosStyle as any).styleSheet.cssText = infosCss;\r\n    } else {\r\n        infosStyle.appendChild(document.createTextNode(infosCss));\r\n    }\r\n    document.head.appendChild(infosStyle);\r\n})();\r\n\r\nconst titleElt = document.createElement(\"div\");\r\ntitleElt.className = \"attractor-name\";\r\nconst formulaElt = document.createElement(\"div\");\r\nconst parametersElt = document.createElement(\"div\");\r\nparametersElt.className = \"attractor-parameters\";\r\n\r\nconst infosBlockElt = document.createElement(\"div\");\r\ninfosBlockElt.className = \"infos\";\r\ninfosBlockElt.appendChild(titleElt);\r\ninfosBlockElt.appendChild(formulaElt);\r\ninfosBlockElt.appendChild(parametersElt);\r\nsetVisibility(false);\r\n\r\nconst canvasContainer = (Canvas.getCanvas() as HTMLElement).parentElement;\r\ncanvasContainer.appendChild(infosBlockElt);\r\n\r\nfunction setVisibility(visible: boolean) {\r\n    infosBlockElt.style.display = visible ? \"\" : \"none\";\r\n}\r\n\r\nfunction setTitle(title: string) {\r\n    titleElt.textContent = title;\r\n}\r\n\r\nfunction setFormula(formula: string) {\r\n    function frame(op: string, f: string) {\r\n        return f + op + f;\r\n    }\r\n    function frameNode(op: string, node: string) {\r\n        return \"<\" + node + \">\" + op + \"</\" + node + \">\";\r\n    }\r\n\r\n    const SPACE = \" \";\r\n    const HALF_SPACE = \"&#8239;\";\r\n\r\n    let html = formula.replace(/\\s*\\*\\s*/g, frame(\"&times\", HALF_SPACE));\r\n    html = html.replace(/\\s*\\/\\s*/g, frame(\"&divide\", HALF_SPACE));\r\n    html = html.replace(/\\s*\\+\\s*/g, frame(\"+\", SPACE));\r\n    html = html.replace(/\\s*-\\s*/g, frame(\"-\", SPACE));\r\n    html = html.replace(/\\s*=\\s*/g, frame(\"=\", SPACE));\r\n    html = html.replace(/\\s*n\\s*\\+\\s*1\\s*/g, \"n\" + frame(\"+\", HALF_SPACE) + \"1\");\r\n    html = html.replace(/\\n/g, \"<br/>\");\r\n    html = html.replace(/_{([^}]*)}/g, (str, $1) => frameNode($1, \"sub\"));\r\n    html = html.replace(/\\^{([^}]*)}/g, (str, $1) => frameNode($1, \"sup\"));\r\n\r\n    formulaElt.innerHTML = html;\r\n}\r\n\r\nfunction setParameters(parameters: string[]) {\r\n    parametersElt.innerHTML = parameters.join(\"<br/>\");\r\n}\r\n\r\nfunction drawToCanvas(ctx: CanvasRenderingContext2D) {\r\n    function setFontSize(sizeInPx: number) {\r\n        ctx.font = sizeInPx + \"px \" + FONT_NAME;\r\n    }\r\n\r\n    function drawBackground(x: number, y: number, width: number, height: number) {\r\n        const previousFillStyle = ctx.fillStyle;\r\n        ctx.fillStyle = \"black\";\r\n        ctx.fillRect(x, y, width, height);\r\n        ctx.fillStyle = previousFillStyle;\r\n    }\r\n\r\n    drawBackground(BLOCK_MARGIN, BLOCK_MARGIN, titleElt.clientWidth, titleElt.clientHeight);\r\n    ctx.fillStyle = \"white\";\r\n    ctx.textAlign = \"left\";\r\n    ctx.textBaseline = \"top\";\r\n\r\n    const blockLeft = BLOCK_MARGIN + BLOCK_PADDING;\r\n    let top = BLOCK_MARGIN + BLOCK_PADDING;\r\n\r\n    let fontSize = TITLE_FONT_SIZE;\r\n    setFontSize(fontSize);\r\n    ctx.fillText(titleElt.textContent, blockLeft, top);\r\n    top += 2 * FONT_SIZE;\r\n\r\n    fontSize = FONT_SIZE;\r\n    setFontSize(fontSize);\r\n\r\n    drawBackground(BLOCK_MARGIN, top - BLOCK_PADDING, formulaElt.clientWidth, formulaElt.clientHeight);\r\n\r\n    /* HTML tags cannot be used when drawing text on a canvas,\r\n     * so we need to handle manually tags such as br and sub. */\r\n    formulaElt.innerHTML.split(/\\s*<br\\/?>\\s*/g).forEach((str) => {\r\n        let dLeft = 0;\r\n        let currIndex = 0;\r\n\r\n        function writeText(text: string) {\r\n            ctx.fillText(text, blockLeft + dLeft, top);\r\n            dLeft += ctx.measureText(text).width;\r\n        }\r\n\r\n        function findNext(nodeName: string) {\r\n            const i = str.indexOf(nodeName, currIndex);\r\n            return (i < 0) ? str.length : i;\r\n        }\r\n\r\n        while (currIndex < str.length) {\r\n            let index = findNext(\"<sub>\");\r\n            writeText(str.substring(currIndex, index));\r\n            currIndex = index + 5; // 5 === \"<sub>\".length\r\n\r\n            index = findNext(\"</sub>\");\r\n            top += .4 * fontSize;\r\n            setFontSize(SUB_FONT_SIZE);\r\n            writeText(str.substring(currIndex, index));\r\n            top -= .4 * fontSize;\r\n            currIndex = index + 6; // 6 === \"</sub>\".length\r\n\r\n            setFontSize(fontSize);\r\n        }\r\n        top += 1.25 * fontSize;\r\n    });\r\n\r\n    top += 1 * FONT_SIZE;\r\n\r\n    drawBackground(BLOCK_MARGIN, top - BLOCK_PADDING, parametersElt.clientWidth, parametersElt.clientHeight);\r\n\r\n    parametersElt.innerHTML.split(/\\s*<br\\/?>\\s*/g).forEach((line) => {\r\n        ctx.fillText(line, blockLeft, top);\r\n        top += 1 * fontSize;\r\n    });\r\n}\r\n\r\nexport {\r\n    drawToCanvas,\r\n    setFormula,\r\n    setParameters,\r\n    setTitle,\r\n    setVisibility,\r\n};\r\n","abstract class GLResource {\r\n    private _gl: WebGLRenderingContext;\r\n\r\n    constructor(gl: WebGLRenderingContext) {\r\n        this._gl = gl;\r\n    }\r\n\r\n    public gl(): WebGLRenderingContext {\r\n        return this._gl;\r\n    }\r\n\r\n    public abstract freeGLResources(): void;\r\n}\r\n\r\nexport default GLResource;\r\n","import * as GLCanvas from \"./gl-utils/gl-canvas\";\r\nimport { gl } from \"./gl-utils/gl-canvas\";\r\nimport Viewport from \"./gl-utils/viewport\";\r\n\r\nimport Attractor from \"./attractors/attractor\";\r\nimport BedHeadAttractor from \"./attractors/bedhead\";\r\nimport CliffordAttractor from \"./attractors/clifford\";\r\nimport DeJongAttractor from \"./attractors/de-jong\";\r\nimport FractalDreamAttractor from \"./attractors/fractal-dream\";\r\nimport * as Infos from \"./infos\";\r\nimport { attractorNames, ControlsID, Parameters } from \"./parameters\";\r\n\r\ndeclare const Canvas: any;\r\ndeclare const FileControl: any;\r\ndeclare const Tabs: any;\r\n\r\nfunction main() {\r\n    initGL();\r\n\r\n    let needToAdjustCanvas = true;\r\n    Canvas.Observers.canvasResize.push(() => needToAdjustCanvas = true);\r\n    Parameters.clearObservers.push(() => needToAdjustCanvas = true);\r\n\r\n    Parameters.attractor = attractorNames.DeJong;\r\n\r\n    const attractors = {};\r\n    attractors[attractorNames.Bedhead] = new BedHeadAttractor();\r\n    attractors[attractorNames.Clifford] = new CliffordAttractor();\r\n    attractors[attractorNames.DeJong] = new DeJongAttractor();\r\n    attractors[attractorNames.FractalDream] = new FractalDreamAttractor();\r\n\r\n    let totalPoints: number;\r\n    function setTotalPoints(total: number): void {\r\n        totalPoints = total;\r\n        Canvas.setIndicatorText(\"points-drawn\", totalPoints.toLocaleString());\r\n    }\r\n    setTotalPoints(0);\r\n\r\n    const STEP_SIZE = Math.pow(2, 16);\r\n    let attractor: Attractor;\r\n    function mainLoop() {\r\n        if (needToAdjustCanvas) {\r\n            needToAdjustCanvas = false;\r\n            setTotalPoints(0);\r\n\r\n            GLCanvas.adjustSize();\r\n            Viewport.setFullCanvas(gl);\r\n            gl.clear(gl.COLOR_BUFFER_BIT);\r\n\r\n            attractor = attractors[Parameters.attractor];\r\n            attractor.reset();\r\n        }\r\n\r\n        console.log(Parameters.nbPointsNeeded);\r\n        if (totalPoints < Parameters.nbPointsNeeded) {\r\n            if (attractor.drawXPoints(STEP_SIZE)) {\r\n                setTotalPoints(totalPoints + STEP_SIZE);\r\n            }\r\n        }\r\n\r\n        requestAnimationFrame(mainLoop);\r\n    }\r\n\r\n    function initGL() {\r\n        const glParams = {\r\n            alpha: false,\r\n            depth: false,\r\n            preserveDrawingBuffer: true,\r\n        };\r\n        if (!GLCanvas.initGL(glParams)) {\r\n            return;\r\n        }\r\n\r\n        gl.enable(gl.BLEND);\r\n        gl.clearColor(0, 0, 0, 1);\r\n        gl.blendEquation(gl.FUNC_ADD);\r\n        gl.blendFunc(gl.ONE, gl.ONE);\r\n    }\r\n\r\n    FileControl.addDownloadObserver(ControlsID.DOWNLOAD, () => {\r\n        const figureSize = +Tabs.getValues(ControlsID.DOWNLOAD_SIZE)[0];\r\n\r\n        const nbPointsNeeded = Parameters.computeNbPointsNeeded([figureSize, figureSize]);\r\n\r\n        const canvas2D = document.createElement(\"canvas\");\r\n        const ctx2D = canvas2D.getContext(\"2d\");\r\n\r\n        canvas2D.width = figureSize + 400;\r\n        canvas2D.height = figureSize;\r\n\r\n        const canvasGL = Canvas.getCanvas();\r\n        function isolateCanvasGL() {\r\n            Canvas.showLoader(true);\r\n\r\n            canvasGL.style.position = \"absolute\";\r\n            canvasGL.style.width = figureSize + \"px\";\r\n            canvasGL.style.height = figureSize + \"px\";\r\n            canvasGL.width = figureSize;\r\n            canvasGL.height = figureSize;\r\n\r\n            GLCanvas.adjustSize();\r\n            Viewport.setFullCanvas(gl);\r\n            gl.clear(gl.COLOR_BUFFER_BIT);\r\n        }\r\n\r\n        function restoreCanvasGL() {\r\n            canvasGL.style.position = \"\";\r\n            canvasGL.style.width = \"\";\r\n            canvasGL.style.height = \"\";\r\n            Canvas.showLoader(false);\r\n            Canvas.setLoaderText(\"\");\r\n            needToAdjustCanvas = true;\r\n        }\r\n\r\n        isolateCanvasGL();\r\n\r\n        let nbPoints = 0;\r\n        const stepSize = Math.pow(2, 18);\r\n        while (nbPoints < nbPointsNeeded) {\r\n            nbPoints += stepSize;\r\n            attractor.drawXPoints(stepSize);\r\n        }\r\n\r\n        ctx2D.fillStyle = \"black\";\r\n        ctx2D.fillRect(0, 0, canvas2D.width, canvas2D.height);\r\n        ctx2D.drawImage(gl.canvas, 0.5 * (canvas2D.width - figureSize), 0, figureSize, figureSize);\r\n        restoreCanvasGL();\r\n        Infos.drawToCanvas(ctx2D);\r\n\r\n        if ((canvas2D as any).msToBlob) { // for IE\r\n            const blob = (canvas2D as any).msToBlob();\r\n            window.navigator.msSaveBlob(blob, \"image.png\");\r\n        } else {\r\n            canvas2D.toBlob((blob) => {\r\n                const link = document.createElement(\"a\");\r\n                link.download = \"image.png\";\r\n                link.href = URL.createObjectURL(blob);\r\n                link.click();\r\n            });\r\n        }\r\n    });\r\n\r\n    requestAnimationFrame(mainLoop);\r\n}\r\n\r\nmain();\r\n","class Viewport {\r\n    public static setFullCanvas(gl: WebGLRenderingContext): void {\r\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\r\n    }\r\n\r\n    public lower: number;\r\n    public left: number;\r\n    public width: number;\r\n    public height: number;\r\n\r\n    constructor(left: number, lower: number, width: number, height: number) {\r\n        this.left = left;\r\n        this.lower = lower;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n\r\n    public set(gl: WebGLRenderingContext): void {\r\n        gl.viewport(this.lower, this.left, this.width, this.height);\r\n    }\r\n}\r\n\r\nexport default Viewport;\r\n","import { ControlsID, Parameters } from \"../parameters\";\r\nimport Attractor from \"./attractor\";\r\n\r\ndeclare const Controls: any;\r\n\r\nclass BeadheadAttractor extends Attractor {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    public get name(): string {\r\n        return \"Bedhead\";\r\n    }\r\n\r\n    public get formula(): string {\r\n        return `x_{n+1} = sin(x_{n}*y_{n}/b) + cos(a*x_{n} - y_{n})\r\n        y_{n+1} = x_{n} + sin(y_{n})/b`;\r\n    }\r\n\r\n    public get parameters(): string[] {\r\n        return [\r\n            \"a = \" + Parameters.a,\r\n            \"b = \" + Parameters.b,\r\n        ];\r\n    }\r\n\r\n    public toggleParametersVisibility(): void {\r\n        Controls.setVisibility(ControlsID.A, true);\r\n        Controls.setVisibility(ControlsID.B, true);\r\n        Controls.setVisibility(ControlsID.C, false);\r\n        Controls.setVisibility(ControlsID.D, false);\r\n    }\r\n\r\n    protected computeXPoints(nbPoints: number): Float32Array {\r\n        const data = new Float32Array(2 * nbPoints);\r\n\r\n        const a = Parameters.a;\r\n        const b = Parameters.b;\r\n\r\n        this.x = Math.random() * 2 - 1;\r\n        this.y = Math.random() * 2 - 1;\r\n\r\n        const computeNextPoint = (i: number) => {\r\n            data[2 * i + 0] = Math.sin(this.x * this.y / b) + Math.cos(a * this.x - this.y);\r\n            data[2 * i + 1] = this.x + Math.sin(this.y) / b;\r\n\r\n            this.x = data[2 * i + 0];\r\n            this.y = data[2 * i + 1];\r\n        };\r\n\r\n        this.fillData(nbPoints, computeNextPoint);\r\n\r\n        return data;\r\n    }\r\n}\r\n\r\nexport default BeadheadAttractor;\r\n","import { gl } from \"./gl-canvas\";\r\nimport Shader from \"./shader\";\r\nimport * as ShaderSources from \"./shader-sources\";\r\n\r\ntype RegisterCallback = (success: boolean, shader: Shader | null) => void;\r\n\r\ninterface IShaderInfos {\r\n    fragmentFilename: string;\r\n    vertexFilename: string;\r\n    injected: { [id: string]: string };\r\n}\r\n\r\ninterface ICachedShader {\r\n    shader: Shader;\r\n    infos: IShaderInfos;\r\n    pending: boolean;\r\n    failed: boolean;\r\n    callbacks: RegisterCallback[];\r\n}\r\n\r\nconst cachedShaders: { [id: string]: ICachedShader} = {};\r\n\r\nfunction getShader(name: string): Shader | null {\r\n    return cachedShaders[name].shader;\r\n}\r\n\r\ntype BuildCallback = (builtShader: Shader | null) => void;\r\n\r\nfunction buildShader(infos: IShaderInfos, callback: BuildCallback) {\r\n    let sourcesPending = 2;\r\n    let sourcesFailed = 0;\r\n\r\n    function loadedSource(success: boolean) {\r\n        function processSource(source: string): string {\r\n            return source.replace(/#INJECT\\((.*)\\)/mg, (match, name) => {\r\n                if (infos.injected[name]) {\r\n                    return infos.injected[name];\r\n                }\r\n                return match;\r\n            });\r\n        }\r\n\r\n        sourcesPending--;\r\n        if (!success) {\r\n            sourcesFailed++;\r\n        }\r\n\r\n        if (sourcesPending === 0) {\r\n            let shader = null;\r\n\r\n            if (sourcesFailed === 0) {\r\n                const vert = ShaderSources.getSource(infos.vertexFilename);\r\n                const frag = ShaderSources.getSource(infos.fragmentFilename);\r\n\r\n                const processedVert = processSource(vert);\r\n                const processedFrag = processSource(frag);\r\n\r\n                shader = new Shader(gl, processedVert, processedFrag);\r\n            }\r\n\r\n            callback(shader);\r\n        }\r\n    }\r\n\r\n    ShaderSources.loadSource(infos.vertexFilename, loadedSource);\r\n    ShaderSources.loadSource(infos.fragmentFilename, loadedSource);\r\n}\r\n\r\nfunction registerShader(name: string, infos: IShaderInfos, callback: RegisterCallback): void {\r\n    function callAndClearCallbacks(cached: ICachedShader) {\r\n        for (const cachedCallback of cached.callbacks) {\r\n            cachedCallback(!cached.failed, cached.shader);\r\n        }\r\n\r\n        cached.callbacks = [];\r\n    }\r\n\r\n    if (typeof cachedShaders[name] === \"undefined\") {\r\n        cachedShaders[name] = {\r\n            callbacks: [callback],\r\n            failed: false,\r\n            infos,\r\n            pending: true,\r\n            shader: null,\r\n        };\r\n        const cached = cachedShaders[name];\r\n\r\n        buildShader(infos, (builtShader) => {\r\n            cached.pending = false;\r\n            cached.failed = builtShader === null;\r\n            cached.shader = builtShader;\r\n\r\n            callAndClearCallbacks(cached);\r\n        });\r\n    } else {\r\n        const cached = cachedShaders[name];\r\n\r\n        if (cached.pending === true) {\r\n            cached.callbacks.push(callback);\r\n        } else {\r\n            callAndClearCallbacks(cached);\r\n        }\r\n    }\r\n}\r\n\r\nfunction deleteShader(name: string) {\r\n    if (cachedShaders[name]) {\r\n        if (cachedShaders[name].shader) {\r\n            cachedShaders[name].shader.freeGLResources();\r\n        }\r\n        delete cachedShaders[name];\r\n    }\r\n}\r\n\r\nexport {\r\n    buildShader,\r\n    getShader,\r\n    IShaderInfos,\r\n    registerShader,\r\n    deleteShader,\r\n};\r\n","import GLResource from \"./gl-resource\";\r\nimport VBO from \"./vbo\";\r\n\r\nfunction notImplemented(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    alert(\"NOT IMPLEMENTED YET\");\r\n}\r\n\r\nfunction bindUniformFloat(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number | number[]): void;\r\nfunction bindUniformFloat(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    if (Array.isArray(value)) {\r\n        gl.uniform1fv(location, value);\r\n    } else {\r\n        gl.uniform1f(location, value);\r\n    }\r\n}\r\n\r\nfunction bindUniformFloat2v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform2fv(location, value);\r\n}\r\n\r\nfunction bindUniformFloat3v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform3fv(location, value);\r\n}\r\n\r\nfunction bindUniformFloat4v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform4fv(location, value);\r\n}\r\n\r\nfunction bindUniformInt(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number | number[]): void;\r\nfunction bindUniformInt(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    if (Array.isArray(value)) {\r\n        gl.uniform1iv(location, value);\r\n    } else {\r\n        gl.uniform1iv(location, value);\r\n    }\r\n}\r\n\r\nfunction bindUniformInt2v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform2iv(location, value);\r\n}\r\n\r\nfunction bindUniformInt3v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform3iv(location, value);\r\n}\r\n\r\nfunction bindUniformInt4v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform4iv(location, value);\r\n}\r\n\r\nfunction bindUniformBool(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: boolean | number): void {\r\n    gl.uniform1i(location, +value);\r\n}\r\n\r\nfunction bindUniformBool2v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value): void {\r\n    gl.uniform2iv(location, value);\r\n}\r\n\r\nfunction bindUniformBool3v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value): void {\r\n    gl.uniform3iv(location, value);\r\n}\r\n\r\nfunction bindUniformBool4v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value): void {\r\n    gl.uniform4iv(location, value);\r\n}\r\n\r\nfunction bindUniformFloatMat2(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniformMatrix2fv(location, false, value);\r\n}\r\n\r\nfunction bindUniformFloatMat3(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniformMatrix3fv(location, false, value);\r\n}\r\n\r\nfunction bindUniformFloatMat4(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniformMatrix4fv(location, false, value);\r\n}\r\n\r\nfunction bindSampler2D(gl: WebGLRenderingContext, location: WebGLUniformLocation, unitNb: number,\r\n                       value: WebGLTexture): void {\r\n    gl.uniform1i(location, unitNb);\r\n    gl.activeTexture(gl[\"TEXTURE\" + unitNb]);\r\n    gl.bindTexture(gl.TEXTURE_2D, value);\r\n}\r\n\r\nfunction bindSamplerCube(gl: WebGLRenderingContext, location: WebGLUniformLocation, unitNb: number,\r\n                         value: WebGLTexture): void {\r\n    gl.uniform1i(location, unitNb);\r\n    gl.activeTexture(gl[\"TEXTURE\" + unitNb]);\r\n    gl.bindTexture(gl.TEXTURE_CUBE_MAP, value);\r\n}\r\n\r\n/* From WebGL spec:\r\n* http://www.khronos.org/registry/webgl/specs/latest/1.0/#5.14 */\r\nconst types = {\r\n    0x8B50: { str: \"FLOAT_VEC2\", binder: bindUniformFloat2v },\r\n    0x8B51: { str: \"FLOAT_VEC3\", binder: bindUniformFloat3v },\r\n    0x8B52: { str: \"FLOAT_VEC4\", binder: bindUniformFloat4v },\r\n    0x8B53: { str: \"INT_VEC2\", binder: bindUniformInt2v },\r\n    0x8B54: { str: \"INT_VEC3\", binder: bindUniformInt3v },\r\n    0x8B55: { str: \"INT_VEC4\", binder: bindUniformInt4v },\r\n    0x8B56: { str: \"BOOL\", binder: bindUniformBool },\r\n    0x8B57: { str: \"BOOL_VEC2\", binder: bindUniformBool2v },\r\n    0x8B58: { str: \"BOOL_VEC3\", binder: bindUniformBool3v },\r\n    0x8B59: { str: \"BOOL_VEC4\", binder: bindUniformBool4v },\r\n    0x8B5A: { str: \"FLOAT_MAT2\", binder: bindUniformFloatMat2 },\r\n    0x8B5B: { str: \"FLOAT_MAT3\", binder: bindUniformFloatMat3 },\r\n    0x8B5C: { str: \"FLOAT_MAT4\", binder: bindUniformFloatMat4 },\r\n    0x8B5E: { str: \"SAMPLER_2D\", binder: bindSampler2D },\r\n    0x8B60: { str: \"SAMPLER_CUBE\", binder: bindSamplerCube },\r\n    0x1400: { str: \"BYTE\", binder: notImplemented },\r\n    0x1401: { str: \"UNSIGNED_BYTE\", binder: notImplemented },\r\n    0x1402: { str: \"SHORT\", binder: notImplemented },\r\n    0x1403: { str: \"UNSIGNED_SHORT\", binder: notImplemented },\r\n    0x1404: { str: \"INT\", binder: bindUniformInt },\r\n    0x1405: { str: \"UNSIGNED_INT\", binder: notImplemented },\r\n    0x1406: { str: \"FLOAT\", binder: bindUniformFloat },\r\n};\r\n\r\ninterface IShaderUniform {\r\n    value: boolean | boolean[] | number | number[] | WebGLTexture | WebGLTexture[];\r\n    loc: WebGLUniformLocation;\r\n    size: number;\r\n    type: number;\r\n}\r\n\r\ninterface IShaderAttribute {\r\n    VBO: VBO;\r\n    loc: GLint;\r\n    size: number;\r\n    type: number;\r\n}\r\n\r\nclass ShaderProgram extends GLResource {\r\n    public u: IShaderUniform[];\r\n    public a: IShaderAttribute[];\r\n\r\n    private id: WebGLProgram;\r\n    private uCount: number;\r\n    private aCount: number;\r\n\r\n    constructor(gl: WebGLRenderingContext, vertexSource: string, fragmentSource: string) {\r\n        function createShader(type: GLenum, source: string): WebGLShader {\r\n            const shader = gl.createShader(type);\r\n            gl.shaderSource(shader, source);\r\n            gl.compileShader(shader);\r\n\r\n            const compileSuccess = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n            if (!compileSuccess) {\r\n                console.error(gl.getShaderInfoLog(shader));\r\n                gl.deleteShader(shader);\r\n                return null;\r\n            }\r\n\r\n            return shader;\r\n        }\r\n\r\n        super(gl);\r\n\r\n        this.id = null;\r\n        this.uCount = 0;\r\n        this.aCount = 0;\r\n\r\n        const vertexShader = createShader(gl.VERTEX_SHADER, vertexSource);\r\n        const fragmentShader = createShader(gl.FRAGMENT_SHADER, fragmentSource);\r\n\r\n        const id = gl.createProgram();\r\n        gl.attachShader(id, vertexShader);\r\n        gl.attachShader(id, fragmentShader);\r\n        gl.linkProgram(id);\r\n\r\n        const linkSuccess = gl.getProgramParameter(id, gl.LINK_STATUS);\r\n        if (!linkSuccess) {\r\n            console.error(gl.getProgramInfoLog(id));\r\n            gl.deleteProgram(id);\r\n        } else {\r\n            this.id = id;\r\n\r\n            this.introspection();\r\n        }\r\n    }\r\n\r\n    public freeGLResources(): void {\r\n        super.gl().deleteProgram(this.id);\r\n        this.id = null;\r\n    }\r\n\r\n    public use(): void {\r\n        super.gl().useProgram(this.id);\r\n    }\r\n\r\n    public bindUniforms(): void {\r\n        const gl: WebGLRenderingContext = super.gl();\r\n        let currTextureUnitNb: number = 0;\r\n\r\n        Object.keys(this.u).forEach((uName) => {\r\n            const uniform = this.u[uName];\r\n            if (uniform.value !== null) {\r\n                if (uniform.type === 0x8B5E || uniform.type === 0x8B60) {\r\n                    const unitNb: number = currTextureUnitNb;\r\n                    types[uniform.type].binder(gl, uniform.loc, unitNb, uniform.value);\r\n                    currTextureUnitNb++;\r\n                } else {\r\n                    types[uniform.type].binder(gl, uniform.loc, uniform.value);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public bindAttributes(): void {\r\n        Object.keys(this.a).forEach((aName) => {\r\n            const attribute = this.a[aName];\r\n            if (attribute.VBO !== null) {\r\n                attribute.VBO.bind(attribute.loc);\r\n            }\r\n        });\r\n    }\r\n\r\n    public bindUniformsAndAttributes(): void {\r\n        this.bindUniforms();\r\n        this.bindAttributes();\r\n    }\r\n\r\n    private introspection(): void {\r\n        const gl = super.gl();\r\n\r\n        this.uCount = gl.getProgramParameter(this.id, gl.ACTIVE_UNIFORMS);\r\n        this.u = [];\r\n        for (let i = 0; i < this.uCount; ++i) {\r\n            const uniform = gl.getActiveUniform(this.id, i);\r\n            const name = uniform.name;\r\n\r\n            this.u[name] = {\r\n                loc: gl.getUniformLocation(this.id, name),\r\n                size: uniform.size,\r\n                type: uniform.type,\r\n                value: null,\r\n            };\r\n        }\r\n\r\n        this.aCount = gl.getProgramParameter(this.id, gl.ACTIVE_ATTRIBUTES);\r\n        this.a = [];\r\n        for (let i = 0; i < this.aCount; ++i) {\r\n            const attribute = gl.getActiveAttrib(this.id, i);\r\n            const name = attribute.name;\r\n\r\n            this.a[name] = {\r\n                VBO: null,\r\n                loc: gl.getAttribLocation(this.id, name),\r\n                size: attribute.size,\r\n                type: attribute.type,\r\n            };\r\n        }\r\n    }\r\n}\r\n\r\nexport default ShaderProgram;\r\n","type LoadCallback = (success: boolean)  => void;\r\n\r\ninterface ICachedSource {\r\n    text: string;\r\n    pending: boolean;\r\n    failed: boolean;\r\n    callbacks: LoadCallback[];\r\n}\r\n\r\nconst cachedSources: { [id: string]: ICachedSource } = {};\r\n\r\n/* Fetches asynchronously the shader source from server and stores it in cache. */\r\nfunction loadSource(filename: string, callback: LoadCallback) {\r\n    function callAndClearCallbacks(cached: ICachedSource) {\r\n        for (const cachedCallback of cached.callbacks) {\r\n            cachedCallback(!cached.failed);\r\n        }\r\n\r\n        cached.callbacks = [];\r\n    }\r\n\r\n    if (typeof cachedSources[filename] === \"undefined\") {\r\n        cachedSources[filename] = {\r\n            callbacks: [callback],\r\n            failed: false,\r\n            pending: true,\r\n            text: null,\r\n        };\r\n        const cached = cachedSources[filename];\r\n\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open(\"GET\", \"./shaders/\" + filename, true);\r\n        xhr.onload = () => {\r\n            if (xhr.readyState === 4) {\r\n                cached.pending = false;\r\n\r\n                if (xhr.status === 200) {\r\n                    cached.text = xhr.responseText;\r\n                    cached.failed = false;\r\n                } else {\r\n                    console.error(\"Cannot load '\" + filename + \"' shader source: \" + xhr.statusText);\r\n                    cached.failed = true;\r\n                }\r\n\r\n                callAndClearCallbacks(cached);\r\n            }\r\n        };\r\n        xhr.onerror = () => {\r\n            console.error(\"Cannot load '\" + filename + \"' shader source: \" + xhr.statusText);\r\n            cached.pending = false;\r\n            cached.failed = true;\r\n            callAndClearCallbacks(cached);\r\n        };\r\n\r\n        xhr.send(null);\r\n    } else {\r\n        const cached = cachedSources[filename];\r\n\r\n        if (cached.pending === true) {\r\n            cached.callbacks.push(callback);\r\n        } else {\r\n            cached.callbacks = [callback];\r\n            callAndClearCallbacks(cached);\r\n        }\r\n    }\r\n}\r\n\r\nfunction getSource(filename: string): string {\r\n    return cachedSources[filename].text;\r\n}\r\n\r\nexport {\r\n    getSource,\r\n    loadSource,\r\n};\r\n","import GLResource from \"./gl-resource\";\r\n\r\nenum Usage {\r\n    DYNAMIC,\r\n    STATIC,\r\n}\r\n\r\nclass VBO extends GLResource {\r\n    public static createQuad(gl: WebGLRenderingContext, minX: number, minY: number, maxX: number, maxY: number): VBO {\r\n        const vert = [\r\n            minX, minY,\r\n            maxX, minY,\r\n            minX, maxY,\r\n            maxX, maxY,\r\n        ];\r\n\r\n        return new VBO(gl, new Float32Array(vert), 2, gl.FLOAT, true);\r\n    }\r\n\r\n    private id: WebGLBuffer;\r\n    private size: number;\r\n    private type: GLenum;\r\n    private normalize: GLboolean;\r\n    private stride: GLsizei;\r\n    private offset: GLintptr;\r\n    private usage: Usage;\r\n\r\n    constructor(gl: WebGLRenderingContext, array: any, size: number, type: GLenum, staticUsage: boolean = true) {\r\n        super(gl);\r\n\r\n        this.id = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.id);\r\n        if (staticUsage) {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.STATIC_DRAW);\r\n        } else {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.DYNAMIC_DRAW);\r\n        }\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n\r\n        this.size = size;\r\n        this.type = type;\r\n        this.normalize = false;\r\n        this.stride = 0;\r\n        this.offset = 0;\r\n        this.usage = (staticUsage) ? Usage.STATIC : Usage.DYNAMIC;\r\n    }\r\n\r\n    public freeGLResources(): void {\r\n        this.gl().deleteBuffer(this.id);\r\n        this.id = null;\r\n    }\r\n\r\n    public bind(location: GLuint): void {\r\n        const gl = super.gl();\r\n        gl.enableVertexAttribArray(location);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.id);\r\n        gl.vertexAttribPointer(location, this.size, this.type, this.normalize, this.stride, this.offset);\r\n    }\r\n\r\n    public setData(array: any): void {\r\n        const gl = super.gl();\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.id);\r\n        if (this.usage === Usage.STATIC) {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.STATIC_DRAW);\r\n        } else {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.DYNAMIC_DRAW);\r\n        }\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n    }\r\n}\r\n\r\nexport default VBO;\r\n","class Boundaries {\r\n    public minX: number;\r\n    public maxX: number;\r\n    public minY: number;\r\n    public maxY: number;\r\n\r\n    public constructor() {\r\n        this.minX = 0;\r\n        this.maxX = 0;\r\n        this.minY = 0;\r\n        this.maxY = 0;\r\n    }\r\n\r\n    public get center(): number[] {\r\n        return [\r\n            0.5 * (this.maxX + this.minX),\r\n            0.5 * (this.maxY + this.minY),\r\n        ];\r\n    }\r\n\r\n    public get maxDimension(): number {\r\n        return Math.max(this.maxX - this.minX, this.maxY - this.minY);\r\n    }\r\n\r\n    public includePoint(x: number, y: number) {\r\n        this.minX = Math.min(this.minX, x);\r\n        this.minY = Math.min(this.minY, y);\r\n\r\n        this.maxX = Math.max(this.maxX, x);\r\n        this.maxY = Math.max(this.maxY, y);\r\n    }\r\n}\r\n\r\nexport default Boundaries;\r\n","import { ControlsID, Parameters } from \"../parameters\";\r\nimport Attractor from \"./attractor\";\r\n\r\ndeclare const Controls: any;\r\n\r\nclass CliffordAttractor extends Attractor {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    public get name(): string {\r\n        return \"Clifford\";\r\n    }\r\n\r\n    public get formula(): string {\r\n        return `x_{n+1} = sin(a*y_{n}) + c*cos(a*x_{n})\r\n        y_{n+1} = sin(c*x_{n}) + d*cos(b*y_{n})`;\r\n    }\r\n\r\n    public get parameters(): string[] {\r\n        return [\r\n            \"a = \" + Parameters.a,\r\n            \"b = \" + Parameters.b,\r\n            \"c = \" + Parameters.c,\r\n            \"d = \" + Parameters.d,\r\n        ];\r\n    }\r\n\r\n    public toggleParametersVisibility(): void {\r\n        Controls.setVisibility(ControlsID.A, true);\r\n        Controls.setVisibility(ControlsID.B, true);\r\n        Controls.setVisibility(ControlsID.C, true);\r\n        Controls.setVisibility(ControlsID.D, true);\r\n    }\r\n\r\n    protected computeXPoints(nbPoints: number): Float32Array {\r\n        const data = new Float32Array(2 * nbPoints);\r\n\r\n        const a = Parameters.a;\r\n        const b = Parameters.b;\r\n        const c = Parameters.c;\r\n        const d = Parameters.d;\r\n\r\n        this.x = Math.random() * 2 - 1;\r\n        this.y = Math.random() * 2 - 1;\r\n\r\n        const computeNextPoint = (i: number) => {\r\n            data[2 * i + 0] = Math.sin(a * this.y) + c * Math.cos(a * this.x);\r\n            data[2 * i + 1] = Math.sin(c * this.x) + d * Math.cos(b * this.y);\r\n\r\n            this.x = data[2 * i + 0];\r\n            this.y = data[2 * i + 1];\r\n        };\r\n\r\n        this.fillData(nbPoints, computeNextPoint);\r\n\r\n        return data;\r\n    }\r\n}\r\n\r\nexport default CliffordAttractor;\r\n","import { ControlsID, Parameters } from \"../parameters\";\r\nimport Attractor from \"./attractor\";\r\n\r\ndeclare const Controls: any;\r\n\r\nclass DeJongAttractor extends Attractor {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    public get name(): string {\r\n        return \"De Jong\";\r\n    }\r\n\r\n    public get formula(): string {\r\n        return `x_{n+1} = sin(a*y_{n}) - cos(b*x_{n})\r\n        y_{n+1} = sin(c*x_{n}) - cos(d*y_{n})`;\r\n    }\r\n\r\n    public get parameters(): string[] {\r\n        return [\r\n            \"a = \" + Parameters.a,\r\n            \"b = \" + Parameters.b,\r\n            \"c = \" + Parameters.c,\r\n            \"d = \" + Parameters.d,\r\n        ];\r\n    }\r\n\r\n    public toggleParametersVisibility(): void {\r\n        Controls.setVisibility(ControlsID.A, true);\r\n        Controls.setVisibility(ControlsID.B, true);\r\n        Controls.setVisibility(ControlsID.C, true);\r\n        Controls.setVisibility(ControlsID.D, true);\r\n    }\r\n\r\n    protected computeXPoints(nbPoints: number): Float32Array {\r\n        const data = new Float32Array(2 * nbPoints);\r\n\r\n        const a = Parameters.a;\r\n        const b = Parameters.b;\r\n        const c = Parameters.c;\r\n        const d = Parameters.d;\r\n\r\n        this.x = Math.random() * 2 - 1;\r\n        this.y = Math.random() * 2 - 1;\r\n\r\n        const computeNextPoint = (i: number) => {\r\n            data[2 * i + 0] = Math.sin(a * this.y) - Math.cos(b * this.x);\r\n            data[2 * i + 1] = Math.sin(c * this.x) - Math.cos(d * this.y);\r\n\r\n            this.x = data[2 * i + 0];\r\n            this.y = data[2 * i + 1];\r\n        };\r\n\r\n        this.fillData(nbPoints, computeNextPoint);\r\n\r\n        return data;\r\n    }\r\n}\r\n\r\nexport default DeJongAttractor;\r\n","import { ControlsID, Parameters } from \"../parameters\";\r\nimport Attractor from \"./attractor\";\r\n\r\ndeclare const Controls: any;\r\n\r\nclass FractalDreamAttractor extends Attractor {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    public get name(): string {\r\n        return \"Fractal Dream\";\r\n    }\r\n\r\n    public get formula(): string {\r\n        return `x_{n+1} = sin(b*y_{n}) + c*sin(b*x_{n})\r\n        y_{n+1} = sin(a*x_{n}) + d*sin(a*y_{n})`;\r\n    }\r\n\r\n    public get parameters(): string[] {\r\n        return [\r\n            \"a = \" + Parameters.a,\r\n            \"b = \" + Parameters.b,\r\n            \"c = \" + Parameters.c,\r\n            \"d = \" + Parameters.d,\r\n        ];\r\n    }\r\n\r\n    public toggleParametersVisibility(): void {\r\n        Controls.setVisibility(ControlsID.A, true);\r\n        Controls.setVisibility(ControlsID.B, true);\r\n        Controls.setVisibility(ControlsID.C, true);\r\n        Controls.setVisibility(ControlsID.D, true);\r\n    }\r\n\r\n    protected computeXPoints(nbPoints: number): Float32Array {\r\n        const data = new Float32Array(2 * nbPoints);\r\n\r\n        const a = Parameters.a;\r\n        const b = Parameters.b;\r\n        const c = Parameters.c;\r\n        const d = Parameters.d;\r\n\r\n        this.x = Math.random() * 2 - 1;\r\n        this.y = Math.random() * 2 - 1;\r\n\r\n        const computeNextPoint = (i: number) => {\r\n            data[2 * i + 0] = Math.sin(b * this.y) + c * Math.sin(b * this.x);\r\n            data[2 * i + 1] = Math.sin(a * this.x) + d * Math.sin(a * this.y);\r\n\r\n            this.x = data[2 * i + 0];\r\n            this.y = data[2 * i + 1];\r\n        };\r\n\r\n        this.fillData(nbPoints, computeNextPoint);\r\n\r\n        return data;\r\n    }\r\n}\r\n\r\nexport default FractalDreamAttractor;\r\n"],"sourceRoot":""}