{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/ts/gl-utils/gl-canvas.ts","webpack:///./src/ts/parameters.ts","webpack:///./src/ts/attractors/attractor.ts","webpack:///./src/ts/infos.ts","webpack:///./src/ts/gl-utils/gl-resource.ts","webpack:///./src/ts/gl-utils/viewport.ts","webpack:///./src/ts/compositing/compositing.ts","webpack:///./src/ts/main.ts","webpack:///./src/ts/attractors/bedhead.ts","webpack:///./src/ts/gl-utils/shader-manager.ts","webpack:///./src/ts/gl-utils/shader.ts","webpack:///./src/ts/gl-utils/shader-sources.ts","webpack:///./src/ts/gl-utils/vbo.ts","webpack:///./src/ts/attractors/boundaries.ts","webpack:///./src/ts/attractors/clifford.ts","webpack:///./src/ts/attractors/de-jong.ts","webpack:///./src/ts/attractors/fractal-dream.ts","webpack:///./src/ts/compositing/compositing-dark.ts","webpack:///./src/ts/compositing/compositing-light.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","gl","initGL","flags","setError","message","Demopage","setErrorMessage","canvas","Canvas","getCanvas","getContext","disable","CULL_FACE","DEPTH_TEST","BLEND","clearColor","adjustSize","hidpi","cssPixel","window","devicePixelRatio","width","Math","floor","clientWidth","height","clientHeight","Infos","__importStar","attractorNames","DeJong","Bedhead","Clifford","FractalDream","compositingNames","dark","light","controlId","ATTRACTOR","A","B","C","D","FORMULA","INDICATORS","INTENSITY","QUALITY","COMPOSITING","DOWNLOAD_SIZE","DOWNLOAD","callObservers","observersList","_i","observersList_1","length","observer","ControlsID","attractor","a","b","intensity","quality","compositing","nbPointsNeeded","observers","updateNbPointsNeeded","Parameters","computeNbPointsNeeded","getSize","att","Picker","setValue","canvasSize","minDimension","min","addObserver","Range","newvalue","getValue","Checkbox","checked","setVisibility","isChecked","needToClear","Tabs","newValue","getValues","setIndicatorsVisibility","Observers","canvasResize","push","gl_canvas_1","ShaderManager","vbo_1","__importDefault","parameters_1","boundaries_1","shader","pointsVBO","Attractor","buildShader","fragmentFilename","vertexFilename","injected","newShader","fillData","Float32Array","default","FLOAT","this","boundaries","drawXPoints","nbPoints","data","computeXPoints","setData","aspectRatio","VBO","q","u","center","maxDimension","max","use","bindUniformsAndAttributes","drawArrays","POINTS","reset","toggleParametersVisibility","setTitle","setFormula","formula","setParameters","parameters","computeNextPoint","includePoint","x","y","fontLink","colorsStylesheet","FONT_NAME","BLOCK_MARGIN","BLOCK_PADDING","TITLE_FONT_SIZE","FONT_SIZE","SUB_FONT_SIZE","fontColor","backgroundColor","document","createElement","href","replace","rel","head","appendChild","infosCss","infosStyle","setAttribute","styleSheet","cssText","createTextNode","infosColorsStyle","sheet","setColors","titleElt","className","formulaElt","parametersElt","infosBlockElt","newFontColor","newBackgroundColor","cssRules","deleteRule","insertRule","visible","style","display","parentElement","title","textContent","frame","op","f","frameNode","node","html","str","$1","innerHTML","join","drawToCanvas","ctx","setFontSize","sizeInPx","font","drawBackground","previousFillStyle","fillStyle","fillRect","textAlign","textBaseline","blockLeft","top","fontSize","fillText","split","forEach","dLeft","currIndex","writeText","text","measureText","findNext","nodeName","indexOf","index","substring","line","GLResource","_gl","Viewport","left","lower","setFullCanvas","viewport","drawingBufferWidth","drawingBufferHeight","set","CompositingBase","GLCanvas","bedhead_1","clifford_1","de_jong_1","fractal_dream_1","compositing_dark_1","compositing_light_1","alpha","depth","preserveDrawingBuffer","needToAdjustCanvas","clearObservers","attractors","totalPoints","compositings","setTotalPoints","total","setIndicatorText","toLocaleString","STEP_SIZE","pow","FileControl","addDownloadObserver","figureSize","canvas2D","ctx2D","canvasGL","showLoader","position","initialize","stepSize","bindTopLayer","compose","drawImage","setLoaderText","msToBlob","blob","navigator","msSaveBlob","toBlob","link","download","URL","createObjectURL","click","requestAnimationFrame","mainLoop","foregroundColor","main","BeadheadAttractor","_super","__extends","Controls","_this","random","sin","cos","shader_1","ShaderSources","cachedShaders","infos","callback","sourcesPending","sourcesFailed","loadedSource","success","processSource","source","match","vert","getSource","frag","processedVert","processedFrag","loadSource","getShader","registerShader","callAndClearCallbacks","cached","_a","callbacks","cachedCallback","failed","pending","cached_1","builtShader","deleteShader","freeGLResources","gl_resource_1","notImplemented","location","alert","types","35664","binder","uniform2fv","35665","uniform3fv","35666","uniform4fv","35667","uniform2iv","35668","uniform3iv","35669","uniform4iv","35670","uniform1i","35671","35672","35673","35674","uniformMatrix2fv","35675","uniformMatrix3fv","35676","uniformMatrix4fv","35678","unitNb","activeTexture","bindTexture","TEXTURE_2D","35680","TEXTURE_CUBE_MAP","5120","5121","5122","5123","5124","Array","isArray","uniform1iv","5125","5126","uniform1fv","uniform1f","ShaderProgram","vertexSource","fragmentSource","createShader","type","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","console","error","getShaderInfoLog","id","uCount","aCount","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","introspection","getProgramInfoLog","deleteProgram","useProgram","bindUniforms","currTextureUnitNb","keys","uName","uniform","loc","bindAttributes","aName","attribute","ACTIVE_UNIFORMS","getActiveUniform","name_1","getUniformLocation","size","ACTIVE_ATTRIBUTES","getActiveAttrib","name_2","getAttribLocation","cachedSources","filename","xhr_1","XMLHttpRequest","open","onload","readyState","status","responseText","statusText","onerror","send","Usage","array","staticUsage","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","DYNAMIC_DRAW","normalize","stride","offset","usage","STATIC","DYNAMIC","createQuad","minX","minY","maxX","maxY","deleteBuffer","enableVertexAttribArray","vertexAttribPointer","Boundaries","CliffordAttractor","DeJongAttractor","FractalDreamAttractor","viewport_1","CompositingDark","enable","blendFunc","ONE","blendEquation","FUNC_ADD","clear","COLOR_BUFFER_BIT","CompositingLight","FUNC_REVERSE_SUBTRACT"],"mappings":"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","file":"main.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","declare const Demopage: any;\r\ndeclare const Canvas: any;\r\n\r\nlet gl: WebGLRenderingContext = null;\r\n\r\n/** Initializes a WebGL context */\r\nfunction initGL(flags: any): boolean {\r\n    function setError(message: string) {\r\n        Demopage.setErrorMessage(\"webgl-support\", message);\r\n    }\r\n\r\n    const canvas = Canvas.getCanvas();\r\n\r\n    gl = canvas.getContext(\"webgl\", flags) as WebGLRenderingContext;\r\n    if (gl == null) {\r\n        gl = canvas.getContext(\"experimental-webgl\", flags) as WebGLRenderingContext;\r\n        if (gl == null) {\r\n            setError(\"Your browser or device does not seem to support WebGL.\");\r\n            return false;\r\n        }\r\n\r\n        setError(\"Your browser or device only supports experimental WebGL.\\n\" +\r\n            \"The simulation may not run as expected.\");\r\n    }\r\n\r\n    gl.disable(gl.CULL_FACE);\r\n    gl.disable(gl.DEPTH_TEST);\r\n    gl.disable(gl.BLEND);\r\n    gl.clearColor(0, 0, 0, 1);\r\n\r\n    return true;\r\n}\r\n\r\n/* Adjusts the GL canvas size to the actual canvas element size on the page */\r\nfunction adjustSize(hidpi: boolean = false): void {\r\n    const cssPixel: number = (hidpi) ? window.devicePixelRatio : 1;\r\n\r\n    const width: number = Math.floor(gl.canvas.clientWidth * cssPixel);\r\n    const height: number = Math.floor(gl.canvas.clientHeight * cssPixel);\r\n    if (gl.canvas.width !== width || gl.canvas.height !== height) {\r\n        gl.canvas.width = width;\r\n        gl.canvas.height = height;\r\n    }\r\n}\r\n\r\nexport {\r\n    adjustSize,\r\n    initGL,\r\n    gl,\r\n};\r\n","import * as Infos from \"./infos\";\r\n\r\ndeclare const Button: any;\r\ndeclare const Canvas: any;\r\ndeclare const Checkbox: any;\r\ndeclare const Controls: any;\r\ndeclare const FileControl: any;\r\ndeclare const Picker: any;\r\ndeclare const Range: any;\r\ndeclare const Tabs: any;\r\n\r\nconst attractorNames = {\r\n    DeJong: \"de-jong\",\r\n    Bedhead: \"bedhead\",\r\n    Clifford: \"clifford\",\r\n    FractalDream: \"fractal-dream\",\r\n};\r\n\r\nconst compositingNames = {\r\n    dark: \"dark\",\r\n    light: \"light\",\r\n};\r\n\r\n/* === IDs ============================================================ */\r\nconst controlId = {\r\n    ATTRACTOR: \"attractor-picker-id\",\r\n    A: \"a-range-id\",\r\n    B: \"b-range-id\",\r\n    C: \"c-range-id\",\r\n    D: \"d-range-id\",\r\n    FORMULA: \"formula-checkbox-id\",\r\n    INDICATORS: \"indicators-checkbox-id\",\r\n    INTENSITY: \"intensity-range-id\",\r\n    QUALITY: \"quality-range-id\",\r\n    COMPOSITING: \"compositing\",\r\n    DOWNLOAD_SIZE: \"download-size\",\r\n    DOWNLOAD: \"file-download-id\",\r\n};\r\n\r\n/* === OBSERVERS ====================================================== */\r\ntype GenericObserver = () => void;\r\n\r\nfunction callObservers(observersList: any[]): void {\r\n    for (const observer of observersList) {\r\n        observer();\r\n    }\r\n}\r\n\r\nconst observers: {\r\n    clear: GenericObserver[],\r\n} = {\r\n    clear: [],\r\n};\r\n\r\nlet attractor: string;\r\nlet a: number;\r\nlet b: number;\r\nlet c: number;\r\nlet d: number;\r\n\r\nlet intensity: number;\r\nlet quality: number;\r\nlet compositing: string;\r\nlet nbPointsNeeded: number;\r\n\r\nfunction updateNbPointsNeeded() {\r\n    nbPointsNeeded = Parameters.computeNbPointsNeeded(Canvas.getSize());\r\n}\r\n\r\n/* === INTERFACE ====================================================== */\r\nclass Parameters {\r\n    public static get attractor(): string {\r\n        return attractor;\r\n    }\r\n    public static set attractor(att: string) {\r\n        Picker.setValue(controlId.ATTRACTOR, att);\r\n        attractor = att;\r\n    }\r\n\r\n    public static get a(): number {\r\n        return a;\r\n    }\r\n\r\n    public static get b(): number {\r\n        return b;\r\n    }\r\n\r\n    public static get c(): number {\r\n        return c;\r\n    }\r\n\r\n    public static get d(): number {\r\n        return d;\r\n    }\r\n\r\n    public static get nbPointsNeeded(): number {\r\n        return nbPointsNeeded;\r\n    }\r\n\r\n    public static get quality(): number {\r\n        return quality;\r\n    }\r\n\r\n    public static get compositing(): string {\r\n        return compositing;\r\n    }\r\n\r\n    public static get clearObservers(): GenericObserver[] {\r\n        return observers.clear;\r\n    }\r\n\r\n    public static computeNbPointsNeeded(canvasSize: number[]): number {\r\n        const minDimension = Math.min(canvasSize[0], canvasSize[1]);\r\n        return intensity / (256 * quality) * minDimension * minDimension;\r\n    }\r\n\r\n    private constructor() {}\r\n}\r\n\r\n/* === EVENTS BINDING ================================================= */\r\n/* --- PARAMETERS ----------------------------------------------------- */\r\nPicker.addObserver(controlId.ATTRACTOR, (value: string) => {\r\n    attractor = value;\r\n    callObservers(observers.clear);\r\n});\r\n\r\nRange.addObserver(controlId.A, (newvalue: number) => {\r\n    a = newvalue;\r\n    callObservers(observers.clear);\r\n});\r\na = Range.getValue(controlId.A);\r\n\r\nRange.addObserver(controlId.B, (newvalue: number) => {\r\n    b = newvalue;\r\n    callObservers(observers.clear);\r\n});\r\nb = Range.getValue(controlId.B);\r\n\r\nRange.addObserver(controlId.C, (newvalue: number) => {\r\n    c = newvalue;\r\n    callObservers(observers.clear);\r\n});\r\nc = Range.getValue(controlId.C);\r\n\r\nRange.addObserver(controlId.D, (newvalue: number) => {\r\n    d = newvalue;\r\n    callObservers(observers.clear);\r\n});\r\nd = Range.getValue(controlId.D);\r\n\r\nCheckbox.addObserver(controlId.FORMULA, (checked: boolean) => {\r\n    Infos.setVisibility(checked);\r\n});\r\nInfos.setVisibility(Checkbox.isChecked(controlId.FORMULA));\r\n\r\nRange.addObserver(controlId.INTENSITY, (newvalue: number) => {\r\n    const needToClear = (newvalue < intensity);\r\n    intensity = newvalue;\r\n    updateNbPointsNeeded();\r\n\r\n    if (needToClear) {\r\n        callObservers(observers.clear);\r\n    }\r\n});\r\nintensity = Range.getValue(controlId.INTENSITY);\r\n\r\nRange.addObserver(controlId.QUALITY, (newvalue: number) => {\r\n    quality = 1 - (254 / 255) * newvalue;\r\n    updateNbPointsNeeded();\r\n    callObservers(observers.clear);\r\n});\r\nquality = 1 - (254 / 255) * Range.getValue(controlId.QUALITY);\r\n\r\nTabs.addObserver(controlId.COMPOSITING, (newValue: string[]) => {\r\n    compositing = \"\" + newValue[0];\r\n    callObservers(observers.clear);\r\n});\r\ncompositing = \"\" + Tabs.getValues(controlId.COMPOSITING);\r\n\r\nCheckbox.addObserver(controlId.INDICATORS, (checked: number) => {\r\n    Canvas.setIndicatorsVisibility(checked);\r\n});\r\nCanvas.setIndicatorsVisibility(Checkbox.isChecked(controlId.INDICATORS));\r\n\r\nCanvas.Observers.canvasResize.push(updateNbPointsNeeded);\r\nupdateNbPointsNeeded();\r\n\r\nexport {\r\n    attractorNames,\r\n    compositingNames,\r\n    controlId as ControlsID,\r\n    Parameters,\r\n};\r\n","import { gl } from \"../gl-utils/gl-canvas\";\r\nimport Shader from \"../gl-utils/shader\";\r\nimport * as ShaderManager from \"../gl-utils/shader-manager\";\r\nimport VBO from \"../gl-utils/vbo\";\r\n\r\nimport * as Infos from \"../infos\";\r\nimport { Parameters } from \"../parameters\";\r\nimport Boundaries from \"./boundaries\";\r\n\r\nlet shader: Shader = null;\r\nlet pointsVBO: VBO = null;\r\n\r\ndeclare const Canvas: any;\r\n\r\nabstract class Attractor {\r\n    protected boundaries: Boundaries;\r\n    protected x: number;\r\n    protected y: number;\r\n\r\n    constructor() {\r\n        if (shader === null) {\r\n            ShaderManager.buildShader(\r\n                {\r\n                    fragmentFilename: \"points.frag\",\r\n                    vertexFilename: \"points.vert\",\r\n                    injected: {},\r\n                },\r\n                (newShader) => {\r\n                    if (newShader !== null) {\r\n                        shader = newShader;\r\n                    }\r\n                },\r\n            );\r\n        }\r\n\r\n        if (pointsVBO === null) {\r\n            const fillData = new Float32Array(2);\r\n            pointsVBO = new VBO(gl, fillData, 2, gl.FLOAT, false);\r\n        }\r\n\r\n        this.boundaries = null;\r\n    }\r\n\r\n    public drawXPoints(nbPoints: number): boolean {\r\n        if (shader) {\r\n            const data = this.computeXPoints(nbPoints);\r\n            pointsVBO.setData(data);\r\n\r\n            const canvasSize = Canvas.getSize();\r\n            const aspectRatio = canvasSize[0] / canvasSize[1];\r\n\r\n            /* tslint:disable:no-string-literal */\r\n            shader.a[\"aCoords\"].VBO = pointsVBO;\r\n            const q = Parameters.quality;\r\n            shader.u[\"uColor\"].value = [q, q, q, 1];\r\n            shader.u[\"uCenter\"].value = this.boundaries.center;\r\n            const maxDimension = 0.5 + this.boundaries.maxDimension;\r\n            shader.u[\"uScale\"].value = [\r\n                2 / maxDimension / Math.max(aspectRatio, 1),\r\n                2 / maxDimension * Math.min(aspectRatio, 1),\r\n            ];\r\n            /* tslint:enable:no-string-literal */\r\n\r\n            shader.use();\r\n            shader.bindUniformsAndAttributes();\r\n\r\n            gl.drawArrays(gl.POINTS, 0, nbPoints);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public reset(): void {\r\n        this.toggleParametersVisibility();\r\n        Infos.setTitle(this.name);\r\n        Infos.setFormula(this.formula);\r\n        Infos.setParameters(this.parameters);\r\n        this.boundaries = null;\r\n    }\r\n\r\n    /* For infos block display */\r\n    public abstract get name(): string;\r\n    public abstract get formula(): string;\r\n    public abstract get parameters(): string[];\r\n\r\n    public abstract toggleParametersVisibility(): void;\r\n\r\n    /* Should update minX, maxX, minY and maxY */\r\n    protected abstract computeXPoints(nbPoints: number): Float32Array;\r\n\r\n    protected fillData(nbPoints: number, computeNextPoint: (pointIndex: number) => void) {\r\n        /* ignore the first 1000 ones */\r\n        for (let i = 0; i < 100; ++i) {\r\n            computeNextPoint(0);\r\n        }\r\n\r\n        if (this.boundaries === null) {\r\n            this.boundaries = new Boundaries();\r\n\r\n            for (let i = 0; i < nbPoints; ++i) {\r\n                computeNextPoint(i);\r\n                this.boundaries.includePoint(this.x, this.y);\r\n            }\r\n        } else {\r\n            for (let i = 0; i < nbPoints; ++i) {\r\n                computeNextPoint(i);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Attractor;\r\n","declare const Canvas: any;\r\n\r\nconst FONT_NAME = \"Nothing You Could Do\";\r\nconst BLOCK_MARGIN = 8;\r\nconst BLOCK_PADDING = 8;\r\nconst TITLE_FONT_SIZE = 24;\r\nconst FONT_SIZE = 20;\r\nconst SUB_FONT_SIZE = 16;\r\n\r\nlet fontColor: string = \"blue\";\r\nlet backgroundColor: string = \"red\";\r\n\r\n(function registerFont() {\r\n    const fontLink = document.createElement(\"link\");\r\n    fontLink.href = \"https://fonts.googleapis.com/css?family=\" + FONT_NAME.replace(\" \", \"+\");\r\n    fontLink.rel = \"stylesheet\";\r\n    document.head.appendChild(fontLink);\r\n})();\r\n\r\nlet colorsStylesheet: any; // really a StyleSheet but Typescript definitions are incomplete\r\n(function registerCss() {\r\n    const infosCss =\r\n    `.infos {\r\n        position: absolute;\r\n        bottom: 0;\r\n        left: 0;\r\n        line-height: 1em;\r\n        margin: ` + BLOCK_MARGIN + `px;\r\n        text-align: left;\r\n        font-family: '` + FONT_NAME + `', cursive;\r\n        font-size: ` + FONT_SIZE + `px;\r\n    }\r\n    .infos sub {\r\n        font-size: ` + SUB_FONT_SIZE + `px;\r\n    }\r\n    .infos div {\r\n        padding: ` + BLOCK_PADDING + `px;\r\n    }\r\n    .infos .attractor-name {\r\n        display: inline-block;\r\n        font-size: ` + TITLE_FONT_SIZE + `px;\r\n    }\r\n    .infos .attractor-parameters {\r\n        display: inline-block;\r\n    }`;\r\n\r\n    const infosStyle = document.createElement(\"style\");\r\n    infosStyle.setAttribute(\"type\", \"text/css\");\r\n    if ((infosStyle as any).styleSheet) {   // IE\r\n        (infosStyle as any).styleSheet.cssText = infosCss;\r\n    } else {\r\n        infosStyle.appendChild(document.createTextNode(infosCss));\r\n    }\r\n    document.head.appendChild(infosStyle);\r\n\r\n    const infosColorsStyle = document.createElement(\"style\");\r\n    document.head.appendChild(infosColorsStyle);\r\n    colorsStylesheet = infosColorsStyle.sheet;\r\n})();\r\n\r\nsetColors(\"white\", \"black\");\r\n\r\nconst titleElt = document.createElement(\"div\");\r\ntitleElt.className = \"attractor-name\";\r\nconst formulaElt = document.createElement(\"div\");\r\nconst parametersElt = document.createElement(\"div\");\r\nparametersElt.className = \"attractor-parameters\";\r\n\r\nconst infosBlockElt = document.createElement(\"div\");\r\ninfosBlockElt.className = \"infos\";\r\ninfosBlockElt.appendChild(titleElt);\r\ninfosBlockElt.appendChild(formulaElt);\r\ninfosBlockElt.appendChild(parametersElt);\r\nsetVisibility(false);\r\n\r\nconst canvasContainer = (Canvas.getCanvas() as HTMLElement).parentElement;\r\ncanvasContainer.appendChild(infosBlockElt);\r\n\r\nfunction setColors(newFontColor: string, newBackgroundColor: string) {\r\n    fontColor = newFontColor;\r\n    backgroundColor = newBackgroundColor;\r\n\r\n    while (colorsStylesheet.cssRules.length > 0) {\r\n        colorsStylesheet.deleteRule(0);\r\n    }\r\n    colorsStylesheet.insertRule(\".infos { color: \" + fontColor + \"; }\", 0);\r\n    colorsStylesheet.insertRule(\".infos div { background: \" + backgroundColor + \"; }\", 0);\r\n}\r\n\r\nfunction setVisibility(visible: boolean) {\r\n    infosBlockElt.style.display = visible ? \"\" : \"none\";\r\n}\r\n\r\nfunction setTitle(title: string) {\r\n    titleElt.textContent = title;\r\n}\r\n\r\nfunction setFormula(formula: string) {\r\n    function frame(op: string, f: string) {\r\n        return f + op + f;\r\n    }\r\n    function frameNode(op: string, node: string) {\r\n        return \"<\" + node + \">\" + op + \"</\" + node + \">\";\r\n    }\r\n\r\n    const SPACE = \" \";\r\n    const HALF_SPACE = \"&#8239;\";\r\n\r\n    let html = formula.replace(/\\s*\\*\\s*/g, frame(\"&times\", HALF_SPACE));\r\n    html = html.replace(/\\s*\\/\\s*/g, frame(\"&divide\", HALF_SPACE));\r\n    html = html.replace(/\\s*\\+\\s*/g, frame(\"+\", SPACE));\r\n    html = html.replace(/\\s*-\\s*/g, frame(\"-\", SPACE));\r\n    html = html.replace(/\\s*=\\s*/g, frame(\"=\", SPACE));\r\n    html = html.replace(/\\s*n\\s*\\+\\s*1\\s*/g, \"n\" + frame(\"+\", HALF_SPACE) + \"1\");\r\n    html = html.replace(/\\n/g, \"<br/>\");\r\n    html = html.replace(/_{([^}]*)}/g, (str, $1) => frameNode($1, \"sub\"));\r\n    html = html.replace(/\\^{([^}]*)}/g, (str, $1) => frameNode($1, \"sup\"));\r\n\r\n    formulaElt.innerHTML = html;\r\n}\r\n\r\nfunction setParameters(parameters: string[]) {\r\n    parametersElt.innerHTML = parameters.join(\"<br/>\");\r\n}\r\n\r\nfunction drawToCanvas(ctx: CanvasRenderingContext2D) {\r\n    function setFontSize(sizeInPx: number) {\r\n        ctx.font = sizeInPx + \"px \" + FONT_NAME;\r\n    }\r\n\r\n    function drawBackground(x: number, y: number, width: number, height: number) {\r\n        const previousFillStyle = ctx.fillStyle;\r\n        ctx.fillStyle = backgroundColor;\r\n        ctx.fillRect(x, y, width, height);\r\n        ctx.fillStyle = previousFillStyle;\r\n    }\r\n\r\n    drawBackground(BLOCK_MARGIN, BLOCK_MARGIN, titleElt.clientWidth, titleElt.clientHeight);\r\n    ctx.fillStyle = fontColor;\r\n    ctx.textAlign = \"left\";\r\n    ctx.textBaseline = \"top\";\r\n\r\n    const blockLeft = BLOCK_MARGIN + BLOCK_PADDING;\r\n    let top = BLOCK_MARGIN + BLOCK_PADDING;\r\n\r\n    let fontSize = TITLE_FONT_SIZE;\r\n    setFontSize(fontSize);\r\n    ctx.fillText(titleElt.textContent, blockLeft, top);\r\n    top += 2 * FONT_SIZE;\r\n\r\n    fontSize = FONT_SIZE;\r\n    setFontSize(fontSize);\r\n\r\n    drawBackground(BLOCK_MARGIN, top - BLOCK_PADDING, formulaElt.clientWidth, formulaElt.clientHeight);\r\n\r\n    /* HTML tags cannot be used when drawing text on a canvas,\r\n     * so we need to handle manually tags such as br and sub. */\r\n    formulaElt.innerHTML.split(/\\s*<br\\/?>\\s*/g).forEach((str) => {\r\n        let dLeft = 0;\r\n        let currIndex = 0;\r\n\r\n        function writeText(text: string) {\r\n            ctx.fillText(text, blockLeft + dLeft, top);\r\n            dLeft += ctx.measureText(text).width;\r\n        }\r\n\r\n        function findNext(nodeName: string) {\r\n            const i = str.indexOf(nodeName, currIndex);\r\n            return (i < 0) ? str.length : i;\r\n        }\r\n\r\n        while (currIndex < str.length) {\r\n            let index = findNext(\"<sub>\");\r\n            writeText(str.substring(currIndex, index));\r\n            currIndex = index + 5; // 5 === \"<sub>\".length\r\n\r\n            index = findNext(\"</sub>\");\r\n            top += .4 * fontSize;\r\n            setFontSize(SUB_FONT_SIZE);\r\n            writeText(str.substring(currIndex, index));\r\n            top -= .4 * fontSize;\r\n            currIndex = index + 6; // 6 === \"</sub>\".length\r\n\r\n            setFontSize(fontSize);\r\n        }\r\n        top += 1.25 * fontSize;\r\n    });\r\n\r\n    top += 1 * FONT_SIZE;\r\n\r\n    drawBackground(BLOCK_MARGIN, top - BLOCK_PADDING, parametersElt.clientWidth, parametersElt.clientHeight);\r\n\r\n    parametersElt.innerHTML.split(/\\s*<br\\/?>\\s*/g).forEach((line) => {\r\n        ctx.fillText(line, blockLeft, top);\r\n        top += 1 * fontSize;\r\n    });\r\n}\r\n\r\nexport {\r\n    drawToCanvas,\r\n    setColors,\r\n    setFormula,\r\n    setParameters,\r\n    setTitle,\r\n    setVisibility,\r\n};\r\n","abstract class GLResource {\r\n    private _gl: WebGLRenderingContext;\r\n\r\n    constructor(gl: WebGLRenderingContext) {\r\n        this._gl = gl;\r\n    }\r\n\r\n    public gl(): WebGLRenderingContext {\r\n        return this._gl;\r\n    }\r\n\r\n    public abstract freeGLResources(): void;\r\n}\r\n\r\nexport default GLResource;\r\n","class Viewport {\r\n    public static setFullCanvas(gl: WebGLRenderingContext): void {\r\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\r\n    }\r\n\r\n    public lower: number;\r\n    public left: number;\r\n    public width: number;\r\n    public height: number;\r\n\r\n    constructor(left: number, lower: number, width: number, height: number) {\r\n        this.left = left;\r\n        this.lower = lower;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n\r\n    public set(gl: WebGLRenderingContext): void {\r\n        gl.viewport(this.lower, this.left, this.width, this.height);\r\n    }\r\n}\r\n\r\nexport default Viewport;\r\n","abstract class CompositingBase {\r\n    public backgroundColor: string;\r\n    public foregroundColor: string;\r\n\r\n    public abstract initialize(): void;\r\n    public abstract bindTopLayer(): void;\r\n    public abstract compose(): void;\r\n}\r\n\r\nexport default CompositingBase;\r\n","import * as GLCanvas from \"./gl-utils/gl-canvas\";\r\nimport { gl } from \"./gl-utils/gl-canvas\";\r\n\r\nimport Attractor from \"./attractors/attractor\";\r\nimport BedHeadAttractor from \"./attractors/bedhead\";\r\nimport CliffordAttractor from \"./attractors/clifford\";\r\nimport DeJongAttractor from \"./attractors/de-jong\";\r\nimport FractalDreamAttractor from \"./attractors/fractal-dream\";\r\nimport * as Infos from \"./infos\";\r\nimport { attractorNames, compositingNames, ControlsID, Parameters } from \"./parameters\";\r\n\r\nimport Compositing from \"./compositing/compositing\";\r\nimport CompositingDark from \"./compositing/compositing-dark\";\r\nimport CompositingLight from \"./compositing/compositing-light\";\r\n\r\ndeclare const Canvas: any;\r\ndeclare const FileControl: any;\r\ndeclare const Tabs: any;\r\n\r\nfunction main() {\r\n    initGL();\r\n\r\n    let needToAdjustCanvas = true;\r\n    Canvas.Observers.canvasResize.push(() => needToAdjustCanvas = true);\r\n    Parameters.clearObservers.push(() => needToAdjustCanvas = true);\r\n\r\n    Parameters.attractor = attractorNames.DeJong;\r\n\r\n    const attractors = {};\r\n    attractors[attractorNames.Bedhead] = new BedHeadAttractor();\r\n    attractors[attractorNames.Clifford] = new CliffordAttractor();\r\n    attractors[attractorNames.DeJong] = new DeJongAttractor();\r\n    attractors[attractorNames.FractalDream] = new FractalDreamAttractor();\r\n\r\n    const compositings = {};\r\n    compositings[compositingNames.dark] = new CompositingDark();\r\n    compositings[compositingNames.light] = new CompositingLight();\r\n\r\n    let totalPoints: number;\r\n    function setTotalPoints(total: number): void {\r\n        totalPoints = total;\r\n        Canvas.setIndicatorText(\"points-drawn\", totalPoints.toLocaleString());\r\n    }\r\n    setTotalPoints(0);\r\n\r\n    const STEP_SIZE = Math.pow(2, 16);\r\n    let attractor: Attractor;\r\n    let compositing: Compositing;\r\n    function mainLoop() {\r\n        if (needToAdjustCanvas) {\r\n            needToAdjustCanvas = false;\r\n            setTotalPoints(0);\r\n\r\n            attractor = attractors[Parameters.attractor];\r\n            attractor.reset();\r\n\r\n            compositing = compositings[Parameters.compositing];\r\n            compositing.initialize();\r\n\r\n            Infos.setColors(compositing.foregroundColor, compositing.backgroundColor);\r\n        }\r\n\r\n        if (totalPoints < Parameters.nbPointsNeeded) {\r\n            compositing.bindTopLayer();\r\n            if (attractor.drawXPoints(STEP_SIZE)) {\r\n                setTotalPoints(totalPoints + STEP_SIZE);\r\n            }\r\n        }\r\n\r\n        compositing.compose();\r\n\r\n        requestAnimationFrame(mainLoop);\r\n    }\r\n\r\n    function initGL() {\r\n        const glParams = {\r\n            alpha: false,\r\n            depth: false,\r\n            preserveDrawingBuffer: true,\r\n        };\r\n        if (!GLCanvas.initGL(glParams)) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    FileControl.addDownloadObserver(ControlsID.DOWNLOAD, () => {\r\n        const figureSize = +Tabs.getValues(ControlsID.DOWNLOAD_SIZE)[0];\r\n\r\n        const nbPointsNeeded = Parameters.computeNbPointsNeeded([figureSize, figureSize]);\r\n\r\n        const canvas2D = document.createElement(\"canvas\");\r\n        const ctx2D = canvas2D.getContext(\"2d\");\r\n\r\n        canvas2D.width = figureSize + 400;\r\n        canvas2D.height = figureSize;\r\n\r\n        const canvasGL = Canvas.getCanvas();\r\n        function isolateCanvasGL() {\r\n            Canvas.showLoader(true);\r\n\r\n            canvasGL.style.position = \"absolute\";\r\n            canvasGL.style.width = figureSize + \"px\";\r\n            canvasGL.style.height = figureSize + \"px\";\r\n            canvasGL.width = figureSize;\r\n            canvasGL.height = figureSize;\r\n\r\n            compositing.initialize();\r\n        }\r\n\r\n        function restoreCanvasGL() {\r\n            canvasGL.style.position = \"\";\r\n            canvasGL.style.width = \"\";\r\n            canvasGL.style.height = \"\";\r\n            Canvas.showLoader(false);\r\n            Canvas.setLoaderText(\"\");\r\n            needToAdjustCanvas = true;\r\n        }\r\n\r\n        isolateCanvasGL();\r\n\r\n        let nbPoints = 0;\r\n        const stepSize = Math.pow(2, 18);\r\n        compositing.bindTopLayer();\r\n        while (nbPoints < nbPointsNeeded) {\r\n            nbPoints += stepSize;\r\n            attractor.drawXPoints(stepSize);\r\n        }\r\n        compositing.compose();\r\n\r\n        ctx2D.fillStyle = compositing.backgroundColor;\r\n        ctx2D.fillRect(0, 0, canvas2D.width, canvas2D.height);\r\n        ctx2D.drawImage(gl.canvas, 0.5 * (canvas2D.width - figureSize), 0, figureSize, figureSize);\r\n        restoreCanvasGL();\r\n        Infos.drawToCanvas(ctx2D);\r\n\r\n        if ((canvas2D as any).msToBlob) { // for IE\r\n            const blob = (canvas2D as any).msToBlob();\r\n            window.navigator.msSaveBlob(blob, \"image.png\");\r\n        } else {\r\n            canvas2D.toBlob((blob) => {\r\n                const link = document.createElement(\"a\");\r\n                link.download = \"image.png\";\r\n                link.href = URL.createObjectURL(blob);\r\n                link.click();\r\n            });\r\n        }\r\n    });\r\n\r\n    requestAnimationFrame(mainLoop);\r\n}\r\n\r\nmain();\r\n","import { ControlsID, Parameters } from \"../parameters\";\r\nimport Attractor from \"./attractor\";\r\n\r\ndeclare const Controls: any;\r\n\r\nclass BeadheadAttractor extends Attractor {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    public get name(): string {\r\n        return \"Bedhead\";\r\n    }\r\n\r\n    public get formula(): string {\r\n        return `x_{n+1} = sin(x_{n}*y_{n}/b) + cos(a*x_{n} - y_{n})\r\n        y_{n+1} = x_{n} + sin(y_{n})/b`;\r\n    }\r\n\r\n    public get parameters(): string[] {\r\n        return [\r\n            \"a = \" + Parameters.a,\r\n            \"b = \" + Parameters.b,\r\n        ];\r\n    }\r\n\r\n    public toggleParametersVisibility(): void {\r\n        Controls.setVisibility(ControlsID.A, true);\r\n        Controls.setVisibility(ControlsID.B, true);\r\n        Controls.setVisibility(ControlsID.C, false);\r\n        Controls.setVisibility(ControlsID.D, false);\r\n    }\r\n\r\n    protected computeXPoints(nbPoints: number): Float32Array {\r\n        const data = new Float32Array(2 * nbPoints);\r\n\r\n        const a = Parameters.a;\r\n        const b = Parameters.b;\r\n\r\n        this.x = Math.random() * 2 - 1;\r\n        this.y = Math.random() * 2 - 1;\r\n\r\n        const computeNextPoint = (i: number) => {\r\n            data[2 * i + 0] = Math.sin(this.x * this.y / b) + Math.cos(a * this.x - this.y);\r\n            data[2 * i + 1] = this.x + Math.sin(this.y) / b;\r\n\r\n            this.x = data[2 * i + 0];\r\n            this.y = data[2 * i + 1];\r\n        };\r\n\r\n        this.fillData(nbPoints, computeNextPoint);\r\n\r\n        return data;\r\n    }\r\n}\r\n\r\nexport default BeadheadAttractor;\r\n","import { gl } from \"./gl-canvas\";\r\nimport Shader from \"./shader\";\r\nimport * as ShaderSources from \"./shader-sources\";\r\n\r\ntype RegisterCallback = (success: boolean, shader: Shader | null) => void;\r\n\r\ninterface IShaderInfos {\r\n    fragmentFilename: string;\r\n    vertexFilename: string;\r\n    injected: { [id: string]: string };\r\n}\r\n\r\ninterface ICachedShader {\r\n    shader: Shader;\r\n    infos: IShaderInfos;\r\n    pending: boolean;\r\n    failed: boolean;\r\n    callbacks: RegisterCallback[];\r\n}\r\n\r\nconst cachedShaders: { [id: string]: ICachedShader} = {};\r\n\r\nfunction getShader(name: string): Shader | null {\r\n    return cachedShaders[name].shader;\r\n}\r\n\r\ntype BuildCallback = (builtShader: Shader | null) => void;\r\n\r\nfunction buildShader(infos: IShaderInfos, callback: BuildCallback) {\r\n    let sourcesPending = 2;\r\n    let sourcesFailed = 0;\r\n\r\n    function loadedSource(success: boolean) {\r\n        function processSource(source: string): string {\r\n            return source.replace(/#INJECT\\((.*)\\)/mg, (match, name) => {\r\n                if (infos.injected[name]) {\r\n                    return infos.injected[name];\r\n                }\r\n                return match;\r\n            });\r\n        }\r\n\r\n        sourcesPending--;\r\n        if (!success) {\r\n            sourcesFailed++;\r\n        }\r\n\r\n        if (sourcesPending === 0) {\r\n            let shader = null;\r\n\r\n            if (sourcesFailed === 0) {\r\n                const vert = ShaderSources.getSource(infos.vertexFilename);\r\n                const frag = ShaderSources.getSource(infos.fragmentFilename);\r\n\r\n                const processedVert = processSource(vert);\r\n                const processedFrag = processSource(frag);\r\n\r\n                shader = new Shader(gl, processedVert, processedFrag);\r\n            }\r\n\r\n            callback(shader);\r\n        }\r\n    }\r\n\r\n    ShaderSources.loadSource(infos.vertexFilename, loadedSource);\r\n    ShaderSources.loadSource(infos.fragmentFilename, loadedSource);\r\n}\r\n\r\nfunction registerShader(name: string, infos: IShaderInfos, callback: RegisterCallback): void {\r\n    function callAndClearCallbacks(cached: ICachedShader) {\r\n        for (const cachedCallback of cached.callbacks) {\r\n            cachedCallback(!cached.failed, cached.shader);\r\n        }\r\n\r\n        cached.callbacks = [];\r\n    }\r\n\r\n    if (typeof cachedShaders[name] === \"undefined\") {\r\n        cachedShaders[name] = {\r\n            callbacks: [callback],\r\n            failed: false,\r\n            infos,\r\n            pending: true,\r\n            shader: null,\r\n        };\r\n        const cached = cachedShaders[name];\r\n\r\n        buildShader(infos, (builtShader) => {\r\n            cached.pending = false;\r\n            cached.failed = builtShader === null;\r\n            cached.shader = builtShader;\r\n\r\n            callAndClearCallbacks(cached);\r\n        });\r\n    } else {\r\n        const cached = cachedShaders[name];\r\n\r\n        if (cached.pending === true) {\r\n            cached.callbacks.push(callback);\r\n        } else {\r\n            callAndClearCallbacks(cached);\r\n        }\r\n    }\r\n}\r\n\r\nfunction deleteShader(name: string) {\r\n    if (cachedShaders[name]) {\r\n        if (cachedShaders[name].shader) {\r\n            cachedShaders[name].shader.freeGLResources();\r\n        }\r\n        delete cachedShaders[name];\r\n    }\r\n}\r\n\r\nexport {\r\n    buildShader,\r\n    getShader,\r\n    IShaderInfos,\r\n    registerShader,\r\n    deleteShader,\r\n};\r\n","import GLResource from \"./gl-resource\";\r\nimport VBO from \"./vbo\";\r\n\r\nfunction notImplemented(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    alert(\"NOT IMPLEMENTED YET\");\r\n}\r\n\r\nfunction bindUniformFloat(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number | number[]): void;\r\nfunction bindUniformFloat(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    if (Array.isArray(value)) {\r\n        gl.uniform1fv(location, value);\r\n    } else {\r\n        gl.uniform1f(location, value);\r\n    }\r\n}\r\n\r\nfunction bindUniformFloat2v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform2fv(location, value);\r\n}\r\n\r\nfunction bindUniformFloat3v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform3fv(location, value);\r\n}\r\n\r\nfunction bindUniformFloat4v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform4fv(location, value);\r\n}\r\n\r\nfunction bindUniformInt(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number | number[]): void;\r\nfunction bindUniformInt(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    if (Array.isArray(value)) {\r\n        gl.uniform1iv(location, value);\r\n    } else {\r\n        gl.uniform1iv(location, value);\r\n    }\r\n}\r\n\r\nfunction bindUniformInt2v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform2iv(location, value);\r\n}\r\n\r\nfunction bindUniformInt3v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform3iv(location, value);\r\n}\r\n\r\nfunction bindUniformInt4v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform4iv(location, value);\r\n}\r\n\r\nfunction bindUniformBool(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: boolean | number): void {\r\n    gl.uniform1i(location, +value);\r\n}\r\n\r\nfunction bindUniformBool2v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value): void {\r\n    gl.uniform2iv(location, value);\r\n}\r\n\r\nfunction bindUniformBool3v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value): void {\r\n    gl.uniform3iv(location, value);\r\n}\r\n\r\nfunction bindUniformBool4v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value): void {\r\n    gl.uniform4iv(location, value);\r\n}\r\n\r\nfunction bindUniformFloatMat2(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniformMatrix2fv(location, false, value);\r\n}\r\n\r\nfunction bindUniformFloatMat3(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniformMatrix3fv(location, false, value);\r\n}\r\n\r\nfunction bindUniformFloatMat4(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniformMatrix4fv(location, false, value);\r\n}\r\n\r\nfunction bindSampler2D(gl: WebGLRenderingContext, location: WebGLUniformLocation, unitNb: number,\r\n                       value: WebGLTexture): void {\r\n    gl.uniform1i(location, unitNb);\r\n    gl.activeTexture(gl[\"TEXTURE\" + unitNb]);\r\n    gl.bindTexture(gl.TEXTURE_2D, value);\r\n}\r\n\r\nfunction bindSamplerCube(gl: WebGLRenderingContext, location: WebGLUniformLocation, unitNb: number,\r\n                         value: WebGLTexture): void {\r\n    gl.uniform1i(location, unitNb);\r\n    gl.activeTexture(gl[\"TEXTURE\" + unitNb]);\r\n    gl.bindTexture(gl.TEXTURE_CUBE_MAP, value);\r\n}\r\n\r\n/* From WebGL spec:\r\n* http://www.khronos.org/registry/webgl/specs/latest/1.0/#5.14 */\r\nconst types = {\r\n    0x8B50: { str: \"FLOAT_VEC2\", binder: bindUniformFloat2v },\r\n    0x8B51: { str: \"FLOAT_VEC3\", binder: bindUniformFloat3v },\r\n    0x8B52: { str: \"FLOAT_VEC4\", binder: bindUniformFloat4v },\r\n    0x8B53: { str: \"INT_VEC2\", binder: bindUniformInt2v },\r\n    0x8B54: { str: \"INT_VEC3\", binder: bindUniformInt3v },\r\n    0x8B55: { str: \"INT_VEC4\", binder: bindUniformInt4v },\r\n    0x8B56: { str: \"BOOL\", binder: bindUniformBool },\r\n    0x8B57: { str: \"BOOL_VEC2\", binder: bindUniformBool2v },\r\n    0x8B58: { str: \"BOOL_VEC3\", binder: bindUniformBool3v },\r\n    0x8B59: { str: \"BOOL_VEC4\", binder: bindUniformBool4v },\r\n    0x8B5A: { str: \"FLOAT_MAT2\", binder: bindUniformFloatMat2 },\r\n    0x8B5B: { str: \"FLOAT_MAT3\", binder: bindUniformFloatMat3 },\r\n    0x8B5C: { str: \"FLOAT_MAT4\", binder: bindUniformFloatMat4 },\r\n    0x8B5E: { str: \"SAMPLER_2D\", binder: bindSampler2D },\r\n    0x8B60: { str: \"SAMPLER_CUBE\", binder: bindSamplerCube },\r\n    0x1400: { str: \"BYTE\", binder: notImplemented },\r\n    0x1401: { str: \"UNSIGNED_BYTE\", binder: notImplemented },\r\n    0x1402: { str: \"SHORT\", binder: notImplemented },\r\n    0x1403: { str: \"UNSIGNED_SHORT\", binder: notImplemented },\r\n    0x1404: { str: \"INT\", binder: bindUniformInt },\r\n    0x1405: { str: \"UNSIGNED_INT\", binder: notImplemented },\r\n    0x1406: { str: \"FLOAT\", binder: bindUniformFloat },\r\n};\r\n\r\ninterface IShaderUniform {\r\n    value: boolean | boolean[] | number | number[] | WebGLTexture | WebGLTexture[];\r\n    loc: WebGLUniformLocation;\r\n    size: number;\r\n    type: number;\r\n}\r\n\r\ninterface IShaderAttribute {\r\n    VBO: VBO;\r\n    loc: GLint;\r\n    size: number;\r\n    type: number;\r\n}\r\n\r\nclass ShaderProgram extends GLResource {\r\n    public u: IShaderUniform[];\r\n    public a: IShaderAttribute[];\r\n\r\n    private id: WebGLProgram;\r\n    private uCount: number;\r\n    private aCount: number;\r\n\r\n    constructor(gl: WebGLRenderingContext, vertexSource: string, fragmentSource: string) {\r\n        function createShader(type: GLenum, source: string): WebGLShader {\r\n            const shader = gl.createShader(type);\r\n            gl.shaderSource(shader, source);\r\n            gl.compileShader(shader);\r\n\r\n            const compileSuccess = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n            if (!compileSuccess) {\r\n                console.error(gl.getShaderInfoLog(shader));\r\n                gl.deleteShader(shader);\r\n                return null;\r\n            }\r\n\r\n            return shader;\r\n        }\r\n\r\n        super(gl);\r\n\r\n        this.id = null;\r\n        this.uCount = 0;\r\n        this.aCount = 0;\r\n\r\n        const vertexShader = createShader(gl.VERTEX_SHADER, vertexSource);\r\n        const fragmentShader = createShader(gl.FRAGMENT_SHADER, fragmentSource);\r\n\r\n        const id = gl.createProgram();\r\n        gl.attachShader(id, vertexShader);\r\n        gl.attachShader(id, fragmentShader);\r\n        gl.linkProgram(id);\r\n\r\n        const linkSuccess = gl.getProgramParameter(id, gl.LINK_STATUS);\r\n        if (!linkSuccess) {\r\n            console.error(gl.getProgramInfoLog(id));\r\n            gl.deleteProgram(id);\r\n        } else {\r\n            this.id = id;\r\n\r\n            this.introspection();\r\n        }\r\n    }\r\n\r\n    public freeGLResources(): void {\r\n        super.gl().deleteProgram(this.id);\r\n        this.id = null;\r\n    }\r\n\r\n    public use(): void {\r\n        super.gl().useProgram(this.id);\r\n    }\r\n\r\n    public bindUniforms(): void {\r\n        const gl: WebGLRenderingContext = super.gl();\r\n        let currTextureUnitNb: number = 0;\r\n\r\n        Object.keys(this.u).forEach((uName) => {\r\n            const uniform = this.u[uName];\r\n            if (uniform.value !== null) {\r\n                if (uniform.type === 0x8B5E || uniform.type === 0x8B60) {\r\n                    const unitNb: number = currTextureUnitNb;\r\n                    types[uniform.type].binder(gl, uniform.loc, unitNb, uniform.value);\r\n                    currTextureUnitNb++;\r\n                } else {\r\n                    types[uniform.type].binder(gl, uniform.loc, uniform.value);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public bindAttributes(): void {\r\n        Object.keys(this.a).forEach((aName) => {\r\n            const attribute = this.a[aName];\r\n            if (attribute.VBO !== null) {\r\n                attribute.VBO.bind(attribute.loc);\r\n            }\r\n        });\r\n    }\r\n\r\n    public bindUniformsAndAttributes(): void {\r\n        this.bindUniforms();\r\n        this.bindAttributes();\r\n    }\r\n\r\n    private introspection(): void {\r\n        const gl = super.gl();\r\n\r\n        this.uCount = gl.getProgramParameter(this.id, gl.ACTIVE_UNIFORMS);\r\n        this.u = [];\r\n        for (let i = 0; i < this.uCount; ++i) {\r\n            const uniform = gl.getActiveUniform(this.id, i);\r\n            const name = uniform.name;\r\n\r\n            this.u[name] = {\r\n                loc: gl.getUniformLocation(this.id, name),\r\n                size: uniform.size,\r\n                type: uniform.type,\r\n                value: null,\r\n            };\r\n        }\r\n\r\n        this.aCount = gl.getProgramParameter(this.id, gl.ACTIVE_ATTRIBUTES);\r\n        this.a = [];\r\n        for (let i = 0; i < this.aCount; ++i) {\r\n            const attribute = gl.getActiveAttrib(this.id, i);\r\n            const name = attribute.name;\r\n\r\n            this.a[name] = {\r\n                VBO: null,\r\n                loc: gl.getAttribLocation(this.id, name),\r\n                size: attribute.size,\r\n                type: attribute.type,\r\n            };\r\n        }\r\n    }\r\n}\r\n\r\nexport default ShaderProgram;\r\n","type LoadCallback = (success: boolean)  => void;\r\n\r\ninterface ICachedSource {\r\n    text: string;\r\n    pending: boolean;\r\n    failed: boolean;\r\n    callbacks: LoadCallback[];\r\n}\r\n\r\nconst cachedSources: { [id: string]: ICachedSource } = {};\r\n\r\n/* Fetches asynchronously the shader source from server and stores it in cache. */\r\nfunction loadSource(filename: string, callback: LoadCallback) {\r\n    function callAndClearCallbacks(cached: ICachedSource) {\r\n        for (const cachedCallback of cached.callbacks) {\r\n            cachedCallback(!cached.failed);\r\n        }\r\n\r\n        cached.callbacks = [];\r\n    }\r\n\r\n    if (typeof cachedSources[filename] === \"undefined\") {\r\n        cachedSources[filename] = {\r\n            callbacks: [callback],\r\n            failed: false,\r\n            pending: true,\r\n            text: null,\r\n        };\r\n        const cached = cachedSources[filename];\r\n\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open(\"GET\", \"./shaders/\" + filename, true);\r\n        xhr.onload = () => {\r\n            if (xhr.readyState === 4) {\r\n                cached.pending = false;\r\n\r\n                if (xhr.status === 200) {\r\n                    cached.text = xhr.responseText;\r\n                    cached.failed = false;\r\n                } else {\r\n                    console.error(\"Cannot load '\" + filename + \"' shader source: \" + xhr.statusText);\r\n                    cached.failed = true;\r\n                }\r\n\r\n                callAndClearCallbacks(cached);\r\n            }\r\n        };\r\n        xhr.onerror = () => {\r\n            console.error(\"Cannot load '\" + filename + \"' shader source: \" + xhr.statusText);\r\n            cached.pending = false;\r\n            cached.failed = true;\r\n            callAndClearCallbacks(cached);\r\n        };\r\n\r\n        xhr.send(null);\r\n    } else {\r\n        const cached = cachedSources[filename];\r\n\r\n        if (cached.pending === true) {\r\n            cached.callbacks.push(callback);\r\n        } else {\r\n            cached.callbacks = [callback];\r\n            callAndClearCallbacks(cached);\r\n        }\r\n    }\r\n}\r\n\r\nfunction getSource(filename: string): string {\r\n    return cachedSources[filename].text;\r\n}\r\n\r\nexport {\r\n    getSource,\r\n    loadSource,\r\n};\r\n","import GLResource from \"./gl-resource\";\r\n\r\nenum Usage {\r\n    DYNAMIC,\r\n    STATIC,\r\n}\r\n\r\nclass VBO extends GLResource {\r\n    public static createQuad(gl: WebGLRenderingContext, minX: number, minY: number, maxX: number, maxY: number): VBO {\r\n        const vert = [\r\n            minX, minY,\r\n            maxX, minY,\r\n            minX, maxY,\r\n            maxX, maxY,\r\n        ];\r\n\r\n        return new VBO(gl, new Float32Array(vert), 2, gl.FLOAT, true);\r\n    }\r\n\r\n    private id: WebGLBuffer;\r\n    private size: number;\r\n    private type: GLenum;\r\n    private normalize: GLboolean;\r\n    private stride: GLsizei;\r\n    private offset: GLintptr;\r\n    private usage: Usage;\r\n\r\n    constructor(gl: WebGLRenderingContext, array: any, size: number, type: GLenum, staticUsage: boolean = true) {\r\n        super(gl);\r\n\r\n        this.id = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.id);\r\n        if (staticUsage) {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.STATIC_DRAW);\r\n        } else {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.DYNAMIC_DRAW);\r\n        }\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n\r\n        this.size = size;\r\n        this.type = type;\r\n        this.normalize = false;\r\n        this.stride = 0;\r\n        this.offset = 0;\r\n        this.usage = (staticUsage) ? Usage.STATIC : Usage.DYNAMIC;\r\n    }\r\n\r\n    public freeGLResources(): void {\r\n        this.gl().deleteBuffer(this.id);\r\n        this.id = null;\r\n    }\r\n\r\n    public bind(location: GLuint): void {\r\n        const gl = super.gl();\r\n        gl.enableVertexAttribArray(location);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.id);\r\n        gl.vertexAttribPointer(location, this.size, this.type, this.normalize, this.stride, this.offset);\r\n    }\r\n\r\n    public setData(array: any): void {\r\n        const gl = super.gl();\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.id);\r\n        if (this.usage === Usage.STATIC) {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.STATIC_DRAW);\r\n        } else {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.DYNAMIC_DRAW);\r\n        }\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n    }\r\n}\r\n\r\nexport default VBO;\r\n","class Boundaries {\r\n    public minX: number;\r\n    public maxX: number;\r\n    public minY: number;\r\n    public maxY: number;\r\n\r\n    public constructor() {\r\n        this.minX = 0;\r\n        this.maxX = 0;\r\n        this.minY = 0;\r\n        this.maxY = 0;\r\n    }\r\n\r\n    public get center(): number[] {\r\n        return [\r\n            0.5 * (this.maxX + this.minX),\r\n            0.5 * (this.maxY + this.minY),\r\n        ];\r\n    }\r\n\r\n    public get maxDimension(): number {\r\n        return Math.max(this.maxX - this.minX, this.maxY - this.minY);\r\n    }\r\n\r\n    public includePoint(x: number, y: number) {\r\n        this.minX = Math.min(this.minX, x);\r\n        this.minY = Math.min(this.minY, y);\r\n\r\n        this.maxX = Math.max(this.maxX, x);\r\n        this.maxY = Math.max(this.maxY, y);\r\n    }\r\n}\r\n\r\nexport default Boundaries;\r\n","import { ControlsID, Parameters } from \"../parameters\";\r\nimport Attractor from \"./attractor\";\r\n\r\ndeclare const Controls: any;\r\n\r\nclass CliffordAttractor extends Attractor {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    public get name(): string {\r\n        return \"Clifford\";\r\n    }\r\n\r\n    public get formula(): string {\r\n        return `x_{n+1} = sin(a*y_{n}) + c*cos(a*x_{n})\r\n        y_{n+1} = sin(c*x_{n}) + d*cos(b*y_{n})`;\r\n    }\r\n\r\n    public get parameters(): string[] {\r\n        return [\r\n            \"a = \" + Parameters.a,\r\n            \"b = \" + Parameters.b,\r\n            \"c = \" + Parameters.c,\r\n            \"d = \" + Parameters.d,\r\n        ];\r\n    }\r\n\r\n    public toggleParametersVisibility(): void {\r\n        Controls.setVisibility(ControlsID.A, true);\r\n        Controls.setVisibility(ControlsID.B, true);\r\n        Controls.setVisibility(ControlsID.C, true);\r\n        Controls.setVisibility(ControlsID.D, true);\r\n    }\r\n\r\n    protected computeXPoints(nbPoints: number): Float32Array {\r\n        const data = new Float32Array(2 * nbPoints);\r\n\r\n        const a = Parameters.a;\r\n        const b = Parameters.b;\r\n        const c = Parameters.c;\r\n        const d = Parameters.d;\r\n\r\n        this.x = Math.random() * 2 - 1;\r\n        this.y = Math.random() * 2 - 1;\r\n\r\n        const computeNextPoint = (i: number) => {\r\n            data[2 * i + 0] = Math.sin(a * this.y) + c * Math.cos(a * this.x);\r\n            data[2 * i + 1] = Math.sin(c * this.x) + d * Math.cos(b * this.y);\r\n\r\n            this.x = data[2 * i + 0];\r\n            this.y = data[2 * i + 1];\r\n        };\r\n\r\n        this.fillData(nbPoints, computeNextPoint);\r\n\r\n        return data;\r\n    }\r\n}\r\n\r\nexport default CliffordAttractor;\r\n","import { ControlsID, Parameters } from \"../parameters\";\r\nimport Attractor from \"./attractor\";\r\n\r\ndeclare const Controls: any;\r\n\r\nclass DeJongAttractor extends Attractor {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    public get name(): string {\r\n        return \"De Jong\";\r\n    }\r\n\r\n    public get formula(): string {\r\n        return `x_{n+1} = sin(a*y_{n}) - cos(b*x_{n})\r\n        y_{n+1} = sin(c*x_{n}) - cos(d*y_{n})`;\r\n    }\r\n\r\n    public get parameters(): string[] {\r\n        return [\r\n            \"a = \" + Parameters.a,\r\n            \"b = \" + Parameters.b,\r\n            \"c = \" + Parameters.c,\r\n            \"d = \" + Parameters.d,\r\n        ];\r\n    }\r\n\r\n    public toggleParametersVisibility(): void {\r\n        Controls.setVisibility(ControlsID.A, true);\r\n        Controls.setVisibility(ControlsID.B, true);\r\n        Controls.setVisibility(ControlsID.C, true);\r\n        Controls.setVisibility(ControlsID.D, true);\r\n    }\r\n\r\n    protected computeXPoints(nbPoints: number): Float32Array {\r\n        const data = new Float32Array(2 * nbPoints);\r\n\r\n        const a = Parameters.a;\r\n        const b = Parameters.b;\r\n        const c = Parameters.c;\r\n        const d = Parameters.d;\r\n\r\n        this.x = Math.random() * 2 - 1;\r\n        this.y = Math.random() * 2 - 1;\r\n\r\n        const computeNextPoint = (i: number) => {\r\n            data[2 * i + 0] = Math.sin(a * this.y) - Math.cos(b * this.x);\r\n            data[2 * i + 1] = Math.sin(c * this.x) - Math.cos(d * this.y);\r\n\r\n            this.x = data[2 * i + 0];\r\n            this.y = data[2 * i + 1];\r\n        };\r\n\r\n        this.fillData(nbPoints, computeNextPoint);\r\n\r\n        return data;\r\n    }\r\n}\r\n\r\nexport default DeJongAttractor;\r\n","import { ControlsID, Parameters } from \"../parameters\";\r\nimport Attractor from \"./attractor\";\r\n\r\ndeclare const Controls: any;\r\n\r\nclass FractalDreamAttractor extends Attractor {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    public get name(): string {\r\n        return \"Fractal Dream\";\r\n    }\r\n\r\n    public get formula(): string {\r\n        return `x_{n+1} = sin(b*y_{n}) + c*sin(b*x_{n})\r\n        y_{n+1} = sin(a*x_{n}) + d*sin(a*y_{n})`;\r\n    }\r\n\r\n    public get parameters(): string[] {\r\n        return [\r\n            \"a = \" + Parameters.a,\r\n            \"b = \" + Parameters.b,\r\n            \"c = \" + Parameters.c,\r\n            \"d = \" + Parameters.d,\r\n        ];\r\n    }\r\n\r\n    public toggleParametersVisibility(): void {\r\n        Controls.setVisibility(ControlsID.A, true);\r\n        Controls.setVisibility(ControlsID.B, true);\r\n        Controls.setVisibility(ControlsID.C, true);\r\n        Controls.setVisibility(ControlsID.D, true);\r\n    }\r\n\r\n    protected computeXPoints(nbPoints: number): Float32Array {\r\n        const data = new Float32Array(2 * nbPoints);\r\n\r\n        const a = Parameters.a;\r\n        const b = Parameters.b;\r\n        const c = Parameters.c;\r\n        const d = Parameters.d;\r\n\r\n        this.x = Math.random() * 2 - 1;\r\n        this.y = Math.random() * 2 - 1;\r\n\r\n        const computeNextPoint = (i: number) => {\r\n            data[2 * i + 0] = Math.sin(b * this.y) + c * Math.sin(b * this.x);\r\n            data[2 * i + 1] = Math.sin(a * this.x) + d * Math.sin(a * this.y);\r\n\r\n            this.x = data[2 * i + 0];\r\n            this.y = data[2 * i + 1];\r\n        };\r\n\r\n        this.fillData(nbPoints, computeNextPoint);\r\n\r\n        return data;\r\n    }\r\n}\r\n\r\nexport default FractalDreamAttractor;\r\n","import * as GLCanvas from \"../gl-utils/gl-canvas\";\r\nimport { gl } from \"../gl-utils/gl-canvas\";\r\nimport Viewport from \"../gl-utils/viewport\";\r\n\r\nimport CompositingBase from \"./compositing\";\r\n\r\nclass CompositingDark extends CompositingBase {\r\n    public constructor() {\r\n        super();\r\n        this.backgroundColor = \"black\";\r\n        this.foregroundColor = \"white\";\r\n    }\r\n\r\n    public initialize(): void {\r\n        gl.clearColor(0, 0, 0, 1);\r\n\r\n        gl.enable(gl.BLEND);\r\n        gl.blendFunc(gl.ONE, gl.ONE);\r\n        gl.blendEquation(gl.FUNC_ADD);\r\n\r\n        GLCanvas.adjustSize();\r\n        Viewport.setFullCanvas(gl);\r\n        gl.clear(gl.COLOR_BUFFER_BIT);\r\n    }\r\n\r\n    /* tslint:disable:no-empty */\r\n    public bindTopLayer(): void {}\r\n    public compose(): void {}\r\n    /* tslint:enable:no-empty */\r\n}\r\n\r\nexport default CompositingDark;\r\n","import * as GLCanvas from \"../gl-utils/gl-canvas\";\r\nimport { gl } from \"../gl-utils/gl-canvas\";\r\nimport Viewport from \"../gl-utils/viewport\";\r\n\r\nimport CompositingBase from \"./compositing\";\r\n\r\nclass CompositingLight extends CompositingBase {\r\n    public constructor() {\r\n        super();\r\n        this.backgroundColor = \"white\";\r\n        this.foregroundColor = \"black\";\r\n    }\r\n\r\n    public initialize(): void {\r\n        gl.clearColor(1, 1, 1, 1);\r\n\r\n        gl.enable(gl.BLEND);\r\n        gl.blendFunc(gl.ONE, gl.ONE);\r\n        gl.blendEquation(gl.FUNC_REVERSE_SUBTRACT);\r\n\r\n        GLCanvas.adjustSize();\r\n        Viewport.setFullCanvas(gl);\r\n        gl.clear(gl.COLOR_BUFFER_BIT);\r\n    }\r\n\r\n    /* tslint:disable:no-empty */\r\n    public bindTopLayer(): void {}\r\n    public compose(): void {}\r\n    /* tslint:enable:no-empty */\r\n}\r\n\r\nexport default CompositingLight;\r\n"],"sourceRoot":""}