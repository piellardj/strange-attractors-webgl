{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/ts/gl-utils/gl-canvas.ts","webpack:///./src/ts/parameters.ts","webpack:///./src/ts/attractors/attractor.ts","webpack:///./src/ts/infos.ts","webpack:///./src/ts/gl-utils/gl-resource.ts","webpack:///./src/ts/gl-utils/viewport.ts","webpack:///./src/ts/compositing/compositing.ts","webpack:///./src/ts/gl-utils/shader-manager.ts","webpack:///./src/ts/gl-utils/vbo.ts","webpack:///./src/ts/main.ts","webpack:///./src/ts/attractors/bedhead.ts","webpack:///./src/ts/gl-utils/shader.ts","webpack:///./src/ts/gl-utils/shader-sources.ts","webpack:///./src/ts/attractors/boundaries.ts","webpack:///./src/ts/attractors/clifford.ts","webpack:///./src/ts/attractors/de-jong.ts","webpack:///./src/ts/attractors/fractal-dream.ts","webpack:///./src/ts/compositing/compositing-color.ts","webpack:///./src/ts/gl-utils/fbo.ts","webpack:///./src/ts/compositing/compositing-dark.ts","webpack:///./src/ts/compositing/compositing-light.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","gl","initGL","flags","setError","message","Page","Demopage","setErrorMessage","canvas","Canvas","getCanvas","getContext","disable","CULL_FACE","DEPTH_TEST","BLEND","clearColor","adjustSize","hidpi","cssPixel","window","devicePixelRatio","width","Math","floor","clientWidth","height","clientHeight","attractorNames","DeJong","Bedhead","Clifford","FractalDream","compositingNames","dark","light","color","controlId","ATTRACTOR","A","B","C","D","FORMULA","INDICATORS","INTENSITY","QUALITY","COMPOSITING","FOREGROUND","BACKGROUND","DOWNLOAD_SIZE","DOWNLOAD","callObservers","observersList","observer","ControlsID","attractor","a","b","intensity","quality","compositing","foregroundHue","backgroundHue","nbPointsNeeded","observers","updateNbPointsNeeded","Parameters","computeNbPointsNeeded","getSize","setCompositing","isColor","Controls","setVisibility","att","Picker","setValue","canvasSize","minDimension","min","addObserver","Range","newvalue","getValue","Checkbox","checked","Infos","isChecked","needToClear","Tabs","newValue","getValues","setIndicatorsVisibility","Observers","canvasResize","push","shader","pointsVBO","ShaderManager","buildShader","fragmentFilename","vertexFilename","injected","newShader","fillData","Float32Array","FLOAT","this","boundaries","drawXPoints","nbPoints","data","computeXPoints","setData","aspectRatio","VBO","q","u","center","maxDimension","max","use","bindUniformsAndAttributes","drawArrays","POINTS","reset","toggleParametersVisibility","setTitle","setFormula","formula","setParameters","parameters","computeNextPoint","includePoint","x","y","Attractor","fontLink","colorsStylesheet","FONT_NAME","fontColor","backgroundColor","document","createElement","href","replace","rel","head","appendChild","infosCss","infosStyle","setAttribute","styleSheet","cssText","createTextNode","infosColorsStyle","sheet","setColors","titleElt","className","formulaElt","parametersElt","infosBlockElt","newFontColor","newBackgroundColor","cssRules","length","deleteRule","insertRule","visible","style","display","parentElement","title","textContent","frame","op","f","frameNode","node","html","str","$1","innerHTML","join","drawToCanvas","ctx","setFontSize","sizeInPx","font","drawBackground","previousFillStyle","fillStyle","fillRect","textAlign","textBaseline","top","BLOCK_MARGIN","fontSize","fillText","split","forEach","dLeft","currIndex","writeText","text","measureText","findNext","nodeName","indexOf","index","substring","line","_gl","GLResource","left","lower","setFullCanvas","viewport","drawingBufferWidth","drawingBufferHeight","set","Viewport","CompositingBase","cachedShaders","infos","callback","sourcesPending","sourcesFailed","loadedSource","success","processSource","source","match","vert","ShaderSources","getSource","frag","processedVert","processedFrag","loadSource","getShader","registerShader","callAndClearCallbacks","cached","callbacks","cachedCallback","failed","pending","builtShader","deleteShader","freeGLResources","Usage","array","size","type","staticUsage","id","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","DYNAMIC_DRAW","normalize","stride","offset","usage","STATIC","DYNAMIC","createQuad","minX","minY","maxX","maxY","deleteBuffer","location","enableVertexAttribArray","vertexAttribPointer","GLCanvas","alpha","depth","preserveDrawingBuffer","needToRestartRendering","clearObservers","attractors","totalPoints","shouldComposeAgain","compositings","setTotalPoints","total","setIndicatorText","toLocaleString","shouldComposeAgainObservers","MAX_STEP_SIZE","pow","FileControl","addDownloadObserver","figureSize","confirm","canvas2D","ctx2D","canvasGL","showLoader","position","initialize","maxStepSize","bindTopLayer","stepSize","ceil","compose","drawImage","setLoaderText","msToBlob","blob","navigator","msSaveBlob","toBlob","link","download","URL","createObjectURL","click","requestAnimationFrame","mainLoop","foregroundColor","updateColors","main","random","sin","cos","BeadheadAttractor","notImplemented","alert","types","binder","uniform2fv","uniform3fv","uniform4fv","uniform2iv","uniform3iv","uniform4iv","uniform1i","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","unitNb","activeTexture","bindTexture","TEXTURE_2D","TEXTURE_CUBE_MAP","Array","isArray","uniform1iv","uniform1fv","uniform1f","vertexSource","fragmentSource","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","console","error","getShaderInfoLog","uCount","aCount","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","introspection","getProgramInfoLog","deleteProgram","useProgram","bindUniforms","currTextureUnitNb","keys","uName","uniform","loc","bindAttributes","aName","attribute","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","ShaderProgram","cachedSources","filename","XMLHttpRequest","open","onload","readyState","status","responseText","statusText","onerror","send","Boundaries","CliffordAttractor","DeJongAttractor","FractalDreamAttractor","HSVToRGB","hue","saturation","g","_compositionShader","_FBO","_currentTextureSize","initializeTexture","minSize","neededSize","log","LOG2E","enable","blendFunc","ONE","blendEquation","FUNC_ADD","_texture","clear","COLOR_BUFFER_BIT","bindDefault","_foregroundRgb","_backgroundRgb","TRIANGLE_STRIP","normalizedTo255","rgbaToString","rgb","deleteTexture","uintTexels","uintData","Uint8Array","createTexture","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","REPEAT","TEXTURE_WRAP_T","CompositingColor","createFramebuffer","bindFramebuffer","FRAMEBUFFER","colorBuffers","depthBuffer","framebufferTexture2D","bindRenderbuffer","RENDERBUFFER","framebufferRenderbuffer","DEPTH_ATTACHMENT","deleteFramebuffer","FBO","CompositingDark","FUNC_REVERSE_SUBTRACT","CompositingLight"],"mappings":"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","file":"main.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","import \"../page-interface-generated\";\r\n\r\nlet gl: WebGLRenderingContext = null;\r\n\r\n/** Initializes a WebGL context */\r\nfunction initGL(flags: any): boolean {\r\n    function setError(message: string) {\r\n        Page.Demopage.setErrorMessage(\"webgl-support\", message);\r\n    }\r\n\r\n    const canvas = Page.Canvas.getCanvas();\r\n\r\n    gl = canvas.getContext(\"webgl\", flags) as WebGLRenderingContext;\r\n    if (gl == null) {\r\n        gl = canvas.getContext(\"experimental-webgl\", flags) as WebGLRenderingContext;\r\n        if (gl == null) {\r\n            setError(\"Your browser or device does not seem to support WebGL.\");\r\n            return false;\r\n        }\r\n\r\n        setError(\"Your browser or device only supports experimental WebGL.\\n\" +\r\n            \"The simulation may not run as expected.\");\r\n    }\r\n\r\n    gl.disable(gl.CULL_FACE);\r\n    gl.disable(gl.DEPTH_TEST);\r\n    gl.disable(gl.BLEND);\r\n    gl.clearColor(0, 0, 0, 1);\r\n\r\n    return true;\r\n}\r\n\r\n/* Adjusts the GL canvas size to the actual canvas element size on the page */\r\nfunction adjustSize(hidpi: boolean = false): void {\r\n    const cssPixel: number = (hidpi) ? window.devicePixelRatio : 1;\r\n    const canvas = gl.canvas as HTMLCanvasElement;\r\n\r\n    const width: number = Math.floor(canvas.clientWidth * cssPixel);\r\n    const height: number = Math.floor(canvas.clientHeight * cssPixel);\r\n    if (canvas.width !== width || canvas.height !== height) {\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n    }\r\n}\r\n\r\nexport {\r\n    adjustSize,\r\n    initGL,\r\n    gl,\r\n};\r\n","import * as Infos from \"./infos\";\r\n\r\nimport \"./page-interface-generated\";\r\n\r\nconst attractorNames = {\r\n    DeJong: \"de-jong\",\r\n    Bedhead: \"bedhead\",\r\n    Clifford: \"clifford\",\r\n    FractalDream: \"fractal-dream\",\r\n};\r\n\r\nconst compositingNames = {\r\n    dark: \"dark\",\r\n    light: \"light\",\r\n    color: \"color\",\r\n};\r\n\r\n/* === IDs ============================================================ */\r\nconst controlId = {\r\n    ATTRACTOR: \"attractor-picker-id\",\r\n    A: \"a-range-id\",\r\n    B: \"b-range-id\",\r\n    C: \"c-range-id\",\r\n    D: \"d-range-id\",\r\n    FORMULA: \"formula-checkbox-id\",\r\n    INDICATORS: \"indicators-checkbox-id\",\r\n    INTENSITY: \"intensity-range-id\",\r\n    QUALITY: \"quality-range-id\",\r\n    COMPOSITING: \"compositing\",\r\n    FOREGROUND: \"foreground-range-id\",\r\n    BACKGROUND: \"background-range-id\",\r\n    DOWNLOAD_SIZE: \"download-size\",\r\n    DOWNLOAD: \"file-download-id\",\r\n};\r\n\r\n/* === OBSERVERS ====================================================== */\r\ntype GenericObserver = () => void;\r\n\r\nfunction callObservers(observersList: any[]): void {\r\n    for (const observer of observersList) {\r\n        observer();\r\n    }\r\n}\r\n\r\nconst observers: {\r\n    clear: GenericObserver[],\r\n    shouldComposeAgain: GenericObserver[],\r\n} = {\r\n    clear: [],\r\n    shouldComposeAgain: [],\r\n};\r\n\r\nlet attractor: string;\r\nlet a: number;\r\nlet b: number;\r\nlet c: number;\r\nlet d: number;\r\n\r\nlet intensity: number;\r\nlet quality: number;\r\nlet compositing: string;\r\nlet foregroundHue: number;\r\nlet backgroundHue: number;\r\nlet nbPointsNeeded: number;\r\n\r\nfunction updateNbPointsNeeded() {\r\n    nbPointsNeeded = Parameters.computeNbPointsNeeded(Page.Canvas.getSize());\r\n}\r\n\r\nfunction setCompositing(name: string) {\r\n    const isColor = (name === compositingNames.color);\r\n    Page.Controls.setVisibility(controlId.FOREGROUND, isColor);\r\n    Page.Controls.setVisibility(controlId.BACKGROUND, isColor);\r\n\r\n    compositing = name;\r\n    callObservers(observers.clear);\r\n}\r\n\r\n/* === INTERFACE ====================================================== */\r\nclass Parameters {\r\n    public static get attractor(): string {\r\n        return attractor;\r\n    }\r\n    public static set attractor(att: string) {\r\n        Page.Picker.setValue(controlId.ATTRACTOR, att);\r\n        attractor = att;\r\n    }\r\n\r\n    public static get a(): number {\r\n        return a;\r\n    }\r\n\r\n    public static get b(): number {\r\n        return b;\r\n    }\r\n\r\n    public static get c(): number {\r\n        return c;\r\n    }\r\n\r\n    public static get d(): number {\r\n        return d;\r\n    }\r\n\r\n    public static get nbPointsNeeded(): number {\r\n        return nbPointsNeeded;\r\n    }\r\n\r\n    public static get quality(): number {\r\n        return quality;\r\n    }\r\n\r\n    public static get compositing(): string {\r\n        return compositing;\r\n    }\r\n\r\n    public static get foregroundHue(): number {\r\n        return foregroundHue;\r\n    }\r\n\r\n    public static get backgroundHue(): number {\r\n        return backgroundHue;\r\n    }\r\n\r\n    public static get clearObservers(): GenericObserver[] {\r\n        return observers.clear;\r\n    }\r\n\r\n    public static get shouldComposeAgainObservers(): GenericObserver[] {\r\n        return observers.shouldComposeAgain;\r\n    }\r\n\r\n    public static computeNbPointsNeeded(canvasSize: number[]): number {\r\n        const minDimension = Math.min(canvasSize[0], canvasSize[1]);\r\n        return intensity / (256 * quality) * minDimension * minDimension;\r\n    }\r\n\r\n    private constructor() {}\r\n}\r\n\r\n/* === EVENTS BINDING ================================================= */\r\n/* --- PARAMETERS ----------------------------------------------------- */\r\nPage.Picker.addObserver(controlId.ATTRACTOR, (value: string) => {\r\n    attractor = value;\r\n    callObservers(observers.clear);\r\n});\r\n\r\nPage.Range.addObserver(controlId.A, (newvalue: number) => {\r\n    a = newvalue;\r\n    callObservers(observers.clear);\r\n});\r\na = Page.Range.getValue(controlId.A);\r\n\r\nPage.Range.addObserver(controlId.B, (newvalue: number) => {\r\n    b = newvalue;\r\n    callObservers(observers.clear);\r\n});\r\nb = Page.Range.getValue(controlId.B);\r\n\r\nPage.Range.addObserver(controlId.C, (newvalue: number) => {\r\n    c = newvalue;\r\n    callObservers(observers.clear);\r\n});\r\nc = Page.Range.getValue(controlId.C);\r\n\r\nPage.Range.addObserver(controlId.D, (newvalue: number) => {\r\n    d = newvalue;\r\n    callObservers(observers.clear);\r\n});\r\nd = Page.Range.getValue(controlId.D);\r\n\r\nPage.Checkbox.addObserver(controlId.FORMULA, (checked: boolean) => {\r\n    Infos.setVisibility(checked);\r\n});\r\nInfos.setVisibility(Page.Checkbox.isChecked(controlId.FORMULA));\r\n\r\nPage.Range.addObserver(controlId.INTENSITY, (newvalue: number) => {\r\n    const needToClear = (newvalue < intensity);\r\n    intensity = newvalue;\r\n    updateNbPointsNeeded();\r\n\r\n    if (needToClear) {\r\n        callObservers(observers.clear);\r\n    }\r\n});\r\nintensity = Page.Range.getValue(controlId.INTENSITY);\r\n\r\nPage.Range.addObserver(controlId.QUALITY, (newvalue: number) => {\r\n    quality = 1 - (254 / 255) * newvalue;\r\n    updateNbPointsNeeded();\r\n    callObservers(observers.clear);\r\n});\r\nquality = 1 - (254 / 255) * Page.Range.getValue(controlId.QUALITY);\r\n\r\nPage.Tabs.addObserver(controlId.COMPOSITING, (newValue: string[]) => {\r\n    setCompositing(\"\" + newValue[0]);\r\n});\r\nsetCompositing(\"\" + Page.Tabs.getValues(controlId.COMPOSITING));\r\n\r\nPage.Range.addObserver(controlId.FOREGROUND, (newValue: number) => {\r\n    foregroundHue = newValue;\r\n    callObservers(observers.shouldComposeAgain);\r\n});\r\nforegroundHue = Page.Range.getValue(controlId.FOREGROUND);\r\n\r\nPage.Range.addObserver(controlId.BACKGROUND, (newValue: number) => {\r\n    backgroundHue = newValue;\r\n    callObservers(observers.shouldComposeAgain);\r\n});\r\nbackgroundHue = Page.Range.getValue(controlId.BACKGROUND);\r\n\r\nPage.Checkbox.addObserver(controlId.INDICATORS, (checked: boolean) => {\r\n    Page.Canvas.setIndicatorsVisibility(checked);\r\n});\r\nPage.Canvas.setIndicatorsVisibility(Page.Checkbox.isChecked(controlId.INDICATORS));\r\n\r\nPage.Canvas.Observers.canvasResize.push(updateNbPointsNeeded);\r\nupdateNbPointsNeeded();\r\n\r\nexport {\r\n    attractorNames,\r\n    compositingNames,\r\n    controlId as ControlsID,\r\n    Parameters,\r\n};\r\n","import { gl } from \"../gl-utils/gl-canvas\";\r\nimport Shader from \"../gl-utils/shader\";\r\nimport * as ShaderManager from \"../gl-utils/shader-manager\";\r\nimport VBO from \"../gl-utils/vbo\";\r\n\r\nimport * as Infos from \"../infos\";\r\nimport { Parameters } from \"../parameters\";\r\nimport Boundaries from \"./boundaries\";\r\n\r\nlet shader: Shader = null;\r\nlet pointsVBO: VBO = null;\r\n\r\nimport \"../page-interface-generated\";\r\n\r\nabstract class Attractor {\r\n    protected boundaries: Boundaries;\r\n    protected x: number;\r\n    protected y: number;\r\n\r\n    constructor() {\r\n        if (shader === null) {\r\n            ShaderManager.buildShader(\r\n                {\r\n                    fragmentFilename: \"points.frag\",\r\n                    vertexFilename: \"points.vert\",\r\n                    injected: {},\r\n                },\r\n                (newShader) => {\r\n                    if (newShader !== null) {\r\n                        shader = newShader;\r\n                    }\r\n                },\r\n            );\r\n        }\r\n\r\n        if (pointsVBO === null) {\r\n            const fillData = new Float32Array(2);\r\n            pointsVBO = new VBO(gl, fillData, 2, gl.FLOAT, false);\r\n        }\r\n\r\n        this.boundaries = null;\r\n    }\r\n\r\n    public drawXPoints(nbPoints: number): boolean {\r\n        if (shader) {\r\n            const data = this.computeXPoints(nbPoints);\r\n            pointsVBO.setData(data);\r\n\r\n            const canvasSize = Page.Canvas.getSize();\r\n            const aspectRatio = canvasSize[0] / canvasSize[1];\r\n\r\n            /* tslint:disable:no-string-literal */\r\n            shader.a[\"aCoords\"].VBO = pointsVBO;\r\n            const q = Parameters.quality;\r\n            shader.u[\"uColor\"].value = [q, q, q, 1];\r\n            shader.u[\"uCenter\"].value = this.boundaries.center;\r\n            const maxDimension = 0.5 + this.boundaries.maxDimension;\r\n            shader.u[\"uScale\"].value = [\r\n                2 / maxDimension / Math.max(aspectRatio, 1),\r\n                2 / maxDimension * Math.min(aspectRatio, 1),\r\n            ];\r\n            /* tslint:enable:no-string-literal */\r\n\r\n            shader.use();\r\n            shader.bindUniformsAndAttributes();\r\n\r\n            gl.drawArrays(gl.POINTS, 0, nbPoints);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public reset(): void {\r\n        this.toggleParametersVisibility();\r\n        Infos.setTitle(this.name);\r\n        Infos.setFormula(this.formula);\r\n        Infos.setParameters(this.parameters);\r\n        this.boundaries = null;\r\n    }\r\n\r\n    /* For infos block display */\r\n    public abstract get name(): string;\r\n    public abstract get formula(): string;\r\n    public abstract get parameters(): string[];\r\n\r\n    public abstract toggleParametersVisibility(): void;\r\n\r\n    /* Should update minX, maxX, minY and maxY */\r\n    protected abstract computeXPoints(nbPoints: number): Float32Array;\r\n\r\n    protected fillData(nbPoints: number, computeNextPoint: (pointIndex: number) => void) {\r\n        /* ignore the first few ones */\r\n        for (let i = 0; i < 10; ++i) {\r\n            computeNextPoint(0);\r\n        }\r\n\r\n        if (this.boundaries === null) {\r\n            this.boundaries = new Boundaries();\r\n\r\n            for (let i = 0; i < nbPoints; ++i) {\r\n                computeNextPoint(i);\r\n                this.boundaries.includePoint(this.x, this.y);\r\n            }\r\n        } else {\r\n            for (let i = 0; i < nbPoints; ++i) {\r\n                computeNextPoint(i);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Attractor;\r\n","import \"./page-interface-generated\";\r\n\r\nconst FONT_NAME = \"Nothing You Could Do\";\r\nconst BLOCK_MARGIN = 8;\r\nconst BLOCK_PADDING = 8;\r\nconst TITLE_FONT_SIZE = 24;\r\nconst FONT_SIZE = 20;\r\nconst SUB_FONT_SIZE = 16;\r\n\r\nlet fontColor: string = \"blue\";\r\nlet backgroundColor: string = \"red\";\r\n\r\n(function registerFont() {\r\n    const fontLink = document.createElement(\"link\");\r\n    fontLink.href = \"https://fonts.googleapis.com/css?family=\" + FONT_NAME.replace(\" \", \"+\");\r\n    fontLink.rel = \"stylesheet\";\r\n    document.head.appendChild(fontLink);\r\n})();\r\n\r\nlet colorsStylesheet: any; // really a StyleSheet but Typescript definitions are incomplete\r\n(function registerCss() {\r\n    const infosCss =\r\n    `.infos {\r\n        position: absolute;\r\n        bottom: 0;\r\n        left: 0;\r\n        line-height: 1em;\r\n        margin: ` + BLOCK_MARGIN + `px;\r\n        text-align: left;\r\n        font-family: '` + FONT_NAME + `', cursive;\r\n        font-size: ` + FONT_SIZE + `px;\r\n    }\r\n    .infos sub {\r\n        font-size: ` + SUB_FONT_SIZE + `px;\r\n    }\r\n    .infos div {\r\n        padding: ` + BLOCK_PADDING + `px;\r\n    }\r\n    .infos .attractor-name {\r\n        display: inline-block;\r\n        font-size: ` + TITLE_FONT_SIZE + `px;\r\n    }\r\n    .infos .attractor-parameters {\r\n        display: inline-block;\r\n    }`;\r\n\r\n    const infosStyle = document.createElement(\"style\");\r\n    infosStyle.setAttribute(\"type\", \"text/css\");\r\n    if ((infosStyle as any).styleSheet) {   // IE\r\n        (infosStyle as any).styleSheet.cssText = infosCss;\r\n    } else {\r\n        infosStyle.appendChild(document.createTextNode(infosCss));\r\n    }\r\n    document.head.appendChild(infosStyle);\r\n\r\n    const infosColorsStyle = document.createElement(\"style\");\r\n    document.head.appendChild(infosColorsStyle);\r\n    colorsStylesheet = infosColorsStyle.sheet;\r\n})();\r\n\r\nsetColors(\"white\", \"black\");\r\n\r\nconst titleElt = document.createElement(\"div\");\r\ntitleElt.className = \"attractor-name\";\r\nconst formulaElt = document.createElement(\"div\");\r\nconst parametersElt = document.createElement(\"div\");\r\nparametersElt.className = \"attractor-parameters\";\r\n\r\nconst infosBlockElt = document.createElement(\"div\");\r\ninfosBlockElt.className = \"infos\";\r\ninfosBlockElt.appendChild(titleElt);\r\ninfosBlockElt.appendChild(formulaElt);\r\ninfosBlockElt.appendChild(parametersElt);\r\nsetVisibility(false);\r\n\r\nconst canvasContainer = (Page.Canvas.getCanvas() as HTMLElement).parentElement;\r\ncanvasContainer.appendChild(infosBlockElt);\r\n\r\nfunction setColors(newFontColor: string, newBackgroundColor: string) {\r\n    fontColor = newFontColor;\r\n    backgroundColor = newBackgroundColor;\r\n\r\n    while (colorsStylesheet.cssRules.length > 0) {\r\n        colorsStylesheet.deleteRule(0);\r\n    }\r\n    colorsStylesheet.insertRule(\".infos { color: \" + fontColor + \"; }\", 0);\r\n    colorsStylesheet.insertRule(\".infos div { background: \" + backgroundColor + \"; }\", 0);\r\n}\r\n\r\nfunction setVisibility(visible: boolean) {\r\n    infosBlockElt.style.display = visible ? \"\" : \"none\";\r\n}\r\n\r\nfunction setTitle(title: string) {\r\n    titleElt.textContent = title;\r\n}\r\n\r\nfunction setFormula(formula: string) {\r\n    function frame(op: string, f: string) {\r\n        return f + op + f;\r\n    }\r\n    function frameNode(op: string, node: string) {\r\n        return \"<\" + node + \">\" + op + \"</\" + node + \">\";\r\n    }\r\n\r\n    const SPACE = \" \";\r\n    const HALF_SPACE = \"&#8239;\";\r\n\r\n    let html = formula.replace(/\\s*\\*\\s*/g, frame(\"&times\", HALF_SPACE));\r\n    html = html.replace(/\\s*\\/\\s*/g, frame(\"&divide\", HALF_SPACE));\r\n    html = html.replace(/\\s*\\+\\s*/g, frame(\"+\", SPACE));\r\n    html = html.replace(/\\s*-\\s*/g, frame(\"-\", SPACE));\r\n    html = html.replace(/\\s*=\\s*/g, frame(\"=\", SPACE));\r\n    html = html.replace(/\\s*n\\s*\\+\\s*1\\s*/g, \"n\" + frame(\"+\", HALF_SPACE) + \"1\");\r\n    html = html.replace(/\\n/g, \"<br/>\");\r\n    html = html.replace(/_{([^}]*)}/g, (str, $1) => frameNode($1, \"sub\"));\r\n    html = html.replace(/\\^{([^}]*)}/g, (str, $1) => frameNode($1, \"sup\"));\r\n\r\n    formulaElt.innerHTML = html;\r\n}\r\n\r\nfunction setParameters(parameters: string[]) {\r\n    parametersElt.innerHTML = parameters.join(\"<br/>\");\r\n}\r\n\r\nfunction drawToCanvas(ctx: CanvasRenderingContext2D) {\r\n    function setFontSize(sizeInPx: number) {\r\n        ctx.font = sizeInPx + \"px \" + FONT_NAME;\r\n    }\r\n\r\n    function drawBackground(x: number, y: number, width: number, height: number) {\r\n        const previousFillStyle = ctx.fillStyle;\r\n        ctx.fillStyle = backgroundColor;\r\n        ctx.fillRect(x, y, width, height);\r\n        ctx.fillStyle = previousFillStyle;\r\n    }\r\n\r\n    drawBackground(BLOCK_MARGIN, BLOCK_MARGIN, titleElt.clientWidth, titleElt.clientHeight);\r\n    ctx.fillStyle = fontColor;\r\n    ctx.textAlign = \"left\";\r\n    ctx.textBaseline = \"top\";\r\n\r\n    const blockLeft = BLOCK_MARGIN + BLOCK_PADDING;\r\n    let top = BLOCK_MARGIN + BLOCK_PADDING;\r\n\r\n    let fontSize = TITLE_FONT_SIZE;\r\n    setFontSize(fontSize);\r\n    ctx.fillText(titleElt.textContent, blockLeft, top);\r\n    top += 2 * FONT_SIZE;\r\n\r\n    fontSize = FONT_SIZE;\r\n    setFontSize(fontSize);\r\n\r\n    drawBackground(BLOCK_MARGIN, top - BLOCK_PADDING, formulaElt.clientWidth, formulaElt.clientHeight);\r\n\r\n    /* HTML tags cannot be used when drawing text on a canvas,\r\n     * so we need to handle manually tags such as br and sub. */\r\n    formulaElt.innerHTML.split(/\\s*<br\\/?>\\s*/g).forEach((str) => {\r\n        let dLeft = 0;\r\n        let currIndex = 0;\r\n\r\n        function writeText(text: string) {\r\n            ctx.fillText(text, blockLeft + dLeft, top);\r\n            dLeft += ctx.measureText(text).width;\r\n        }\r\n\r\n        function findNext(nodeName: string) {\r\n            const i = str.indexOf(nodeName, currIndex);\r\n            return (i < 0) ? str.length : i;\r\n        }\r\n\r\n        while (currIndex < str.length) {\r\n            let index = findNext(\"<sub>\");\r\n            writeText(str.substring(currIndex, index));\r\n            currIndex = index + 5; // 5 === \"<sub>\".length\r\n\r\n            index = findNext(\"</sub>\");\r\n            top += .4 * fontSize;\r\n            setFontSize(SUB_FONT_SIZE);\r\n            writeText(str.substring(currIndex, index));\r\n            top -= .4 * fontSize;\r\n            currIndex = index + 6; // 6 === \"</sub>\".length\r\n\r\n            setFontSize(fontSize);\r\n        }\r\n        top += 1.25 * fontSize;\r\n    });\r\n\r\n    top += 1 * FONT_SIZE;\r\n\r\n    drawBackground(BLOCK_MARGIN, top - BLOCK_PADDING, parametersElt.clientWidth, parametersElt.clientHeight);\r\n\r\n    parametersElt.innerHTML.split(/\\s*<br\\/?>\\s*/g).forEach((line) => {\r\n        ctx.fillText(line, blockLeft, top);\r\n        top += 1 * fontSize;\r\n    });\r\n}\r\n\r\nexport {\r\n    drawToCanvas,\r\n    setColors,\r\n    setFormula,\r\n    setParameters,\r\n    setTitle,\r\n    setVisibility,\r\n};\r\n","abstract class GLResource {\r\n    private _gl: WebGLRenderingContext;\r\n\r\n    constructor(gl: WebGLRenderingContext) {\r\n        this._gl = gl;\r\n    }\r\n\r\n    public gl(): WebGLRenderingContext {\r\n        return this._gl;\r\n    }\r\n\r\n    public abstract freeGLResources(): void;\r\n}\r\n\r\nexport default GLResource;\r\n","class Viewport {\r\n    public static setFullCanvas(gl: WebGLRenderingContext): void {\r\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\r\n    }\r\n\r\n    public lower: number;\r\n    public left: number;\r\n    public width: number;\r\n    public height: number;\r\n\r\n    constructor(left: number, lower: number, width: number, height: number) {\r\n        this.left = left;\r\n        this.lower = lower;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n\r\n    public set(gl: WebGLRenderingContext): void {\r\n        gl.viewport(this.lower, this.left, this.width, this.height);\r\n    }\r\n}\r\n\r\nexport default Viewport;\r\n","abstract class CompositingBase {\r\n    public backgroundColor: string;\r\n    public foregroundColor: string;\r\n\r\n    public abstract initialize(): void;\r\n    public abstract bindTopLayer(): void;\r\n    public abstract compose(): void;\r\n    public abstract updateColors(): void;\r\n}\r\n\r\nexport default CompositingBase;\r\n","import { gl } from \"./gl-canvas\";\r\nimport Shader from \"./shader\";\r\nimport * as ShaderSources from \"./shader-sources\";\r\n\r\ntype RegisterCallback = (success: boolean, shader: Shader | null) => void;\r\n\r\ninterface IShaderInfos {\r\n    fragmentFilename: string;\r\n    vertexFilename: string;\r\n    injected: { [id: string]: string };\r\n}\r\n\r\ninterface ICachedShader {\r\n    shader: Shader;\r\n    infos: IShaderInfos;\r\n    pending: boolean;\r\n    failed: boolean;\r\n    callbacks: RegisterCallback[];\r\n}\r\n\r\nconst cachedShaders: { [id: string]: ICachedShader} = {};\r\n\r\nfunction getShader(name: string): Shader | null {\r\n    return cachedShaders[name].shader;\r\n}\r\n\r\ntype BuildCallback = (builtShader: Shader | null) => void;\r\n\r\nfunction buildShader(infos: IShaderInfos, callback: BuildCallback) {\r\n    let sourcesPending = 2;\r\n    let sourcesFailed = 0;\r\n\r\n    function loadedSource(success: boolean) {\r\n        function processSource(source: string): string {\r\n            return source.replace(/#INJECT\\((.*)\\)/mg, (match, name) => {\r\n                if (infos.injected[name]) {\r\n                    return infos.injected[name];\r\n                }\r\n                return match;\r\n            });\r\n        }\r\n\r\n        sourcesPending--;\r\n        if (!success) {\r\n            sourcesFailed++;\r\n        }\r\n\r\n        if (sourcesPending === 0) {\r\n            let shader = null;\r\n\r\n            if (sourcesFailed === 0) {\r\n                const vert = ShaderSources.getSource(infos.vertexFilename);\r\n                const frag = ShaderSources.getSource(infos.fragmentFilename);\r\n\r\n                const processedVert = processSource(vert);\r\n                const processedFrag = processSource(frag);\r\n\r\n                shader = new Shader(gl, processedVert, processedFrag);\r\n            }\r\n\r\n            callback(shader);\r\n        }\r\n    }\r\n\r\n    ShaderSources.loadSource(infos.vertexFilename, loadedSource);\r\n    ShaderSources.loadSource(infos.fragmentFilename, loadedSource);\r\n}\r\n\r\nfunction registerShader(name: string, infos: IShaderInfos, callback: RegisterCallback): void {\r\n    function callAndClearCallbacks(cached: ICachedShader) {\r\n        for (const cachedCallback of cached.callbacks) {\r\n            cachedCallback(!cached.failed, cached.shader);\r\n        }\r\n\r\n        cached.callbacks = [];\r\n    }\r\n\r\n    if (typeof cachedShaders[name] === \"undefined\") {\r\n        cachedShaders[name] = {\r\n            callbacks: [callback],\r\n            failed: false,\r\n            infos,\r\n            pending: true,\r\n            shader: null,\r\n        };\r\n        const cached = cachedShaders[name];\r\n\r\n        buildShader(infos, (builtShader) => {\r\n            cached.pending = false;\r\n            cached.failed = builtShader === null;\r\n            cached.shader = builtShader;\r\n\r\n            callAndClearCallbacks(cached);\r\n        });\r\n    } else {\r\n        const cached = cachedShaders[name];\r\n\r\n        if (cached.pending === true) {\r\n            cached.callbacks.push(callback);\r\n        } else {\r\n            callAndClearCallbacks(cached);\r\n        }\r\n    }\r\n}\r\n\r\nfunction deleteShader(name: string) {\r\n    if (cachedShaders[name]) {\r\n        if (cachedShaders[name].shader) {\r\n            cachedShaders[name].shader.freeGLResources();\r\n        }\r\n        delete cachedShaders[name];\r\n    }\r\n}\r\n\r\nexport {\r\n    buildShader,\r\n    getShader,\r\n    IShaderInfos,\r\n    registerShader,\r\n    deleteShader,\r\n};\r\n","import GLResource from \"./gl-resource\";\r\n\r\nenum Usage {\r\n    DYNAMIC,\r\n    STATIC,\r\n}\r\n\r\nclass VBO extends GLResource {\r\n    public static createQuad(gl: WebGLRenderingContext, minX: number, minY: number, maxX: number, maxY: number): VBO {\r\n        const vert = [\r\n            minX, minY,\r\n            maxX, minY,\r\n            minX, maxY,\r\n            maxX, maxY,\r\n        ];\r\n\r\n        return new VBO(gl, new Float32Array(vert), 2, gl.FLOAT, true);\r\n    }\r\n\r\n    private id: WebGLBuffer;\r\n    private size: number;\r\n    private type: GLenum;\r\n    private normalize: GLboolean;\r\n    private stride: GLsizei;\r\n    private offset: GLintptr;\r\n    private usage: Usage;\r\n\r\n    constructor(gl: WebGLRenderingContext, array: any, size: number, type: GLenum, staticUsage: boolean = true) {\r\n        super(gl);\r\n\r\n        this.id = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.id);\r\n        if (staticUsage) {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.STATIC_DRAW);\r\n        } else {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.DYNAMIC_DRAW);\r\n        }\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n\r\n        this.size = size;\r\n        this.type = type;\r\n        this.normalize = false;\r\n        this.stride = 0;\r\n        this.offset = 0;\r\n        this.usage = (staticUsage) ? Usage.STATIC : Usage.DYNAMIC;\r\n    }\r\n\r\n    public freeGLResources(): void {\r\n        this.gl().deleteBuffer(this.id);\r\n        this.id = null;\r\n    }\r\n\r\n    public bind(location: GLuint): void {\r\n        const gl = super.gl();\r\n        gl.enableVertexAttribArray(location);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.id);\r\n        gl.vertexAttribPointer(location, this.size, this.type, this.normalize, this.stride, this.offset);\r\n    }\r\n\r\n    public setData(array: any): void {\r\n        const gl = super.gl();\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.id);\r\n        if (this.usage === Usage.STATIC) {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.STATIC_DRAW);\r\n        } else {\r\n            gl.bufferData(gl.ARRAY_BUFFER, array, gl.DYNAMIC_DRAW);\r\n        }\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n    }\r\n}\r\n\r\nexport default VBO;\r\n","import * as GLCanvas from \"./gl-utils/gl-canvas\";\r\nimport { gl } from \"./gl-utils/gl-canvas\";\r\n\r\nimport Attractor from \"./attractors/attractor\";\r\nimport BedHeadAttractor from \"./attractors/bedhead\";\r\nimport CliffordAttractor from \"./attractors/clifford\";\r\nimport DeJongAttractor from \"./attractors/de-jong\";\r\nimport FractalDreamAttractor from \"./attractors/fractal-dream\";\r\nimport * as Infos from \"./infos\";\r\nimport { attractorNames, compositingNames, ControlsID, Parameters } from \"./parameters\";\r\n\r\nimport Compositing from \"./compositing/compositing\";\r\nimport CompositingColor from \"./compositing/compositing-color\";\r\nimport CompositingDark from \"./compositing/compositing-dark\";\r\nimport CompositingLight from \"./compositing/compositing-light\";\r\n\r\nimport \"./page-interface-generated\";\r\n\r\nfunction main() {\r\n    initGL();\r\n\r\n    let needToRestartRendering = true;\r\n    Page.Canvas.Observers.canvasResize.push(() => needToRestartRendering = true);\r\n    Parameters.clearObservers.push(() => needToRestartRendering = true);\r\n\r\n    Parameters.attractor = attractorNames.DeJong;\r\n\r\n    const attractors = {};\r\n    attractors[attractorNames.Bedhead] = new BedHeadAttractor();\r\n    attractors[attractorNames.Clifford] = new CliffordAttractor();\r\n    attractors[attractorNames.DeJong] = new DeJongAttractor();\r\n    attractors[attractorNames.FractalDream] = new FractalDreamAttractor();\r\n\r\n    const compositings = {};\r\n    compositings[compositingNames.color] = new CompositingColor();\r\n    compositings[compositingNames.dark] = new CompositingDark();\r\n    compositings[compositingNames.light] = new CompositingLight();\r\n\r\n    let totalPoints: number;\r\n    function setTotalPoints(total: number): void {\r\n        totalPoints = total;\r\n        Page.Canvas.setIndicatorText(\"points-drawn\", totalPoints.toLocaleString());\r\n    }\r\n    setTotalPoints(0);\r\n\r\n    let shouldComposeAgain: boolean;\r\n    Parameters.shouldComposeAgainObservers.push(() => shouldComposeAgain = true);\r\n\r\n    const MAX_STEP_SIZE = Math.pow(2, 17);\r\n    let attractor: Attractor;\r\n    let compositing: Compositing;\r\n    function mainLoop() {\r\n        if (needToRestartRendering) {\r\n            needToRestartRendering = false;\r\n            setTotalPoints(0);\r\n\r\n            attractor = attractors[Parameters.attractor];\r\n            attractor.reset();\r\n\r\n            compositing = compositings[Parameters.compositing];\r\n            compositing.initialize();\r\n\r\n            Infos.setColors(compositing.foregroundColor, compositing.backgroundColor);\r\n        }\r\n\r\n        if (totalPoints < Parameters.nbPointsNeeded) {\r\n            compositing.bindTopLayer();\r\n            const stepSize = Math.ceil(Math.min(MAX_STEP_SIZE, Parameters.nbPointsNeeded - totalPoints));\r\n            if (attractor.drawXPoints(stepSize)) {\r\n                setTotalPoints(totalPoints + stepSize);\r\n                compositing.compose();\r\n            }\r\n        }\r\n\r\n        if (shouldComposeAgain) {\r\n            shouldComposeAgain = false;\r\n            compositing.updateColors();\r\n            compositing.compose();\r\n            Infos.setColors(compositing.foregroundColor, compositing.backgroundColor);\r\n        }\r\n\r\n        requestAnimationFrame(mainLoop);\r\n    }\r\n\r\n    function initGL() {\r\n        const glParams = {\r\n            alpha: false,\r\n            depth: false,\r\n            preserveDrawingBuffer: true,\r\n        };\r\n        if (!GLCanvas.initGL(glParams)) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    Page.FileControl.addDownloadObserver(ControlsID.DOWNLOAD, () => {\r\n        const figureSize = +Page.Tabs.getValues(ControlsID.DOWNLOAD_SIZE)[0];\r\n\r\n        const nbPointsNeeded = Parameters.computeNbPointsNeeded([figureSize, figureSize]);\r\n        if (nbPointsNeeded > 25000000) {\r\n            const message = \"Rendering your image might take a while \" +\r\n                \"because it requires to draw \" + nbPointsNeeded.toLocaleString() + \" points. \" +\r\n                \"Do you want to proceed?\";\r\n            if (!confirm(message)) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        const canvas2D = document.createElement(\"canvas\");\r\n        const ctx2D = canvas2D.getContext(\"2d\");\r\n\r\n        canvas2D.width = figureSize + 400;\r\n        canvas2D.height = figureSize;\r\n\r\n        const canvasGL = Page.Canvas.getCanvas();\r\n        function isolateCanvasGL() {\r\n            Page.Canvas.showLoader(true);\r\n\r\n            canvasGL.style.position = \"absolute\";\r\n            canvasGL.style.width = figureSize + \"px\";\r\n            canvasGL.style.height = figureSize + \"px\";\r\n            canvasGL.width = figureSize;\r\n            canvasGL.height = figureSize;\r\n\r\n            compositing.initialize();\r\n        }\r\n\r\n        function restoreCanvasGL() {\r\n            canvasGL.style.position = \"\";\r\n            canvasGL.style.width = \"\";\r\n            canvasGL.style.height = \"\";\r\n            Page.Canvas.showLoader(false);\r\n            Page.Canvas.setLoaderText(\"\");\r\n            needToRestartRendering = true;\r\n        }\r\n\r\n        isolateCanvasGL();\r\n\r\n        let nbPoints = 0;\r\n        const maxStepSize = Math.pow(2, 18);\r\n        compositing.bindTopLayer();\r\n        while (nbPoints < nbPointsNeeded) {\r\n            const stepSize = Math.ceil(Math.min(maxStepSize, nbPointsNeeded - nbPoints));\r\n            nbPoints += stepSize;\r\n            attractor.drawXPoints(stepSize);\r\n        }\r\n        compositing.compose();\r\n\r\n        ctx2D.fillStyle = compositing.backgroundColor;\r\n        ctx2D.fillRect(0, 0, canvas2D.width, canvas2D.height);\r\n        ctx2D.drawImage(gl.canvas, 0.5 * (canvas2D.width - figureSize), 0, figureSize, figureSize);\r\n        restoreCanvasGL();\r\n        Infos.drawToCanvas(ctx2D);\r\n\r\n        if ((canvas2D as any).msToBlob) { // for IE\r\n            const blob = (canvas2D as any).msToBlob();\r\n            window.navigator.msSaveBlob(blob, \"image.png\");\r\n        } else {\r\n            canvas2D.toBlob((blob) => {\r\n                const link = document.createElement(\"a\");\r\n                link.download = \"image.png\";\r\n                link.href = URL.createObjectURL(blob);\r\n                link.click();\r\n            });\r\n        }\r\n    });\r\n\r\n    requestAnimationFrame(mainLoop);\r\n}\r\n\r\nmain();\r\n","import { ControlsID, Parameters } from \"../parameters\";\r\nimport Attractor from \"./attractor\";\r\n\r\nimport \"../page-interface-generated\";\r\n\r\nclass BeadheadAttractor extends Attractor {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    public get name(): string {\r\n        return \"Bedhead\";\r\n    }\r\n\r\n    public get formula(): string {\r\n        return `x_{n+1} = sin(x_{n}*y_{n}/b) + cos(a*x_{n} - y_{n})\r\n        y_{n+1} = x_{n} + sin(y_{n})/b`;\r\n    }\r\n\r\n    public get parameters(): string[] {\r\n        return [\r\n            \"a = \" + Parameters.a,\r\n            \"b = \" + Parameters.b,\r\n        ];\r\n    }\r\n\r\n    public toggleParametersVisibility(): void {\r\n        Page.Controls.setVisibility(ControlsID.A, true);\r\n        Page.Controls.setVisibility(ControlsID.B, true);\r\n        Page.Controls.setVisibility(ControlsID.C, false);\r\n        Page.Controls.setVisibility(ControlsID.D, false);\r\n    }\r\n\r\n    protected computeXPoints(nbPoints: number): Float32Array {\r\n        const data = new Float32Array(2 * nbPoints);\r\n\r\n        const a = Parameters.a;\r\n        const b = Parameters.b;\r\n\r\n        this.x = Math.random() * 2 - 1;\r\n        this.y = Math.random() * 2 - 1;\r\n\r\n        const computeNextPoint = (i: number) => {\r\n            data[2 * i + 0] = Math.sin(this.x * this.y / b) + Math.cos(a * this.x - this.y);\r\n            data[2 * i + 1] = this.x + Math.sin(this.y) / b;\r\n\r\n            this.x = data[2 * i + 0];\r\n            this.y = data[2 * i + 1];\r\n        };\r\n\r\n        this.fillData(nbPoints, computeNextPoint);\r\n\r\n        return data;\r\n    }\r\n}\r\n\r\nexport default BeadheadAttractor;\r\n","import GLResource from \"./gl-resource\";\r\nimport VBO from \"./vbo\";\r\n\r\nfunction notImplemented(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    alert(\"NOT IMPLEMENTED YET\");\r\n}\r\n\r\nfunction bindUniformFloat(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number | number[]): void;\r\nfunction bindUniformFloat(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    if (Array.isArray(value)) {\r\n        gl.uniform1fv(location, value);\r\n    } else {\r\n        gl.uniform1f(location, value);\r\n    }\r\n}\r\n\r\nfunction bindUniformFloat2v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform2fv(location, value);\r\n}\r\n\r\nfunction bindUniformFloat3v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform3fv(location, value);\r\n}\r\n\r\nfunction bindUniformFloat4v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform4fv(location, value);\r\n}\r\n\r\nfunction bindUniformInt(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number | number[]): void;\r\nfunction bindUniformInt(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: any): void {\r\n    if (Array.isArray(value)) {\r\n        gl.uniform1iv(location, value);\r\n    } else {\r\n        gl.uniform1iv(location, value);\r\n    }\r\n}\r\n\r\nfunction bindUniformInt2v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform2iv(location, value);\r\n}\r\n\r\nfunction bindUniformInt3v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform3iv(location, value);\r\n}\r\n\r\nfunction bindUniformInt4v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniform4iv(location, value);\r\n}\r\n\r\nfunction bindUniformBool(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: boolean | number): void {\r\n    gl.uniform1i(location, +value);\r\n}\r\n\r\nfunction bindUniformBool2v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value): void {\r\n    gl.uniform2iv(location, value);\r\n}\r\n\r\nfunction bindUniformBool3v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value): void {\r\n    gl.uniform3iv(location, value);\r\n}\r\n\r\nfunction bindUniformBool4v(gl: WebGLRenderingContext, location: WebGLUniformLocation, value): void {\r\n    gl.uniform4iv(location, value);\r\n}\r\n\r\nfunction bindUniformFloatMat2(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniformMatrix2fv(location, false, value);\r\n}\r\n\r\nfunction bindUniformFloatMat3(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniformMatrix3fv(location, false, value);\r\n}\r\n\r\nfunction bindUniformFloatMat4(gl: WebGLRenderingContext, location: WebGLUniformLocation, value: number[]): void {\r\n    gl.uniformMatrix4fv(location, false, value);\r\n}\r\n\r\nfunction bindSampler2D(gl: WebGLRenderingContext, location: WebGLUniformLocation, unitNb: number,\r\n                       value: WebGLTexture): void {\r\n    gl.uniform1i(location, unitNb);\r\n    gl.activeTexture(gl[\"TEXTURE\" + unitNb]);\r\n    gl.bindTexture(gl.TEXTURE_2D, value);\r\n}\r\n\r\nfunction bindSamplerCube(gl: WebGLRenderingContext, location: WebGLUniformLocation, unitNb: number,\r\n                         value: WebGLTexture): void {\r\n    gl.uniform1i(location, unitNb);\r\n    gl.activeTexture(gl[\"TEXTURE\" + unitNb]);\r\n    gl.bindTexture(gl.TEXTURE_CUBE_MAP, value);\r\n}\r\n\r\n/* From WebGL spec:\r\n* http://www.khronos.org/registry/webgl/specs/latest/1.0/#5.14 */\r\nconst types = {\r\n    0x8B50: { str: \"FLOAT_VEC2\", binder: bindUniformFloat2v },\r\n    0x8B51: { str: \"FLOAT_VEC3\", binder: bindUniformFloat3v },\r\n    0x8B52: { str: \"FLOAT_VEC4\", binder: bindUniformFloat4v },\r\n    0x8B53: { str: \"INT_VEC2\", binder: bindUniformInt2v },\r\n    0x8B54: { str: \"INT_VEC3\", binder: bindUniformInt3v },\r\n    0x8B55: { str: \"INT_VEC4\", binder: bindUniformInt4v },\r\n    0x8B56: { str: \"BOOL\", binder: bindUniformBool },\r\n    0x8B57: { str: \"BOOL_VEC2\", binder: bindUniformBool2v },\r\n    0x8B58: { str: \"BOOL_VEC3\", binder: bindUniformBool3v },\r\n    0x8B59: { str: \"BOOL_VEC4\", binder: bindUniformBool4v },\r\n    0x8B5A: { str: \"FLOAT_MAT2\", binder: bindUniformFloatMat2 },\r\n    0x8B5B: { str: \"FLOAT_MAT3\", binder: bindUniformFloatMat3 },\r\n    0x8B5C: { str: \"FLOAT_MAT4\", binder: bindUniformFloatMat4 },\r\n    0x8B5E: { str: \"SAMPLER_2D\", binder: bindSampler2D },\r\n    0x8B60: { str: \"SAMPLER_CUBE\", binder: bindSamplerCube },\r\n    0x1400: { str: \"BYTE\", binder: notImplemented },\r\n    0x1401: { str: \"UNSIGNED_BYTE\", binder: notImplemented },\r\n    0x1402: { str: \"SHORT\", binder: notImplemented },\r\n    0x1403: { str: \"UNSIGNED_SHORT\", binder: notImplemented },\r\n    0x1404: { str: \"INT\", binder: bindUniformInt },\r\n    0x1405: { str: \"UNSIGNED_INT\", binder: notImplemented },\r\n    0x1406: { str: \"FLOAT\", binder: bindUniformFloat },\r\n};\r\n\r\ninterface IShaderUniform {\r\n    value: boolean | boolean[] | number | number[] | WebGLTexture | WebGLTexture[];\r\n    loc: WebGLUniformLocation;\r\n    size: number;\r\n    type: number;\r\n}\r\n\r\ninterface IShaderAttribute {\r\n    VBO: VBO;\r\n    loc: GLint;\r\n    size: number;\r\n    type: number;\r\n}\r\n\r\nclass ShaderProgram extends GLResource {\r\n    public u: IShaderUniform[];\r\n    public a: IShaderAttribute[];\r\n\r\n    private id: WebGLProgram;\r\n    private uCount: number;\r\n    private aCount: number;\r\n\r\n    constructor(gl: WebGLRenderingContext, vertexSource: string, fragmentSource: string) {\r\n        function createShader(type: GLenum, source: string): WebGLShader {\r\n            const shader = gl.createShader(type);\r\n            gl.shaderSource(shader, source);\r\n            gl.compileShader(shader);\r\n\r\n            const compileSuccess = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n            if (!compileSuccess) {\r\n                console.error(gl.getShaderInfoLog(shader));\r\n                gl.deleteShader(shader);\r\n                return null;\r\n            }\r\n\r\n            return shader;\r\n        }\r\n\r\n        super(gl);\r\n\r\n        this.id = null;\r\n        this.uCount = 0;\r\n        this.aCount = 0;\r\n\r\n        const vertexShader = createShader(gl.VERTEX_SHADER, vertexSource);\r\n        const fragmentShader = createShader(gl.FRAGMENT_SHADER, fragmentSource);\r\n\r\n        const id = gl.createProgram();\r\n        gl.attachShader(id, vertexShader);\r\n        gl.attachShader(id, fragmentShader);\r\n        gl.linkProgram(id);\r\n\r\n        const linkSuccess = gl.getProgramParameter(id, gl.LINK_STATUS);\r\n        if (!linkSuccess) {\r\n            console.error(gl.getProgramInfoLog(id));\r\n            gl.deleteProgram(id);\r\n        } else {\r\n            this.id = id;\r\n\r\n            this.introspection();\r\n        }\r\n    }\r\n\r\n    public freeGLResources(): void {\r\n        super.gl().deleteProgram(this.id);\r\n        this.id = null;\r\n    }\r\n\r\n    public use(): void {\r\n        super.gl().useProgram(this.id);\r\n    }\r\n\r\n    public bindUniforms(): void {\r\n        const gl: WebGLRenderingContext = super.gl();\r\n        let currTextureUnitNb: number = 0;\r\n\r\n        Object.keys(this.u).forEach((uName) => {\r\n            const uniform = this.u[uName];\r\n            if (uniform.value !== null) {\r\n                if (uniform.type === 0x8B5E || uniform.type === 0x8B60) {\r\n                    const unitNb: number = currTextureUnitNb;\r\n                    types[uniform.type].binder(gl, uniform.loc, unitNb, uniform.value);\r\n                    currTextureUnitNb++;\r\n                } else {\r\n                    types[uniform.type].binder(gl, uniform.loc, uniform.value);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public bindAttributes(): void {\r\n        Object.keys(this.a).forEach((aName) => {\r\n            const attribute = this.a[aName];\r\n            if (attribute.VBO !== null) {\r\n                attribute.VBO.bind(attribute.loc);\r\n            }\r\n        });\r\n    }\r\n\r\n    public bindUniformsAndAttributes(): void {\r\n        this.bindUniforms();\r\n        this.bindAttributes();\r\n    }\r\n\r\n    private introspection(): void {\r\n        const gl = super.gl();\r\n\r\n        this.uCount = gl.getProgramParameter(this.id, gl.ACTIVE_UNIFORMS);\r\n        this.u = [];\r\n        for (let i = 0; i < this.uCount; ++i) {\r\n            const uniform = gl.getActiveUniform(this.id, i);\r\n            const name = uniform.name;\r\n\r\n            this.u[name] = {\r\n                loc: gl.getUniformLocation(this.id, name),\r\n                size: uniform.size,\r\n                type: uniform.type,\r\n                value: null,\r\n            };\r\n        }\r\n\r\n        this.aCount = gl.getProgramParameter(this.id, gl.ACTIVE_ATTRIBUTES);\r\n        this.a = [];\r\n        for (let i = 0; i < this.aCount; ++i) {\r\n            const attribute = gl.getActiveAttrib(this.id, i);\r\n            const name = attribute.name;\r\n\r\n            this.a[name] = {\r\n                VBO: null,\r\n                loc: gl.getAttribLocation(this.id, name),\r\n                size: attribute.size,\r\n                type: attribute.type,\r\n            };\r\n        }\r\n    }\r\n}\r\n\r\nexport default ShaderProgram;\r\n","type LoadCallback = (success: boolean)  => void;\r\n\r\ninterface ICachedSource {\r\n    text: string;\r\n    pending: boolean;\r\n    failed: boolean;\r\n    callbacks: LoadCallback[];\r\n}\r\n\r\nconst cachedSources: { [id: string]: ICachedSource } = {};\r\n\r\n/* Fetches asynchronously the shader source from server and stores it in cache. */\r\nfunction loadSource(filename: string, callback: LoadCallback) {\r\n    function callAndClearCallbacks(cached: ICachedSource) {\r\n        for (const cachedCallback of cached.callbacks) {\r\n            cachedCallback(!cached.failed);\r\n        }\r\n\r\n        cached.callbacks = [];\r\n    }\r\n\r\n    if (typeof cachedSources[filename] === \"undefined\") {\r\n        cachedSources[filename] = {\r\n            callbacks: [callback],\r\n            failed: false,\r\n            pending: true,\r\n            text: null,\r\n        };\r\n        const cached = cachedSources[filename];\r\n\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open(\"GET\", \"./shaders/\" + filename, true);\r\n        xhr.onload = () => {\r\n            if (xhr.readyState === 4) {\r\n                cached.pending = false;\r\n\r\n                if (xhr.status === 200) {\r\n                    cached.text = xhr.responseText;\r\n                    cached.failed = false;\r\n                } else {\r\n                    console.error(\"Cannot load '\" + filename + \"' shader source: \" + xhr.statusText);\r\n                    cached.failed = true;\r\n                }\r\n\r\n                callAndClearCallbacks(cached);\r\n            }\r\n        };\r\n        xhr.onerror = () => {\r\n            console.error(\"Cannot load '\" + filename + \"' shader source: \" + xhr.statusText);\r\n            cached.pending = false;\r\n            cached.failed = true;\r\n            callAndClearCallbacks(cached);\r\n        };\r\n\r\n        xhr.send(null);\r\n    } else {\r\n        const cached = cachedSources[filename];\r\n\r\n        if (cached.pending === true) {\r\n            cached.callbacks.push(callback);\r\n        } else {\r\n            cached.callbacks = [callback];\r\n            callAndClearCallbacks(cached);\r\n        }\r\n    }\r\n}\r\n\r\nfunction getSource(filename: string): string {\r\n    return cachedSources[filename].text;\r\n}\r\n\r\nexport {\r\n    getSource,\r\n    loadSource,\r\n};\r\n","class Boundaries {\r\n    public minX: number;\r\n    public maxX: number;\r\n    public minY: number;\r\n    public maxY: number;\r\n\r\n    public constructor() {\r\n        this.minX = 0;\r\n        this.maxX = 0;\r\n        this.minY = 0;\r\n        this.maxY = 0;\r\n    }\r\n\r\n    public get center(): number[] {\r\n        return [\r\n            0.5 * (this.maxX + this.minX),\r\n            0.5 * (this.maxY + this.minY),\r\n        ];\r\n    }\r\n\r\n    public get maxDimension(): number {\r\n        return Math.max(this.maxX - this.minX, this.maxY - this.minY);\r\n    }\r\n\r\n    public includePoint(x: number, y: number) {\r\n        this.minX = Math.min(this.minX, x);\r\n        this.minY = Math.min(this.minY, y);\r\n\r\n        this.maxX = Math.max(this.maxX, x);\r\n        this.maxY = Math.max(this.maxY, y);\r\n    }\r\n}\r\n\r\nexport default Boundaries;\r\n","import { ControlsID, Parameters } from \"../parameters\";\r\nimport Attractor from \"./attractor\";\r\n\r\nimport \"../page-interface-generated\";\r\n\r\nclass CliffordAttractor extends Attractor {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    public get name(): string {\r\n        return \"Clifford\";\r\n    }\r\n\r\n    public get formula(): string {\r\n        return `x_{n+1} = sin(a*y_{n}) + c*cos(a*x_{n})\r\n        y_{n+1} = sin(c*x_{n}) + d*cos(b*y_{n})`;\r\n    }\r\n\r\n    public get parameters(): string[] {\r\n        return [\r\n            \"a = \" + Parameters.a,\r\n            \"b = \" + Parameters.b,\r\n            \"c = \" + Parameters.c,\r\n            \"d = \" + Parameters.d,\r\n        ];\r\n    }\r\n\r\n    public toggleParametersVisibility(): void {\r\n        Page.Controls.setVisibility(ControlsID.A, true);\r\n        Page.Controls.setVisibility(ControlsID.B, true);\r\n        Page.Controls.setVisibility(ControlsID.C, true);\r\n        Page.Controls.setVisibility(ControlsID.D, true);\r\n    }\r\n\r\n    protected computeXPoints(nbPoints: number): Float32Array {\r\n        const data = new Float32Array(2 * nbPoints);\r\n\r\n        const a = Parameters.a;\r\n        const b = Parameters.b;\r\n        const c = Parameters.c;\r\n        const d = Parameters.d;\r\n\r\n        this.x = Math.random() * 2 - 1;\r\n        this.y = Math.random() * 2 - 1;\r\n\r\n        const computeNextPoint = (i: number) => {\r\n            data[2 * i + 0] = Math.sin(a * this.y) + c * Math.cos(a * this.x);\r\n            data[2 * i + 1] = Math.sin(c * this.x) + d * Math.cos(b * this.y);\r\n\r\n            this.x = data[2 * i + 0];\r\n            this.y = data[2 * i + 1];\r\n        };\r\n\r\n        this.fillData(nbPoints, computeNextPoint);\r\n\r\n        return data;\r\n    }\r\n}\r\n\r\nexport default CliffordAttractor;\r\n","import { ControlsID, Parameters } from \"../parameters\";\r\nimport Attractor from \"./attractor\";\r\n\r\nimport \"../page-interface-generated\";\r\n\r\nclass DeJongAttractor extends Attractor {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    public get name(): string {\r\n        return \"De Jong\";\r\n    }\r\n\r\n    public get formula(): string {\r\n        return `x_{n+1} = sin(a*y_{n}) - cos(b*x_{n})\r\n        y_{n+1} = sin(c*x_{n}) - cos(d*y_{n})`;\r\n    }\r\n\r\n    public get parameters(): string[] {\r\n        return [\r\n            \"a = \" + Parameters.a,\r\n            \"b = \" + Parameters.b,\r\n            \"c = \" + Parameters.c,\r\n            \"d = \" + Parameters.d,\r\n        ];\r\n    }\r\n\r\n    public toggleParametersVisibility(): void {\r\n        Page.Controls.setVisibility(ControlsID.A, true);\r\n        Page.Controls.setVisibility(ControlsID.B, true);\r\n        Page.Controls.setVisibility(ControlsID.C, true);\r\n        Page.Controls.setVisibility(ControlsID.D, true);\r\n    }\r\n\r\n    protected computeXPoints(nbPoints: number): Float32Array {\r\n        const data = new Float32Array(2 * nbPoints);\r\n\r\n        const a = Parameters.a;\r\n        const b = Parameters.b;\r\n        const c = Parameters.c;\r\n        const d = Parameters.d;\r\n\r\n        this.x = Math.random() * 2 - 1;\r\n        this.y = Math.random() * 2 - 1;\r\n\r\n        const computeNextPoint = (i: number) => {\r\n            data[2 * i + 0] = Math.sin(a * this.y) - Math.cos(b * this.x);\r\n            data[2 * i + 1] = Math.sin(c * this.x) - Math.cos(d * this.y);\r\n\r\n            this.x = data[2 * i + 0];\r\n            this.y = data[2 * i + 1];\r\n        };\r\n\r\n        this.fillData(nbPoints, computeNextPoint);\r\n\r\n        return data;\r\n    }\r\n}\r\n\r\nexport default DeJongAttractor;\r\n","import { ControlsID, Parameters } from \"../parameters\";\r\nimport Attractor from \"./attractor\";\r\n\r\nimport \"../page-interface-generated\";\r\n\r\nclass FractalDreamAttractor extends Attractor {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    public get name(): string {\r\n        return \"Fractal Dream\";\r\n    }\r\n\r\n    public get formula(): string {\r\n        return `x_{n+1} = sin(b*y_{n}) + c*sin(b*x_{n})\r\n        y_{n+1} = sin(a*x_{n}) + d*sin(a*y_{n})`;\r\n    }\r\n\r\n    public get parameters(): string[] {\r\n        return [\r\n            \"a = \" + Parameters.a,\r\n            \"b = \" + Parameters.b,\r\n            \"c = \" + Parameters.c,\r\n            \"d = \" + Parameters.d,\r\n        ];\r\n    }\r\n\r\n    public toggleParametersVisibility(): void {\r\n        Page.Controls.setVisibility(ControlsID.A, true);\r\n        Page.Controls.setVisibility(ControlsID.B, true);\r\n        Page.Controls.setVisibility(ControlsID.C, true);\r\n        Page.Controls.setVisibility(ControlsID.D, true);\r\n    }\r\n\r\n    protected computeXPoints(nbPoints: number): Float32Array {\r\n        const data = new Float32Array(2 * nbPoints);\r\n\r\n        const a = Parameters.a;\r\n        const b = Parameters.b;\r\n        const c = Parameters.c;\r\n        const d = Parameters.d;\r\n\r\n        this.x = Math.random() * 2 - 1;\r\n        this.y = Math.random() * 2 - 1;\r\n\r\n        const computeNextPoint = (i: number) => {\r\n            data[2 * i + 0] = Math.sin(b * this.y) + c * Math.sin(b * this.x);\r\n            data[2 * i + 1] = Math.sin(a * this.x) + d * Math.sin(a * this.y);\r\n\r\n            this.x = data[2 * i + 0];\r\n            this.y = data[2 * i + 1];\r\n        };\r\n\r\n        this.fillData(nbPoints, computeNextPoint);\r\n\r\n        return data;\r\n    }\r\n}\r\n\r\nexport default FractalDreamAttractor;\r\n","import FBO from \"../gl-utils/fbo\";\r\nimport * as GLCanvas from \"../gl-utils/gl-canvas\";\r\nimport { gl } from \"../gl-utils/gl-canvas\";\r\nimport Shader from \"../gl-utils/shader\";\r\nimport * as ShaderManager from \"../gl-utils/shader-manager\";\r\nimport VBO from \"../gl-utils/vbo\";\r\nimport Viewport from \"../gl-utils/viewport\";\r\n\r\nimport { Parameters } from \"../parameters\";\r\nimport CompositingBase from \"./compositing\";\r\n\r\nimport \"../page-interface-generated\";\r\n\r\nfunction HSVToRGB(hue: number, saturation: number, value: number): number[] {\r\n    let r = 0;\r\n    let g = 0;\r\n    let b = 0;\r\n\r\n    hue = (hue %  1) * 6;\r\n\r\n    if (hue < 1) {\r\n        r = 1;\r\n        g = hue;\r\n    } else if (hue < 2) {\r\n        r = 2 - hue;\r\n        g = 1;\r\n    } else if (hue < 3) {\r\n        g = 1;\r\n        b = hue - 2;\r\n    } else if (hue < 4) {\r\n        g = 4 - hue;\r\n        b = 1;\r\n    } else if (hue < 5) {\r\n        r = hue - 4;\r\n        b = 1;\r\n    } else if (hue < 6) {\r\n        r = 1;\r\n        b = 6 - hue;\r\n    }\r\n\r\n    r = value * (1 - saturation * (1 - r));\r\n    b = value * (1 - saturation * (1 - b));\r\n    g = value * (1 - saturation * (1 - g));\r\n\r\n    return [r, g, b, 1];\r\n}\r\n\r\nclass CompositingColor extends CompositingBase {\r\n    private _FBO: FBO;\r\n\r\n    private _compositionShader: Shader;\r\n\r\n    private _texture: WebGLTexture;\r\n    private _currentTextureSize: number;\r\n\r\n    private _foregroundRgb: number[];\r\n    private _backgroundRgb: number[];\r\n\r\n    public constructor() {\r\n        super();\r\n        this.backgroundColor = \"red\";\r\n        this.foregroundColor = \"yellow\";\r\n\r\n        ShaderManager.buildShader(\r\n            {\r\n                fragmentFilename: \"compose.frag\",\r\n                vertexFilename: \"compose.vert\",\r\n                injected: {},\r\n            },\r\n            (newShader) => {\r\n                if (newShader !== null) {\r\n                    this._compositionShader = newShader;\r\n                    /* tslint:disable:no-string-literal */\r\n                    this._compositionShader.a[\"aCorner\"].VBO = VBO.createQuad(gl, -1, -1, 1, 1);\r\n                    /* tslint:enable:no-string-literal */\r\n                }\r\n            },\r\n        );\r\n\r\n        const size = 512;\r\n\r\n        this._FBO = new FBO(gl, size, size);\r\n        this._currentTextureSize = 0;\r\n        this.initializeTexture(size);\r\n    }\r\n\r\n    public initialize(): void {\r\n        function upperPowerOfTwo(x: number): number {\r\n            return Math.pow(2, Math.ceil(Math.log(x) * Math.LOG2E));\r\n        }\r\n\r\n        const canvasSize = Page.Canvas.getSize();\r\n        const minSize = Math.min(canvasSize[0], canvasSize[1]);\r\n        const neededSize = upperPowerOfTwo(minSize);\r\n        if (this._currentTextureSize !== neededSize) {\r\n            this.initializeTexture(neededSize);\r\n            this._FBO.width = neededSize;\r\n            this._FBO.height = neededSize;\r\n        }\r\n\r\n        gl.clearColor(0, 0, 0, 1);\r\n\r\n        gl.enable(gl.BLEND);\r\n        gl.blendFunc(gl.ONE, gl.ONE);\r\n        gl.blendEquation(gl.FUNC_ADD);\r\n\r\n        GLCanvas.adjustSize();\r\n\r\n        this._FBO.bind([this._texture]);\r\n        gl.clear(gl.COLOR_BUFFER_BIT);\r\n\r\n        FBO.bindDefault(gl);\r\n        gl.clear(gl.COLOR_BUFFER_BIT);\r\n\r\n        this.updateColors();\r\n    }\r\n\r\n    public bindTopLayer(): void {\r\n        this._FBO.bind([this._texture]);\r\n    }\r\n\r\n    public compose(): void {\r\n        if (this._compositionShader) {\r\n            FBO.bindDefault(gl);\r\n            Viewport.setFullCanvas(gl);\r\n            gl.clear(gl.COLOR_BUFFER_BIT);\r\n\r\n            /* tslint:disable:no-string-literal */\r\n            this._compositionShader.u[\"uTexture\"].value = this._texture;\r\n            this._compositionShader.u[\"uForegroundColor\"].value = this._foregroundRgb;\r\n            this._compositionShader.u[\"uBackgroundColor\"].value = this._backgroundRgb;\r\n            /* tslint:enable:no-string-literal */\r\n\r\n            this._compositionShader.use();\r\n            this._compositionShader.bindUniformsAndAttributes();\r\n            gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\r\n        }\r\n    }\r\n\r\n    public updateColors(): void {\r\n        function normalizedTo255(x: number): number {\r\n            return Math.floor(255 * x);\r\n        }\r\n        function rgbaToString(rgb: number[]): string {\r\n            return \"rgb(\" + normalizedTo255(rgb[0]) + \",\" +\r\n                normalizedTo255(rgb[1]) + \",\" + normalizedTo255(rgb[2])  + \")\";\r\n        }\r\n\r\n        this._foregroundRgb = HSVToRGB(Parameters.foregroundHue, 0.8, 1);\r\n        this.foregroundColor = rgbaToString(this._foregroundRgb);\r\n\r\n        this._backgroundRgb = HSVToRGB(Parameters.backgroundHue, 0.2, 0.85);\r\n        this.backgroundColor = rgbaToString(this._backgroundRgb);\r\n    }\r\n\r\n    /* size parameter should be a power of two */\r\n    private initializeTexture(size: number): void {\r\n        if (this._texture) {\r\n            gl.deleteTexture(this._texture);\r\n            this._texture = null;\r\n        }\r\n\r\n        const uintTexels: number[] = new Array(4 * size * size);\r\n        for (let i = 0; i < uintTexels.length;  ++i) {\r\n            uintTexels[i] = 127;\r\n        }\r\n        const uintData = new Uint8Array(uintTexels);\r\n        this._texture = gl.createTexture();\r\n        gl.bindTexture(gl.TEXTURE_2D, this._texture);\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, size, size, 0, gl.RGBA, gl.UNSIGNED_BYTE, uintData);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\r\n        gl.bindTexture(gl.TEXTURE_2D, null);\r\n\r\n        this._currentTextureSize = size;\r\n    }\r\n}\r\n\r\nexport default CompositingColor;\r\n","import GLResource from \"./gl-resource\";\r\nimport Viewport from \"./viewport\";\r\n\r\nclass FBO extends GLResource {\r\n    public static bindDefault(gl: WebGLRenderingContext, viewport: Viewport = null): void {\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\r\n        if (viewport === null) {\r\n            gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\r\n        } else {\r\n            gl.viewport(viewport.left, viewport.lower, viewport.width, viewport.height);\r\n        }\r\n\r\n    }\r\n\r\n    public width: number;\r\n    public height: number;\r\n    private id: WebGLFramebuffer;\r\n\r\n    constructor(gl: WebGLRenderingContext, width: number, height: number) {\r\n        super(gl);\r\n\r\n        this.id = gl.createFramebuffer();\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n\r\n    public bind(colorBuffers: WebGLTexture[], depthBuffer: WebGLRenderbuffer = null): void {\r\n        const gl = super.gl();\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.id);\r\n        gl.viewport(0, 0, this.width, this.height);\r\n\r\n        for (let i = 0; i < colorBuffers.length; ++i) {\r\n          gl.framebufferTexture2D(\r\n            gl.FRAMEBUFFER, gl[\"COLOR_ATTACHMENT\" + i], gl.TEXTURE_2D, colorBuffers[i], 0);\r\n        }\r\n\r\n        if (depthBuffer) {\r\n          gl.bindRenderbuffer(gl.RENDERBUFFER, depthBuffer);\r\n          gl.framebufferRenderbuffer(\r\n            gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, depthBuffer);\r\n        }\r\n    }\r\n\r\n    public freeGLResources(): void {\r\n        super.gl().deleteFramebuffer(this.id);\r\n        this.id = null;\r\n    }\r\n}\r\n\r\nexport default FBO;\r\n","import * as GLCanvas from \"../gl-utils/gl-canvas\";\r\nimport { gl } from \"../gl-utils/gl-canvas\";\r\nimport Viewport from \"../gl-utils/viewport\";\r\n\r\nimport CompositingBase from \"./compositing\";\r\n\r\nclass CompositingDark extends CompositingBase {\r\n    public constructor() {\r\n        super();\r\n        this.backgroundColor = \"black\";\r\n        this.foregroundColor = \"white\";\r\n    }\r\n\r\n    public initialize(): void {\r\n        gl.clearColor(0, 0, 0, 1);\r\n\r\n        gl.enable(gl.BLEND);\r\n        gl.blendFunc(gl.ONE, gl.ONE);\r\n        gl.blendEquation(gl.FUNC_ADD);\r\n\r\n        GLCanvas.adjustSize();\r\n        Viewport.setFullCanvas(gl);\r\n        gl.clear(gl.COLOR_BUFFER_BIT);\r\n    }\r\n\r\n    /* tslint:disable:no-empty */\r\n    public bindTopLayer(): void {}\r\n    public compose(): void {}\r\n    public updateColors(): void {}\r\n    /* tslint:enable:no-empty */\r\n}\r\n\r\nexport default CompositingDark;\r\n","import * as GLCanvas from \"../gl-utils/gl-canvas\";\r\nimport { gl } from \"../gl-utils/gl-canvas\";\r\nimport Viewport from \"../gl-utils/viewport\";\r\n\r\nimport CompositingBase from \"./compositing\";\r\n\r\nclass CompositingLight extends CompositingBase {\r\n    public constructor() {\r\n        super();\r\n        this.backgroundColor = \"white\";\r\n        this.foregroundColor = \"black\";\r\n    }\r\n\r\n    public initialize(): void {\r\n        gl.clearColor(1, 1, 1, 1);\r\n\r\n        gl.enable(gl.BLEND);\r\n        gl.blendFunc(gl.ONE, gl.ONE);\r\n        gl.blendEquation(gl.FUNC_REVERSE_SUBTRACT);\r\n\r\n        GLCanvas.adjustSize();\r\n        Viewport.setFullCanvas(gl);\r\n        gl.clear(gl.COLOR_BUFFER_BIT);\r\n    }\r\n\r\n    /* tslint:disable:no-empty */\r\n    public bindTopLayer(): void {}\r\n    public compose(): void {}\r\n    public updateColors(): void {}\r\n    /* tslint:enable:no-empty */\r\n}\r\n\r\nexport default CompositingLight;\r\n"],"sourceRoot":""}